/*
 * Copyright 2017-2018 Volvo Car Corporation
 * This file is covered by LICENSE file in the root of this project
 */

// generic defaults
cc_defaults {
    name: "volvocars_cc_defaults",
    compile_multilib: "64",
    vendor: true,

    cflags: [
        "-fexceptions",
        "-Wall",
        "-Wextra",
        "-Wunreachable-code",
    ],

    tidy: true,
    tidy_checks: [
        "android-*",
        "clang-analyzer-*",
        "-clang-analyzer-alpha*",
        "google-*",
        "-google-build-using-namespace", // its really fine in cpp files, saves a lot of typing
        "cert-*",
        "modernize-*",
        "-modernize-raw-string-literal", //for short ones it is pointless
        "-modernize-use-auto", // This is not always an improvement
        "performance-*",
        "readability-*",
        "-readability-braces-around-statements", //some are short enough/oneliners
        "-readability-redundant-declaration", //clang does not filters out errors in external/libcxx/include/new
        "-readability-else-after-return", // some readable patterns are causing warnings, this readability choice is better left to humans
    ],
    tidy_flags: [
        "-header-filter=^vendor/volvocars/(?!external).*$",
    ],
}

// high quality implementation
cc_defaults {
    name: "volvocars_cc_defaults_hq",
    defaults: ["volvocars_cc_defaults"],

    cflags: [
        "-Werror",
    ],

    tidy_flags: [
        "-warnings-as-errors=" +
        "*," +
        "-performance-unnecessary-value-param," +
        "-google-readability-casting," +
        "-google-default-arguments," +
        "-performance-unnecessary-value-param," +
        "-cert-env33-c",
    ],
}

// high quality test cases
cc_defaults {
    name: "volvocars_cc_defaults_hq_tests",
    defaults: ["volvocars_cc_defaults_hq"],

    tidy_checks: [
        "-cert-err58-cpp", //all gtest test cases creates static objects
        "-modernize-use-equals-delete", //gtest testcase implementation
        "-modernize-use-equals-default", //gtest testcase implementation
        "-clang-analyzer-cplusplus.NewDelete", // confirmed false positive https://github.com/google/googletest/issues/853
        "-clang-analyzer-optin.cplusplus.VirtualCall", //Something strange about NiceMock<T> destructor when T has a destructor
        "-clang-analyzer-*", // confirmed false positive https://github.com/google/googletest/issues/853, hard to fix this error without a new version of GTest/Gmock

    ],
}
