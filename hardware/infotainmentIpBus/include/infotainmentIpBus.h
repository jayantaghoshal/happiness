/*
 * Copyright 2017 Volvo Car Corporation
 * This file is covered by LICENSE file in the root of this project
 */

//
// infotainmentIpBus.h
//
// Code automatically generated by asnparse.$Revision: 1.56 $ $Date: 2012/04/12 09:02:11CEST $ GMT
// Generated: 11:35:14 fredag 2016 december 23
// ASN File: C:\temp\icup\ihu_infotainment-ip-service\libasn1\spec\infotainmentIpBus.asn time:12:19:18 tisdag 2016
// november 1
//

#pragma once

#include "pl/asn_base/asn_base.h"

typedef struct Icb_VccPduHeader_t* Icb_VccPduHeader;
typedef U32 Icb_ErrorCode;
typedef struct Icb_OpGeneric_Request_t* Icb_OpGeneric_Request;
typedef struct Icb_OpGeneric_SetRequestNoReturn_t* Icb_OpGeneric_SetRequestNoReturn;
typedef struct Icb_OpGeneric_Response_t* Icb_OpGeneric_Response;
typedef struct Icb_DateTime_t* Icb_DateTime;
typedef U32 Icb_SourceStatus;
typedef U32 Icb_OnOffStatus;
typedef U32 Icb_SecurityStatus;
typedef U32 Icb_GenericOkStatus;
typedef struct Icb_AudioStatus_t* Icb_AudioStatus;
typedef struct Icb_UUID_t* Icb_UUID;
typedef struct Icb_PartIdentifier_t* Icb_PartIdentifier;
typedef U32 Icb_SBTrigger;
typedef struct Icb_SBWarning_t* Icb_SBWarning;
typedef struct Icb_OpSVTStatus_Response_t* Icb_OpSVTStatus_Response;
typedef struct Icb_OpSVTStatus_Notification_t* Icb_OpSVTStatus_Notification;
typedef struct Icb_OpTNStatus_Response_t* Icb_OpTNStatus_Response;
typedef struct Icb_OpTNStatus_Notification_t* Icb_OpTNStatus_Notification;
typedef struct Icb_TelemSettings_t* Icb_TelemSettings;
typedef struct Icb_SimpleVehiclePosition_t* Icb_SimpleVehiclePosition;
typedef U32 Icb_ActivationStatusChange;
typedef U32 Icb_ActivationStatus;
typedef U32 Icb_OnCallService;
typedef U32 Icb_OnOffSetting;
typedef struct Icb_OpServiceActivation_Response_t* Icb_OpServiceActivation_Response;
typedef U32 Icb_RescueStatus;
typedef U32 Icb_ButtonStatus;
typedef U32 Icb_VoiceStatus;
typedef U32 Icb_MessageStatus;
typedef U32 Icb_PSAPStatus;
typedef U32 Icb_SendToCarId;
typedef U32 Icb_SendToCarConfirmation;
typedef U32 Icb_PreferredEcalls;
typedef struct Icb_OpTextMessage_SetRequest_t* Icb_OpTextMessage_SetRequest;
typedef struct Icb_OpIHUSystemInfo_Response_t* Icb_OpIHUSystemInfo_Response;
typedef struct Icb_UserPrivacySettings_t* Icb_UserPrivacySettings;
typedef struct Icb_ClimateTimerError_t* Icb_ClimateTimerError;
typedef U32 Icb_TimerError;
typedef U32 Icb_TimerStatus;
typedef U32 Icb_TimerType;
typedef U32 Icb_OnOff;
typedef struct Icb_OpSoHWarning_Notification_t* Icb_OpSoHWarning_Notification;
typedef U32 Icb_SettingType;
typedef struct Icb_OpServiceBooking_Notification_t* Icb_OpServiceBooking_Notification;
typedef struct Icb_OpSoHPackageUploaded_Notification_t* Icb_OpSoHPackageUploaded_Notification;
typedef U32 Icb_DataCounterValue;
typedef U32 Icb_DataCounter;
typedef struct Icb_OpPSIMResetDataCounter_SetRequest_t* Icb_OpPSIMResetDataCounter_SetRequest;
typedef struct Icb_OpPSIMResetDataCounter_Response_t* Icb_OpPSIMResetDataCounter_Response;
typedef struct Icb_APNConfiguration_t* Icb_APNConfiguration;
typedef struct Icb_AutomaticAPNConfiguration_t* Icb_AutomaticAPNConfiguration;
typedef struct Icb_APNSelection_t* Icb_APNSelection;
typedef struct Icb_OpPSIMConnect_SetRequest_t* Icb_OpPSIMConnect_SetRequest;
typedef struct Icb_OpPSIMConnect_Response_t* Icb_OpPSIMConnect_Response;
typedef U32 Icb_PSIMConnectionStatus;
typedef U32 Icb_WirelessTechnology;
typedef struct Icb_OpPSIMRoamingConfiguration_SetRequest_t* Icb_OpPSIMRoamingConfiguration_SetRequest;
typedef struct Icb_OpPSIMRoamingConfiguration_Response_t* Icb_OpPSIMRoamingConfiguration_Response;
typedef struct Icb_OpAccessRightPinCode_Response_t* Icb_OpAccessRightPinCode_Response;
typedef U32 Icb_Ecu;
typedef struct Icb_OpFactoryDefaultRestore_Response_t* Icb_OpFactoryDefaultRestore_Response;
typedef struct Icb_OpConnectivityStatus_Response_t* Icb_OpConnectivityStatus_Response;
typedef struct Icb_OpConnectivityStatus_Notification_t* Icb_OpConnectivityStatus_Notification;
typedef U32 Icb_WorkshopWlanConnectionResult;
typedef struct Icb_OpWorkshopWlanDetected_Notification_t* Icb_OpWorkshopWlanDetected_Notification;
typedef U32 Icb_InternetSource;
typedef struct Icb_OpInternetSourceCtrlBT_SetRequest_t* Icb_OpInternetSourceCtrlBT_SetRequest;
typedef struct Icb_OpInternetSourceCtrlBT_Response_t* Icb_OpInternetSourceCtrlBT_Response;
typedef struct Icb_OpInternetSourceCtrlBT_Notification_t* Icb_OpInternetSourceCtrlBT_Notification;
typedef struct Icb_OpInternetSourceCtrlUSB_SetRequest_t* Icb_OpInternetSourceCtrlUSB_SetRequest;
typedef struct Icb_OpInternetSourceCtrlUSB_Response_t* Icb_OpInternetSourceCtrlUSB_Response;
typedef struct Icb_OpInternetSourceCtrlUSB_Notification_t* Icb_OpInternetSourceCtrlUSB_Notification;
typedef struct Icb_OpPSIMMessage_SetRequest_t* Icb_OpPSIMMessage_SetRequest;
typedef U32 Icb_WLANMode;
typedef U32 Icb_WLANFrequencyBand;
typedef U32 Icb_WLANChannelWidthData;
typedef ASN_OctetString Icb_SSID;
typedef ASN_OctetString Icb_WLAN_Password;
typedef struct Icb_WLANConnDevice_t* Icb_WLANConnDevice;
typedef U32 Icb_WLANConnectStatus;
typedef ASN_OctetString Icb_WLANExternalPassword;
typedef struct Icb_OpWLANSTADisconnect_Response_t* Icb_OpWLANSTADisconnect_Response;
typedef U32 Icb_WLANAPCurrentStatus;
typedef U32 Icb_WLANConnectionStatus;
typedef U32 Icb_WLANSecurityType;
typedef struct Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_t* Icb_OpWLANSTAForgetRememberedNetwk_SetRequest;
typedef struct Icb_OpWLANSTAForgetRememberedNetwk_Response_t* Icb_OpWLANSTAForgetRememberedNetwk_Response;
typedef ASN_OctetString Icb_PinCode;
typedef U32 Icb_SimSecuritySetting;
typedef struct Icb_OpPSIMSecurity_Response_t* Icb_OpPSIMSecurity_Response;
typedef struct Icb_PinPukCommand_t* Icb_PinPukCommand;
typedef struct Icb_PinPukCodes_t* Icb_PinPukCodes;
typedef struct Icb_PinPinCodes_t* Icb_PinPinCodes;
typedef struct Icb_RegisterState_t* Icb_RegisterState;
typedef struct Icb_NwOperatorId_t* Icb_NwOperatorId;
typedef U32 Icb_NetworkType;
typedef struct Icb_OperatorSelection_t* Icb_OperatorSelection;
typedef struct Icb_SimStatus_t* Icb_SimStatus;
typedef ASN_OctetString Icb_IMSINumber;
typedef U32 Icb_PinTrials;
typedef U32 Icb_PukTrials;
typedef U32 Icb_PhoneOperationMode;
typedef struct Icb_OpPSIMSignalStrength_Notification_t* Icb_OpPSIMSignalStrength_Notification;
typedef ASN_OctetString Icb_UssdCode;
typedef struct Icb_UssdReturnCode_t* Icb_UssdReturnCode;
typedef U32 Icb_UssdStatus;
typedef struct Icb_OpPremiumAudio_SetRequest_t* Icb_OpPremiumAudio_SetRequest;
typedef struct Icb_OpPremiumAudio_Response_t* Icb_OpPremiumAudio_Response;
typedef U32 Icb_AssistCallAction;
typedef ASN_OctetString Icb_MacAddress;
typedef U32 Icb_RadioMode;
typedef U32 Icb_RadioFrequencyHz;
typedef struct Icb_OpDLCConnectedSignal_Response_t* Icb_OpDLCConnectedSignal_Response;
typedef struct Icb_DRVehiclePosition_t* Icb_DRVehiclePosition;
typedef U32 Icb_GnssFixType;
typedef U32 Icb_DeadReckoningType;
typedef struct Icb_GPSSystemTime_t* Icb_GPSSystemTime;
typedef struct Icb_CoordinatesLongLat_t* Icb_CoordinatesLongLat;
typedef struct Icb_Velocity_t* Icb_Velocity;
typedef struct Icb_GNSSUsage_t* Icb_GNSSUsage;
typedef struct Icb_GNSSStatus_t* Icb_GNSSStatus;
typedef struct Icb_NrOfSatellitesPerSystem_t* Icb_NrOfSatellitesPerSystem;
typedef struct Icb_DOPValues_t* Icb_DOPValues;
typedef struct Icb_ReceiverChannelData_t* Icb_ReceiverChannelData;
typedef U32 Icb_SatelliteTrackingStatusType;
typedef struct Icb_ExtendedChannelData_t* Icb_ExtendedChannelData;
typedef struct Icb_ChannelCorrectionData_t* Icb_ChannelCorrectionData;
typedef struct Icb_AccuracyValues_t* Icb_AccuracyValues;
typedef struct Icb_OpRemoteDiagnosticLink_Notification_t* Icb_OpRemoteDiagnosticLink_Notification;
typedef U32 Icb_RemoteDiagInfo;
typedef struct Icb_OpTextFromOperatorToUser_Notification_t* Icb_OpTextFromOperatorToUser_Notification;
typedef struct Icb_OpCurrentJ2534Session_Notification_t* Icb_OpCurrentJ2534Session_Notification;
typedef U32 Icb_DoIPPhase;
typedef U32 Icb_DoIPMode;
typedef U32 Icb_CurrentDoIPConn;
typedef struct Icb_OpRequestUserAuthentication_Request_t* Icb_OpRequestUserAuthentication_Request;
typedef U32 Icb_UserAuthCredentials;
typedef struct Icb_OpTextFromUserToOperator_Notification_t* Icb_OpTextFromUserToOperator_Notification;
typedef struct Icb_OpRequestRemoteDiagnostics_Notification_t* Icb_OpRequestRemoteDiagnostics_Notification;
typedef struct Icb_OpAbortRemoteDiagnostics_Notification_t* Icb_OpAbortRemoteDiagnostics_Notification;
typedef U32 Icb_UpdateDacMode;
typedef struct Icb_ApprovalStatusType_t* Icb_ApprovalStatusType;
typedef U32 Icb_DownloadStatus;
typedef U32 Icb_DownloadProgress;
typedef U32 Icb_DownloadState;
typedef struct Icb_OpCancelDownload_SetRequest_t* Icb_OpCancelDownload_SetRequest;
typedef struct Icb_OpCancelDownload_Response_t* Icb_OpCancelDownload_Response;
typedef U32 Icb_InstallCommand;
typedef U32 Icb_InstallProgress;
typedef struct Icb_Uri_t* Icb_Uri;
typedef struct Icb_InstallationData_t* Icb_InstallationData;
typedef U32 Icb_InstallStatus;
typedef U32 Icb_FileInstallationStatus;
typedef struct Icb_OpLocalStorage_Response_t* Icb_OpLocalStorage_Response;
typedef struct Icb_OpTvmVehicleInfo_Response_t* Icb_OpTvmVehicleInfo_Response;
typedef struct Icb_OpTvmVehicleInfo_Notification_t* Icb_OpTvmVehicleInfo_Notification;
typedef struct Icb_ArrayOf_ClimateTimer_t* Icb_ArrayOf_ClimateTimer;
typedef struct Icb_ArrayOf_OnOff_t* Icb_ArrayOf_OnOff;
typedef struct Icb_OpGenericSettingSynch_Request_settingIDs_t* Icb_OpGenericSettingSynch_Request_settingIDs;
typedef struct Icb_ArrayOf_Setting_t* Icb_ArrayOf_Setting;
typedef struct Icb_ArrayOf_SBWarning_t* Icb_ArrayOf_SBWarning;
typedef struct Icb_ArrayOf_WLANFrequencyBand_t* Icb_ArrayOf_WLANFrequencyBand;
typedef struct Icb_ArrayOf_WLANConnDevice_t* Icb_ArrayOf_WLANConnDevice;
typedef struct Icb_ArrayOf_AvailableNetworkInformation_t* Icb_ArrayOf_AvailableNetworkInformation;
typedef struct Icb_ArrayOf_SSID_t* Icb_ArrayOf_SSID;
typedef struct Icb_ArrayOf_NetworkOperator_t* Icb_ArrayOf_NetworkOperator;
typedef struct Icb_ArrayOf_RadioFrequencyHz_t* Icb_ArrayOf_RadioFrequencyHz;
typedef struct Icb_ArrayOf_ApprovalStatusType_t* Icb_ArrayOf_ApprovalStatusType;
typedef struct Icb_ArrayOf_SoftwareProduct_t* Icb_ArrayOf_SoftwareProduct;
typedef struct Icb_ArrayOf_UUID_t* Icb_ArrayOf_UUID;
typedef struct Icb_ArrayOf_PartIdentifier_t* Icb_ArrayOf_PartIdentifier;
typedef struct Icb_ArrayOf_InstallationData_t* Icb_ArrayOf_InstallationData;
typedef struct Icb_ArrayOf_InstalledData_t* Icb_ArrayOf_InstalledData;
typedef struct Icb_OpGeneric_Error_t* Icb_OpGeneric_Error;
typedef struct Icb_OpTelematicSettings_SetRequest_t* Icb_OpTelematicSettings_SetRequest;
typedef struct Icb_OpTelematicSettings_Response_t* Icb_OpTelematicSettings_Response;
typedef struct Icb_OpPositionData_Response_t* Icb_OpPositionData_Response;
typedef struct Icb_WGS84SimplePositionData_t* Icb_WGS84SimplePositionData;
typedef struct Icb_OpSubscriptionActivation_SetRequest_t* Icb_OpSubscriptionActivation_SetRequest;
typedef struct Icb_OpSubscriptionActivation_Response_t* Icb_OpSubscriptionActivation_Response;
typedef struct Icb_OpSubscriptionActivation_Notification_t* Icb_OpSubscriptionActivation_Notification;
typedef struct Icb_OpServiceActivation_SetRequest_t* Icb_OpServiceActivation_SetRequest;
typedef struct Icb_OpRescueStatus_Response_t* Icb_OpRescueStatus_Response;
typedef struct Icb_OpRescueStatus_Notification_t* Icb_OpRescueStatus_Notification;
typedef struct Icb_OpSendToCarConfirmation_SetRequest_t* Icb_OpSendToCarConfirmation_SetRequest;
typedef struct Icb_OpSendToCarConfirmation_Response_t* Icb_OpSendToCarConfirmation_Response;
typedef struct Icb_EcalSettings_t* Icb_EcalSettings;
typedef struct Icb_OpSendToCar_SetRequest_t* Icb_OpSendToCar_SetRequest;
typedef struct Icb_OpUserPrivacySettings_Notification_t* Icb_OpUserPrivacySettings_Notification;
typedef struct Icb_OpClimateTimers_SetRequest_t* Icb_OpClimateTimers_SetRequest;
typedef struct Icb_OpClimateTimers_Response_t* Icb_OpClimateTimers_Response;
typedef struct Icb_TimerDays_t* Icb_TimerDays;
typedef struct Icb_OpGenericSettingSynch_Request_t* Icb_OpGenericSettingSynch_Request;
typedef struct Icb_OpGenericSettingSynch_SetRequest_t* Icb_OpGenericSettingSynch_SetRequest;
typedef struct Icb_OpGenericSettingSynch_Response_t* Icb_OpGenericSettingSynch_Response;
typedef struct Icb_OpGenericSettingSynch_Notification_t* Icb_OpGenericSettingSynch_Notification;
typedef struct Icb_Setting_t* Icb_Setting;
typedef struct Icb_OpSoHPacketSend_SetRequestNoReturn_t* Icb_OpSoHPacketSend_SetRequestNoReturn;
typedef struct Icb_OpPSIMDataCounter_Response_t* Icb_OpPSIMDataCounter_Response;
typedef struct Icb_OpPSIMNetworkConfiguration_SetRequest_t* Icb_OpPSIMNetworkConfiguration_SetRequest;
typedef struct Icb_OpPSIMNetworkConfiguration_Response_t* Icb_OpPSIMNetworkConfiguration_Response;
typedef struct Icb_OpPSIMConnectionStatus_Response_t* Icb_OpPSIMConnectionStatus_Response;
typedef struct Icb_OpPSIMConnectionStatus_Notification_t* Icb_OpPSIMConnectionStatus_Notification;
typedef struct Icb_OpInternetGateway_SetRequest_t* Icb_OpInternetGateway_SetRequest;
typedef struct Icb_OpInternetGateway_Response_t* Icb_OpInternetGateway_Response;
typedef struct Icb_OpConnectWorkshopWlan_Notification_t* Icb_OpConnectWorkshopWlan_Notification;
typedef struct Icb_OpCurrentInternetSource_SetRequest_t* Icb_OpCurrentInternetSource_SetRequest;
typedef struct Icb_OpCurrentInternetSource_Response_t* Icb_OpCurrentInternetSource_Response;
typedef struct Icb_OpCurrentInternetSource_Notification_t* Icb_OpCurrentInternetSource_Notification;
typedef struct Icb_OpWLANMode_SetRequest_t* Icb_OpWLANMode_SetRequest;
typedef struct Icb_OpWLANMode_Response_t* Icb_OpWLANMode_Response;
typedef struct Icb_OpWLANMode_Notification_t* Icb_OpWLANMode_Notification;
typedef struct Icb_OpWLANFreqBandSelect_SetRequest_t* Icb_OpWLANFreqBandSelect_SetRequest;
typedef struct Icb_OpWLANFreqBandSelect_Response_t* Icb_OpWLANFreqBandSelect_Response;
typedef struct Icb_WLANChannelInfo_t* Icb_WLANChannelInfo;
typedef struct Icb_OpWLANAPSSID_SetRequest_t* Icb_OpWLANAPSSID_SetRequest;
typedef struct Icb_OpWLANAPSSID_Response_t* Icb_OpWLANAPSSID_Response;
typedef struct Icb_OpWLANAPPasswd_SetRequest_t* Icb_OpWLANAPPasswd_SetRequest;
typedef struct Icb_OpWLANAPPasswd_Response_t* Icb_OpWLANAPPasswd_Response;
typedef struct Icb_OpWLANAPConnDev_Response_t* Icb_OpWLANAPConnDev_Response;
typedef struct Icb_OpWLANAPConnDev_Notification_t* Icb_OpWLANAPConnDev_Notification;
typedef struct Icb_OpWLANSTAConnect_SetRequest_t* Icb_OpWLANSTAConnect_SetRequest;
typedef struct Icb_OpWLANSTAConnect_Response_t* Icb_OpWLANSTAConnect_Response;
typedef struct Icb_OpWLANAPStatusSettings_Response_t* Icb_OpWLANAPStatusSettings_Response;
typedef struct Icb_OpWLANSTAStatus_Response_t* Icb_OpWLANSTAStatus_Response;
typedef struct Icb_OpWLANSTAStatus_Notification_t* Icb_OpWLANSTAStatus_Notification;
typedef struct Icb_AvailableNetworkInformation_t* Icb_AvailableNetworkInformation;
typedef struct Icb_OpWLANSTARememberedNetwks_Response_t* Icb_OpWLANSTARememberedNetwks_Response;
typedef struct Icb_OpPSIMSecurity_SetRequest_t* Icb_OpPSIMSecurity_SetRequest;
typedef struct Icb_OpPSIMEnterCode_SetRequest_t* Icb_OpPSIMEnterCode_SetRequest;
typedef struct Icb_OpPSIMRegisterState_Response_t* Icb_OpPSIMRegisterState_Response;
typedef struct Icb_NetworkOperator_t* Icb_NetworkOperator;
typedef struct Icb_OpPSIMNetworkOperators_Response_t* Icb_OpPSIMNetworkOperators_Response;
typedef struct Icb_OpPSIMNetworkOperatorCommand_SetRequest_t* Icb_OpPSIMNetworkOperatorCommand_SetRequest;
typedef struct Icb_OpPSIMNetworkOperatorCommand_Response_t* Icb_OpPSIMNetworkOperatorCommand_Response;
typedef struct Icb_OpPSIMNetworkOperatorCommand_Notification_t* Icb_OpPSIMNetworkOperatorCommand_Notification;
typedef struct Icb_OpPSIMState_Response_t* Icb_OpPSIMState_Response;
typedef struct Icb_OpPSIMPhoneOperationMode_Response_t* Icb_OpPSIMPhoneOperationMode_Response;
typedef struct Icb_OpPSIMUssd_SetRequest_t* Icb_OpPSIMUssd_SetRequest;
typedef struct Icb_OpPSIMUssd_Response_t* Icb_OpPSIMUssd_Response;
typedef struct Icb_OpCallHandling_SetRequest_t* Icb_OpCallHandling_SetRequest;
typedef struct Icb_OpTEMIdentification_Response_t* Icb_OpTEMIdentification_Response;
typedef struct Icb_OpTEMRadioMode_SetRequest_t* Icb_OpTEMRadioMode_SetRequest;
typedef struct Icb_OpTEMRadioMode_Response_t* Icb_OpTEMRadioMode_Response;
typedef struct Icb_OpTunerFrequencies_Response_t* Icb_OpTunerFrequencies_Response;
typedef struct Icb_OpDeadReckonedPosition_Response_t* Icb_OpDeadReckonedPosition_Response;
typedef struct Icb_DRPositionData_t* Icb_DRPositionData;
typedef struct Icb_GeographicalPosition_t* Icb_GeographicalPosition;
typedef struct Icb_SatelliteUsage_t* Icb_SatelliteUsage;
typedef struct Icb_ChannelData_t* Icb_ChannelData;
typedef struct Icb_GNSSDataAccuracy_t* Icb_GNSSDataAccuracy;
typedef struct Icb_OpRemoteDiagnosticInfo_Notification_t* Icb_OpRemoteDiagnosticInfo_Notification;
typedef struct Icb_OpCurrentDoIPState_Notification_t* Icb_OpCurrentDoIPState_Notification;
typedef struct Icb_OpCurrentDoIPConnection_Notification_t* Icb_OpCurrentDoIPConnection_Notification;
typedef struct Icb_OpRequestUserAuthentication_Response_t* Icb_OpRequestUserAuthentication_Response;
typedef struct Icb_OpUpdateDaCMode_Notification_t* Icb_OpUpdateDaCMode_Notification;
typedef struct Icb_OpApprovalStatus_Response_t* Icb_OpApprovalStatus_Response;
typedef struct Icb_OpApprovalStatus_Notification_t* Icb_OpApprovalStatus_Notification;
typedef struct Icb_OpDownloadStatus_Response_t* Icb_OpDownloadStatus_Response;
typedef struct Icb_SoftwareProduct_t* Icb_SoftwareProduct;
typedef struct Icb_OpDownloadSoftware_SetRequest_t* Icb_OpDownloadSoftware_SetRequest;
typedef struct Icb_OpDeletedSoftware_SetRequest_t* Icb_OpDeletedSoftware_SetRequest;
typedef struct Icb_OpDeviceInstall_SetRequest_t* Icb_OpDeviceInstall_SetRequest;
typedef struct Icb_OpDeviceInstall_Response_t* Icb_OpDeviceInstall_Response;
typedef struct Icb_InstalledData_t* Icb_InstalledData;
typedef struct Icb_OpEcallSettings_SetRequest_t* Icb_OpEcallSettings_SetRequest;
typedef struct Icb_OpEcallSettings_Response_t* Icb_OpEcallSettings_Response;
typedef struct Icb_ClimateTimer_t* Icb_ClimateTimer;
typedef struct Icb_OpWLANChannelFreqInfo_Notification_t* Icb_OpWLANChannelFreqInfo_Notification;
typedef struct Icb_GNSSData_t* Icb_GNSSData;
typedef struct Icb_OpGNSSPositionDataAccuracy_Response_t* Icb_OpGNSSPositionDataAccuracy_Response;
typedef struct Icb_OpGNSSPositionData_Response_t* Icb_OpGNSSPositionData_Response;

///////////////////////////////////////////////////////////////////////////////////
//////////////////////////////// Predefined values ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// Type Definition //////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////

/*
 * Icb_VccPduHeader of type PASN_Sequence
 */

struct Icb_VccPduHeader_t {
    U32 serviceId;
    U32 operationId;
    U32 msgLength;
    U32 senderHandle;
    U32 protocolVersion;
    U32 operationType;
    U32 dataType;
    U32 reservedII;
};

U32 Icb_VccPduHeader_EncodedSize(Icb_VccPduHeader ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_VccPduHeader_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_VccPduHeader_Decode(Icb_VccPduHeader ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_VccPduHeader_Encode(Icb_VccPduHeader ThisPtr, ASN_Stream stream);
Icb_VccPduHeader Icb_VccPduHeader_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_VccPduHeader_Print(Icb_VccPduHeader ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_ErrorCode_t {
    e_Icb_ErrorCode_notOk,
    e_Icb_ErrorCode_serviceIdNotAvailable,
    e_Icb_ErrorCode_operationIdNotAvailable,
    e_Icb_ErrorCode_opTypeNotAvailable,
    e_Icb_ErrorCode_invalidProtocolVersion,
    e_Icb_ErrorCode_segmentationError,
    e_Icb_ErrorCode_invalidLength,
    e_Icb_ErrorCode_applicationError,
    e_Icb_ErrorCode_timeout,
    e_Icb_ErrorCode_busy,
    e_Icb_ErrorCode_incorrectState = 32,
    e_Icb_ErrorCode_incorrectCode,
    e_Icb_ErrorCode_incorrectCodePuk,
    e_Icb_ErrorCode_asn1decodeError,
    e_Icb_ErrorCode_parameterInvalid
};

#define Icb_ErrorCode_Create(session) 0
ASN_Result Icb_ErrorCode_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ErrorCode_Encode(U32 val, ASN_Stream stream);
#define Icb_ErrorCode_EncodedSize(val) ENUM_EncodedSize(val, 0, 36, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_ErrorCode_SessionSize() ENUM_SessionSize(0, 36, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_ErrorCode_Print(Icb_ErrorCode value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_DateTime of type PASN_Sequence
 */

struct Icb_DateTime_t {
    U32 year;
    U32 month;
    U32 day;
    U32 hour;
    U32 minute;
    U32 second;
};

U32 Icb_DateTime_EncodedSize(Icb_DateTime ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_DateTime_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_DateTime_Decode(Icb_DateTime ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DateTime_Encode(Icb_DateTime ThisPtr, ASN_Stream stream);
Icb_DateTime Icb_DateTime_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_DateTime_Print(Icb_DateTime ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_SourceStatus_t {
    e_Icb_SourceStatus_unidentified,
    e_Icb_SourceStatus_trusted,
    e_Icb_SourceStatus_callCenter,
    e_Icb_SourceStatus_psap,
    e_Icb_SourceStatus_outgoing
};

#define Icb_SourceStatus_Create(session) 0
ASN_Result Icb_SourceStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SourceStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_SourceStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SourceStatus_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SourceStatus_Print(Icb_SourceStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_OnOffStatus_t { e_Icb_OnOffStatus_off, e_Icb_OnOffStatus_on, e_Icb_OnOffStatus_unknown };

#define Icb_OnOffStatus_Create(session) 0
ASN_Result Icb_OnOffStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OnOffStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_OnOffStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_OnOffStatus_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_OnOffStatus_Print(Icb_OnOffStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_SecurityStatus_t {
    e_Icb_SecurityStatus_idle,
    e_Icb_SecurityStatus_standby,
    e_Icb_SecurityStatus_active,
    e_Icb_SecurityStatus_activeStandalone
};

#define Icb_SecurityStatus_Create(session) 0
ASN_Result Icb_SecurityStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SecurityStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_SecurityStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SecurityStatus_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SecurityStatus_Print(Icb_SecurityStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_GenericOkStatus_t { e_Icb_GenericOkStatus_unknown, e_Icb_GenericOkStatus_ok, e_Icb_GenericOkStatus_notOk };

#define Icb_GenericOkStatus_Create(session) 0
ASN_Result Icb_GenericOkStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GenericOkStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_GenericOkStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_GenericOkStatus_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_GenericOkStatus_Print(Icb_GenericOkStatus value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_AudioStatus of type PASN_Sequence
 */

struct Icb_AudioStatus_t {
    Icb_GenericOkStatus micStatus;
    Icb_GenericOkStatus speakerStatus;
};

U32 Icb_AudioStatus_EncodedSize(Icb_AudioStatus ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_AudioStatus_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_AudioStatus_Decode(Icb_AudioStatus ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_AudioStatus_Encode(Icb_AudioStatus ThisPtr, ASN_Stream stream);
Icb_AudioStatus Icb_AudioStatus_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_AudioStatus_Print(Icb_AudioStatus ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_UUID of type PASN_Sequence
 */

struct Icb_UUID_t {
    ASN_UTF8String uuid;
};

U32 Icb_UUID_EncodedSize(Icb_UUID ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_UUID_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_UUID_Decode(Icb_UUID ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_UUID_Encode(Icb_UUID ThisPtr, ASN_Stream stream);
Icb_UUID Icb_UUID_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_UUID_Print(Icb_UUID ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_PartIdentifier of type PASN_Sequence
 */

struct Icb_PartIdentifier_t {
    ASN_UTF8String partID;
};

U32 Icb_PartIdentifier_EncodedSize(Icb_PartIdentifier ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_PartIdentifier_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_PartIdentifier_Decode(Icb_PartIdentifier ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PartIdentifier_Encode(Icb_PartIdentifier ThisPtr, ASN_Stream stream);
Icb_PartIdentifier Icb_PartIdentifier_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_PartIdentifier_Print(Icb_PartIdentifier ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_SBTrigger_t {
    e_Icb_SBTrigger_diagnostic,
    e_Icb_SBTrigger_predicted,
    e_Icb_SBTrigger_warning,
    e_Icb_SBTrigger_manual
};

#define Icb_SBTrigger_Create(session) 0
ASN_Result Icb_SBTrigger_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SBTrigger_Encode(U32 val, ASN_Stream stream);
#define Icb_SBTrigger_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SBTrigger_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SBTrigger_Print(Icb_SBTrigger value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_SBWarning of type PASN_Sequence
 */

struct Icb_SBWarning_t {
    U32 id;
    ASN_UTF8String message;
};

U32 Icb_SBWarning_EncodedSize(Icb_SBWarning ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_SBWarning_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_SBWarning_Decode(Icb_SBWarning ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SBWarning_Encode(Icb_SBWarning ThisPtr, ASN_Stream stream);
Icb_SBWarning Icb_SBWarning_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_SBWarning_Print(Icb_SBWarning ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSVTStatus_Response of type PASN_Sequence
 */

struct Icb_OpSVTStatus_Response_t {
    Icb_SecurityStatus svtStatus;
};

U32 Icb_OpSVTStatus_Response_EncodedSize(Icb_OpSVTStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSVTStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSVTStatus_Response_Decode(Icb_OpSVTStatus_Response ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpSVTStatus_Response_Encode(Icb_OpSVTStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpSVTStatus_Response Icb_OpSVTStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSVTStatus_Response_Print(Icb_OpSVTStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSVTStatus_Notification of type PASN_Sequence
 */

struct Icb_OpSVTStatus_Notification_t {
    Icb_SecurityStatus svtStatus;
};

U32 Icb_OpSVTStatus_Notification_EncodedSize(Icb_OpSVTStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSVTStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSVTStatus_Notification_Decode(Icb_OpSVTStatus_Notification ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpSVTStatus_Notification_Encode(Icb_OpSVTStatus_Notification ThisPtr, ASN_Stream stream);
Icb_OpSVTStatus_Notification Icb_OpSVTStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSVTStatus_Notification_Print(Icb_OpSVTStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTNStatus_Response of type PASN_Sequence
 */

struct Icb_OpTNStatus_Response_t {
    Icb_SecurityStatus tnStatus;
};

U32 Icb_OpTNStatus_Response_EncodedSize(Icb_OpTNStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTNStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTNStatus_Response_Decode(Icb_OpTNStatus_Response ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpTNStatus_Response_Encode(Icb_OpTNStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpTNStatus_Response Icb_OpTNStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTNStatus_Response_Print(Icb_OpTNStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTNStatus_Notification of type PASN_Sequence
 */

struct Icb_OpTNStatus_Notification_t {
    Icb_SecurityStatus tnStatus;
};

U32 Icb_OpTNStatus_Notification_EncodedSize(Icb_OpTNStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTNStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTNStatus_Notification_Decode(Icb_OpTNStatus_Notification ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpTNStatus_Notification_Encode(Icb_OpTNStatus_Notification ThisPtr, ASN_Stream stream);
Icb_OpTNStatus_Notification Icb_OpTNStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTNStatus_Notification_Print(Icb_OpTNStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_TelemSettings of type PASN_Sequence
 */

struct Icb_TelemSettings_t {
    BOOL keylockEnabled;
};

U32 Icb_TelemSettings_EncodedSize(Icb_TelemSettings ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_TelemSettings_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_TelemSettings_Decode(Icb_TelemSettings ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_TelemSettings_Encode(Icb_TelemSettings ThisPtr, ASN_Stream stream);
Icb_TelemSettings Icb_TelemSettings_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_TelemSettings_Print(Icb_TelemSettings ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_SimpleVehiclePosition of type PASN_Choice
 */

struct Icb_SimpleVehiclePosition_t {
    U32 choice;
    ASN_Null noValidData;
    Icb_WGS84SimplePositionData wgs84;
};

enum Icb_SimpleVehiclePosition_Choices { e_Icb_SimpleVehiclePosition_noValidData, e_Icb_SimpleVehiclePosition_wgs84 };

U32 Icb_SimpleVehiclePosition_EncodedSize(Icb_SimpleVehiclePosition ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_SimpleVehiclePosition_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_SimpleVehiclePosition_Decode(Icb_SimpleVehiclePosition ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SimpleVehiclePosition_Encode(Icb_SimpleVehiclePosition ThisPtr, ASN_Stream stream);
Icb_SimpleVehiclePosition Icb_SimpleVehiclePosition_Create(ASN_Session session);
ASN_Result Icb_SimpleVehiclePosition_SetType(Icb_SimpleVehiclePosition ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_SimpleVehiclePosition_Print(Icb_SimpleVehiclePosition ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_ActivationStatusChange_t {
    e_Icb_ActivationStatusChange_activate,
    e_Icb_ActivationStatusChange_preactivate,
    e_Icb_ActivationStatusChange_provision
};

#define Icb_ActivationStatusChange_Create(session) 0
ASN_Result Icb_ActivationStatusChange_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ActivationStatusChange_Encode(U32 val, ASN_Stream stream);
#define Icb_ActivationStatusChange_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_ActivationStatusChange_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_ActivationStatusChange_Print(Icb_ActivationStatusChange value);
#endif /* #ifdef ASN_PRINT */
enum Icb_ActivationStatus_t {
    e_Icb_ActivationStatus_deactivated,
    e_Icb_ActivationStatus_activated_provisioned,
    e_Icb_ActivationStatus_pre_activated_unprovisioned,
    e_Icb_ActivationStatus_activated_unprovisioned,
    e_Icb_ActivationStatus_remote_provisioning_ongoing,
    e_Icb_ActivationStatus_provisioning_ongoing
};

#define Icb_ActivationStatus_Create(session) 0
ASN_Result Icb_ActivationStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ActivationStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_ActivationStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 5, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_ActivationStatus_SessionSize() ENUM_SessionSize(0, 5, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_ActivationStatus_Print(Icb_ActivationStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_OnCallService_t { e_Icb_OnCallService_emergencyAssist, e_Icb_OnCallService_roadsideAssist };

#define Icb_OnCallService_Create(session) 0
ASN_Result Icb_OnCallService_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OnCallService_Encode(U32 val, ASN_Stream stream);
#define Icb_OnCallService_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_OnCallService_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_OnCallService_Print(Icb_OnCallService value);
#endif /* #ifdef ASN_PRINT */
enum Icb_OnOffSetting_t { e_Icb_OnOffSetting_off, e_Icb_OnOffSetting_on };

#define Icb_OnOffSetting_Create(session) 0
ASN_Result Icb_OnOffSetting_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OnOffSetting_Encode(U32 val, ASN_Stream stream);
#define Icb_OnOffSetting_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_OnOffSetting_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_OnOffSetting_Print(Icb_OnOffSetting value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpServiceActivation_Response of type PASN_Sequence
 */

struct Icb_OpServiceActivation_Response_t {
    ASN_Null responseOk;
};

U32 Icb_OpServiceActivation_Response_EncodedSize(Icb_OpServiceActivation_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpServiceActivation_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpServiceActivation_Response_Decode(Icb_OpServiceActivation_Response ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpServiceActivation_Response_Encode(Icb_OpServiceActivation_Response ThisPtr, ASN_Stream stream);
Icb_OpServiceActivation_Response Icb_OpServiceActivation_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpServiceActivation_Response_Print(Icb_OpServiceActivation_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_RescueStatus_t {
    e_Icb_RescueStatus_disabled,
    e_Icb_RescueStatus_notActive,
    e_Icb_RescueStatus_serviceNotAvailable,
    e_Icb_RescueStatus_active,
    e_Icb_RescueStatus_terminated
};

#define Icb_RescueStatus_Create(session) 0
ASN_Result Icb_RescueStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_RescueStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_RescueStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_RescueStatus_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_RescueStatus_Print(Icb_RescueStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_ButtonStatus_t {
    e_Icb_ButtonStatus_disabled,
    e_Icb_ButtonStatus_onCallPressed,
    e_Icb_ButtonStatus_onCallReleased,
    e_Icb_ButtonStatus_sosPressed,
    e_Icb_ButtonStatus_sosReleased,
    e_Icb_ButtonStatus_allReleased
};

#define Icb_ButtonStatus_Create(session) 0
ASN_Result Icb_ButtonStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ButtonStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_ButtonStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 5, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_ButtonStatus_SessionSize() ENUM_SessionSize(0, 5, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_ButtonStatus_Print(Icb_ButtonStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_VoiceStatus_t {
    e_Icb_VoiceStatus_noConnection,
    e_Icb_VoiceStatus_connectingCSC,
    e_Icb_VoiceStatus_connectingPSAP,
    e_Icb_VoiceStatus_connectedCSC,
    e_Icb_VoiceStatus_connectedPSAP,
    e_Icb_VoiceStatus_incomingCall,
    e_Icb_VoiceStatus_connectedCall,
    e_Icb_VoiceStatus_connectedIncoming
};

#define Icb_VoiceStatus_Create(session) 0
ASN_Result Icb_VoiceStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_VoiceStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_VoiceStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 7, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_VoiceStatus_SessionSize() ENUM_SessionSize(0, 7, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_VoiceStatus_Print(Icb_VoiceStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_MessageStatus_t {
    e_Icb_MessageStatus_notSent,
    e_Icb_MessageStatus_sending,
    e_Icb_MessageStatus_sent,
    e_Icb_MessageStatus_ackUndefined,
    e_Icb_MessageStatus_ackDefined
};

#define Icb_MessageStatus_Create(session) 0
ASN_Result Icb_MessageStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_MessageStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_MessageStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_MessageStatus_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_MessageStatus_Print(Icb_MessageStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_PSAPStatus_t { e_Icb_PSAPStatus_confirmRequired, e_Icb_PSAPStatus_confirmNotRequired };

#define Icb_PSAPStatus_Create(session) 0
ASN_Result Icb_PSAPStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PSAPStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_PSAPStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PSAPStatus_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_PSAPStatus_Print(Icb_PSAPStatus value);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_SendToCarId of PASN_Integer
 */

#define Icb_SendToCarId_EncodedSize(ThisPtr) U32_EncodedSize(ThisPtr, 0, 4294967295U)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SendToCarId_SessionSize() U32_SessionSize(0, 4294967295U)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#define Icb_SendToCarId_Decode(ThisPtr, session, stream) U32_Decode(ThisPtr, session, stream, 0, 4294967295U)
#define Icb_SendToCarId_Encode(ThisPtr, stream) U32_Encode(ThisPtr, stream, 0, 4294967295U)
#define Icb_SendToCarId_Create(session) U32_Create(session)
#ifdef ASN_PRINT
#define Icb_SendToCarId_Print(ThisPtr) U32_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */

enum Icb_SendToCarConfirmation_t {
    e_Icb_SendToCarConfirmation_addedAsDestination,
    e_Icb_SendToCarConfirmation_addedAsWaypoint,
    e_Icb_SendToCarConfirmation_rejected,
    e_Icb_SendToCarConfirmation_desinationOutsideOfMapData,
    e_Icb_SendToCarConfirmation_errorWhenAdding
};

#define Icb_SendToCarConfirmation_Create(session) 0
ASN_Result Icb_SendToCarConfirmation_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SendToCarConfirmation_Encode(U32 val, ASN_Stream stream);
#define Icb_SendToCarConfirmation_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SendToCarConfirmation_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SendToCarConfirmation_Print(Icb_SendToCarConfirmation value);
#endif /* #ifdef ASN_PRINT */
enum Icb_PreferredEcalls_t { e_Icb_PreferredEcalls_publicSOS, e_Icb_PreferredEcalls_volvoOnCall };

#define Icb_PreferredEcalls_Create(session) 0
ASN_Result Icb_PreferredEcalls_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PreferredEcalls_Encode(U32 val, ASN_Stream stream);
#define Icb_PreferredEcalls_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PreferredEcalls_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_PreferredEcalls_Print(Icb_PreferredEcalls value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpTextMessage_SetRequest of type PASN_Sequence
 */

struct Icb_OpTextMessage_SetRequest_t {
    BOOL exists__optional__source;
    Icb_SourceStatus sourceStatus;
    ASN_UTF8String source;
    ASN_UTF8String text;
};

U32 Icb_OpTextMessage_SetRequest_EncodedSize(Icb_OpTextMessage_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTextMessage_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTextMessage_SetRequest_Decode(Icb_OpTextMessage_SetRequest ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpTextMessage_SetRequest_Encode(Icb_OpTextMessage_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpTextMessage_SetRequest Icb_OpTextMessage_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTextMessage_SetRequest_Print(Icb_OpTextMessage_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpIHUSystemInfo_Response of type PASN_Sequence
 */

struct Icb_OpIHUSystemInfo_Response_t {
    ASN_OctetString softwareVersion;
    ASN_OctetString mapBaseVersion;
    U32 mapIncrement;
    U32 typeOfPackage;
    U32 failedFetchBooking;
    U32 failedServiceIP;
};

U32 Icb_OpIHUSystemInfo_Response_EncodedSize(Icb_OpIHUSystemInfo_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpIHUSystemInfo_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpIHUSystemInfo_Response_Decode(Icb_OpIHUSystemInfo_Response ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpIHUSystemInfo_Response_Encode(Icb_OpIHUSystemInfo_Response ThisPtr, ASN_Stream stream);
Icb_OpIHUSystemInfo_Response Icb_OpIHUSystemInfo_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpIHUSystemInfo_Response_Print(Icb_OpIHUSystemInfo_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_UserPrivacySettings of type PASN_Sequence
 */

struct Icb_UserPrivacySettings_t {
    BOOL carStatUploadEn;
    BOOL locationServicesEn;
};

U32 Icb_UserPrivacySettings_EncodedSize(Icb_UserPrivacySettings ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_UserPrivacySettings_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_UserPrivacySettings_Decode(Icb_UserPrivacySettings ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_UserPrivacySettings_Encode(Icb_UserPrivacySettings ThisPtr, ASN_Stream stream);
Icb_UserPrivacySettings Icb_UserPrivacySettings_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_UserPrivacySettings_Print(Icb_UserPrivacySettings ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_ClimateTimerError of type PASN_Choice
 */

struct Icb_ClimateTimerError_t {
    U32 choice;
    ASN_Null noError;
    Icb_TimerError setTimersError;
    Icb_TimerError getTimerError;
};

enum Icb_ClimateTimerError_Choices {
    e_Icb_ClimateTimerError_noError,
    e_Icb_ClimateTimerError_setTimersError,
    e_Icb_ClimateTimerError_getTimerError
};

U32 Icb_ClimateTimerError_EncodedSize(Icb_ClimateTimerError ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ClimateTimerError_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ClimateTimerError_Decode(Icb_ClimateTimerError ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ClimateTimerError_Encode(Icb_ClimateTimerError ThisPtr, ASN_Stream stream);
Icb_ClimateTimerError Icb_ClimateTimerError_Create(ASN_Session session);
ASN_Result Icb_ClimateTimerError_SetType(Icb_ClimateTimerError ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_ClimateTimerError_Print(Icb_ClimateTimerError ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_TimerError_t { e_Icb_TimerError_newerTimers, e_Icb_TimerError_carInUseHMI, e_Icb_TimerError_generalErrorHMI };

#define Icb_TimerError_Create(session) 0
ASN_Result Icb_TimerError_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_TimerError_Encode(U32 val, ASN_Stream stream);
#define Icb_TimerError_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_TimerError_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_TimerError_Print(Icb_TimerError value);
#endif /* #ifdef ASN_PRINT */
enum Icb_TimerStatus_t {
    e_Icb_TimerStatus_notUsed,
    e_Icb_TimerStatus_off,
    e_Icb_TimerStatus_on,
    e_Icb_TimerStatus_reserved
};

#define Icb_TimerStatus_Create(session) 0
ASN_Result Icb_TimerStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_TimerStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_TimerStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_TimerStatus_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_TimerStatus_Print(Icb_TimerStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_TimerType_t {
    e_Icb_TimerType_reserved,
    e_Icb_TimerType_single,
    e_Icb_TimerType_day,
    e_Icb_TimerType_repeated
};

#define Icb_TimerType_Create(session) 0
ASN_Result Icb_TimerType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_TimerType_Encode(U32 val, ASN_Stream stream);
#define Icb_TimerType_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_TimerType_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_TimerType_Print(Icb_TimerType value);
#endif /* #ifdef ASN_PRINT */
enum Icb_OnOff_t { e_Icb_OnOff_off, e_Icb_OnOff_on };

#define Icb_OnOff_Create(session) 0
ASN_Result Icb_OnOff_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OnOff_Encode(U32 val, ASN_Stream stream);
#define Icb_OnOff_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_OnOff_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_OnOff_Print(Icb_OnOff value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpSoHWarning_Notification of type PASN_Sequence
 */

struct Icb_OpSoHWarning_Notification_t {
    Icb_SBWarning sbWarning;
};

U32 Icb_OpSoHWarning_Notification_EncodedSize(Icb_OpSoHWarning_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSoHWarning_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSoHWarning_Notification_Decode(Icb_OpSoHWarning_Notification ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpSoHWarning_Notification_Encode(Icb_OpSoHWarning_Notification ThisPtr, ASN_Stream stream);
Icb_OpSoHWarning_Notification Icb_OpSoHWarning_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSoHWarning_Notification_Print(Icb_OpSoHWarning_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_SettingType_t { e_Icb_SettingType_setting, e_Icb_SettingType_error };

#define Icb_SettingType_Create(session) 0
ASN_Result Icb_SettingType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SettingType_Encode(U32 val, ASN_Stream stream);
#define Icb_SettingType_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SettingType_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SettingType_Print(Icb_SettingType value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpServiceBooking_Notification of type PASN_Sequence
 */

struct Icb_OpServiceBooking_Notification_t {
    BOOL exists__optional__sbText;
    BOOL exists__optional__sbWarning;
    BOOL exists__optional__dtcWarning;
    Icb_SBTrigger sbTrigger;
    ASN_UTF8String sbText;
    Icb_SBWarning sbWarning;
    Icb_SBWarning dtcWarning;
};

U32 Icb_OpServiceBooking_Notification_EncodedSize(Icb_OpServiceBooking_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpServiceBooking_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpServiceBooking_Notification_Decode(Icb_OpServiceBooking_Notification ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpServiceBooking_Notification_Encode(Icb_OpServiceBooking_Notification ThisPtr, ASN_Stream stream);
Icb_OpServiceBooking_Notification Icb_OpServiceBooking_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpServiceBooking_Notification_Print(Icb_OpServiceBooking_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSoHPackageUploaded_Notification of type PASN_Sequence
 */

struct Icb_OpSoHPackageUploaded_Notification_t {
    ASN_UTF8String packetID;
    Icb_GenericOkStatus result;
};

U32 Icb_OpSoHPackageUploaded_Notification_EncodedSize(Icb_OpSoHPackageUploaded_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSoHPackageUploaded_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSoHPackageUploaded_Notification_Decode(Icb_OpSoHPackageUploaded_Notification ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpSoHPackageUploaded_Notification_Encode(Icb_OpSoHPackageUploaded_Notification ThisPtr,
                                                        ASN_Stream stream);
Icb_OpSoHPackageUploaded_Notification Icb_OpSoHPackageUploaded_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSoHPackageUploaded_Notification_Print(Icb_OpSoHPackageUploaded_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_DataCounterValue of PASN_Integer
 */

#define Icb_DataCounterValue_EncodedSize(ThisPtr) U32_EncodedSize(ThisPtr, 0, 4294967295U)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DataCounterValue_SessionSize() U32_SessionSize(0, 4294967295U)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#define Icb_DataCounterValue_Decode(ThisPtr, session, stream) U32_Decode(ThisPtr, session, stream, 0, 4294967295U)
#define Icb_DataCounterValue_Encode(ThisPtr, stream) U32_Encode(ThisPtr, stream, 0, 4294967295U)
#define Icb_DataCounterValue_Create(session) U32_Create(session)
#ifdef ASN_PRINT
#define Icb_DataCounterValue_Print(ThisPtr) U32_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */

enum Icb_DataCounter_t { e_Icb_DataCounter_psimSentReceived };

#define Icb_DataCounter_Create(session) 0
ASN_Result Icb_DataCounter_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DataCounter_Encode(U32 val, ASN_Stream stream);
#define Icb_DataCounter_EncodedSize(val) ENUM_EncodedSize(val, 0, 0, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DataCounter_SessionSize() ENUM_SessionSize(0, 0, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_DataCounter_Print(Icb_DataCounter value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpPSIMResetDataCounter_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMResetDataCounter_SetRequest_t {
    Icb_DataCounter counter;
};

U32 Icb_OpPSIMResetDataCounter_SetRequest_EncodedSize(Icb_OpPSIMResetDataCounter_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMResetDataCounter_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMResetDataCounter_SetRequest_Decode(Icb_OpPSIMResetDataCounter_SetRequest ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpPSIMResetDataCounter_SetRequest_Encode(Icb_OpPSIMResetDataCounter_SetRequest ThisPtr,
                                                        ASN_Stream stream);
Icb_OpPSIMResetDataCounter_SetRequest Icb_OpPSIMResetDataCounter_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMResetDataCounter_SetRequest_Print(Icb_OpPSIMResetDataCounter_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMResetDataCounter_Response of type PASN_Sequence
 */

struct Icb_OpPSIMResetDataCounter_Response_t {
    Icb_DataCounterValue byteCount;
    Icb_DataCounter counter;
};

U32 Icb_OpPSIMResetDataCounter_Response_EncodedSize(Icb_OpPSIMResetDataCounter_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMResetDataCounter_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMResetDataCounter_Response_Decode(Icb_OpPSIMResetDataCounter_Response ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpPSIMResetDataCounter_Response_Encode(Icb_OpPSIMResetDataCounter_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMResetDataCounter_Response Icb_OpPSIMResetDataCounter_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMResetDataCounter_Response_Print(Icb_OpPSIMResetDataCounter_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_APNConfiguration of type PASN_Sequence
 */

struct Icb_APNConfiguration_t {
    ASN_OctetString apnName;
    ASN_OctetString username;
    ASN_OctetString password;
};

U32 Icb_APNConfiguration_EncodedSize(Icb_APNConfiguration ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_APNConfiguration_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_APNConfiguration_Decode(Icb_APNConfiguration ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_APNConfiguration_Encode(Icb_APNConfiguration ThisPtr, ASN_Stream stream);
Icb_APNConfiguration Icb_APNConfiguration_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_APNConfiguration_Print(Icb_APNConfiguration ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_AutomaticAPNConfiguration of type PASN_Sequence
 */

struct Icb_AutomaticAPNConfiguration_t {
    BOOL exists__optional__configuration;
    Icb_APNConfiguration configuration;
};

U32 Icb_AutomaticAPNConfiguration_EncodedSize(Icb_AutomaticAPNConfiguration ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_AutomaticAPNConfiguration_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_AutomaticAPNConfiguration_Decode(Icb_AutomaticAPNConfiguration ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_AutomaticAPNConfiguration_Encode(Icb_AutomaticAPNConfiguration ThisPtr, ASN_Stream stream);
Icb_AutomaticAPNConfiguration Icb_AutomaticAPNConfiguration_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_AutomaticAPNConfiguration_Print(Icb_AutomaticAPNConfiguration ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_APNSelection of type PASN_Choice
 */

struct Icb_APNSelection_t {
    U32 choice;
    Icb_AutomaticAPNConfiguration automatic;
    Icb_APNConfiguration manual;
    Icb_AutomaticAPNConfiguration autoFailed;
};

enum Icb_APNSelection_Choices {
    e_Icb_APNSelection_automatic,
    e_Icb_APNSelection_manual,
    e_Icb_APNSelection_autoFailed
};

U32 Icb_APNSelection_EncodedSize(Icb_APNSelection ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_APNSelection_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_APNSelection_Decode(Icb_APNSelection ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_APNSelection_Encode(Icb_APNSelection ThisPtr, ASN_Stream stream);
Icb_APNSelection Icb_APNSelection_Create(ASN_Session session);
ASN_Result Icb_APNSelection_SetType(Icb_APNSelection ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_APNSelection_Print(Icb_APNSelection ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMConnect_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMConnect_SetRequest_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpPSIMConnect_SetRequest_EncodedSize(Icb_OpPSIMConnect_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMConnect_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMConnect_SetRequest_Decode(Icb_OpPSIMConnect_SetRequest ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpPSIMConnect_SetRequest_Encode(Icb_OpPSIMConnect_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpPSIMConnect_SetRequest Icb_OpPSIMConnect_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMConnect_SetRequest_Print(Icb_OpPSIMConnect_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMConnect_Response of type PASN_Sequence
 */

struct Icb_OpPSIMConnect_Response_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpPSIMConnect_Response_EncodedSize(Icb_OpPSIMConnect_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMConnect_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMConnect_Response_Decode(Icb_OpPSIMConnect_Response ThisPtr,
                                             ASN_Session session,
                                             ASN_Stream stream);
ASN_Result Icb_OpPSIMConnect_Response_Encode(Icb_OpPSIMConnect_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMConnect_Response Icb_OpPSIMConnect_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMConnect_Response_Print(Icb_OpPSIMConnect_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_PSIMConnectionStatus_t {
    e_Icb_PSIMConnectionStatus_connectedHome,
    e_Icb_PSIMConnectionStatus_connectedRoaming,
    e_Icb_PSIMConnectionStatus_connecting,
    e_Icb_PSIMConnectionStatus_disconnected,
    e_Icb_PSIMConnectionStatus_prohibited
};

#define Icb_PSIMConnectionStatus_Create(session) 0
ASN_Result Icb_PSIMConnectionStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PSIMConnectionStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_PSIMConnectionStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PSIMConnectionStatus_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_PSIMConnectionStatus_Print(Icb_PSIMConnectionStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_WirelessTechnology_t {
    e_Icb_WirelessTechnology_unknown,
    e_Icb_WirelessTechnology_gprs,
    e_Icb_WirelessTechnology_edge,
    e_Icb_WirelessTechnology_umts = 10,
    e_Icb_WirelessTechnology_hsdpa,
    e_Icb_WirelessTechnology_hsupa,
    e_Icb_WirelessTechnology_lte = 30
};

#define Icb_WirelessTechnology_Create(session) 0
ASN_Result Icb_WirelessTechnology_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WirelessTechnology_Encode(U32 val, ASN_Stream stream);
#define Icb_WirelessTechnology_EncodedSize(val) ENUM_EncodedSize(val, 0, 30, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WirelessTechnology_SessionSize() ENUM_SessionSize(0, 30, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WirelessTechnology_Print(Icb_WirelessTechnology value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpPSIMRoamingConfiguration_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMRoamingConfiguration_SetRequest_t {
    BOOL roamingAllowed;
};

U32 Icb_OpPSIMRoamingConfiguration_SetRequest_EncodedSize(Icb_OpPSIMRoamingConfiguration_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMRoamingConfiguration_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMRoamingConfiguration_SetRequest_Decode(Icb_OpPSIMRoamingConfiguration_SetRequest ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpPSIMRoamingConfiguration_SetRequest_Encode(Icb_OpPSIMRoamingConfiguration_SetRequest ThisPtr,
                                                            ASN_Stream stream);
Icb_OpPSIMRoamingConfiguration_SetRequest Icb_OpPSIMRoamingConfiguration_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMRoamingConfiguration_SetRequest_Print(Icb_OpPSIMRoamingConfiguration_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMRoamingConfiguration_Response of type PASN_Sequence
 */

struct Icb_OpPSIMRoamingConfiguration_Response_t {
    BOOL roamingAllowed;
};

U32 Icb_OpPSIMRoamingConfiguration_Response_EncodedSize(Icb_OpPSIMRoamingConfiguration_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMRoamingConfiguration_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMRoamingConfiguration_Response_Decode(Icb_OpPSIMRoamingConfiguration_Response ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpPSIMRoamingConfiguration_Response_Encode(Icb_OpPSIMRoamingConfiguration_Response ThisPtr,
                                                          ASN_Stream stream);
Icb_OpPSIMRoamingConfiguration_Response Icb_OpPSIMRoamingConfiguration_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMRoamingConfiguration_Response_Print(Icb_OpPSIMRoamingConfiguration_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpAccessRightPinCode_Response of type PASN_Sequence
 */

struct Icb_OpAccessRightPinCode_Response_t {
    BOOL pinCodeChangeAllowed;
};

U32 Icb_OpAccessRightPinCode_Response_EncodedSize(Icb_OpAccessRightPinCode_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpAccessRightPinCode_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpAccessRightPinCode_Response_Decode(Icb_OpAccessRightPinCode_Response ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpAccessRightPinCode_Response_Encode(Icb_OpAccessRightPinCode_Response ThisPtr, ASN_Stream stream);
Icb_OpAccessRightPinCode_Response Icb_OpAccessRightPinCode_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpAccessRightPinCode_Response_Print(Icb_OpAccessRightPinCode_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_Ecu_t { e_Icb_Ecu_none, e_Icb_Ecu_ihu, e_Icb_Ecu_vcm, e_Icb_Ecu_tem };

#define Icb_Ecu_Create(session) 0
ASN_Result Icb_Ecu_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_Ecu_Encode(U32 val, ASN_Stream stream);
#define Icb_Ecu_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_Ecu_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_Ecu_Print(Icb_Ecu value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpFactoryDefaultRestore_Response of type PASN_Sequence
 */

struct Icb_OpFactoryDefaultRestore_Response_t {
    BOOL restorationResult;
};

U32 Icb_OpFactoryDefaultRestore_Response_EncodedSize(Icb_OpFactoryDefaultRestore_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpFactoryDefaultRestore_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpFactoryDefaultRestore_Response_Decode(Icb_OpFactoryDefaultRestore_Response ThisPtr,
                                                       ASN_Session session,
                                                       ASN_Stream stream);
ASN_Result Icb_OpFactoryDefaultRestore_Response_Encode(Icb_OpFactoryDefaultRestore_Response ThisPtr, ASN_Stream stream);
Icb_OpFactoryDefaultRestore_Response Icb_OpFactoryDefaultRestore_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpFactoryDefaultRestore_Response_Print(Icb_OpFactoryDefaultRestore_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpConnectivityStatus_Response of type PASN_Sequence
 */

struct Icb_OpConnectivityStatus_Response_t {
    BOOL generalConnectivityAvailable;
};

U32 Icb_OpConnectivityStatus_Response_EncodedSize(Icb_OpConnectivityStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpConnectivityStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpConnectivityStatus_Response_Decode(Icb_OpConnectivityStatus_Response ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpConnectivityStatus_Response_Encode(Icb_OpConnectivityStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpConnectivityStatus_Response Icb_OpConnectivityStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpConnectivityStatus_Response_Print(Icb_OpConnectivityStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpConnectivityStatus_Notification of type PASN_Sequence
 */

struct Icb_OpConnectivityStatus_Notification_t {
    BOOL generalConnectivityAvailable;
};

U32 Icb_OpConnectivityStatus_Notification_EncodedSize(Icb_OpConnectivityStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpConnectivityStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpConnectivityStatus_Notification_Decode(Icb_OpConnectivityStatus_Notification ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpConnectivityStatus_Notification_Encode(Icb_OpConnectivityStatus_Notification ThisPtr,
                                                        ASN_Stream stream);
Icb_OpConnectivityStatus_Notification Icb_OpConnectivityStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpConnectivityStatus_Notification_Print(Icb_OpConnectivityStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_WorkshopWlanConnectionResult_t {
    e_Icb_WorkshopWlanConnectionResult_connected,
    e_Icb_WorkshopWlanConnectionResult_failed_no_aps,
    e_Icb_WorkshopWlanConnectionResult_failed_authentication,
    e_Icb_WorkshopWlanConnectionResult_failed_timeout,
    e_Icb_WorkshopWlanConnectionResult_failed_general
};

#define Icb_WorkshopWlanConnectionResult_Create(session) 0
ASN_Result Icb_WorkshopWlanConnectionResult_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WorkshopWlanConnectionResult_Encode(U32 val, ASN_Stream stream);
#define Icb_WorkshopWlanConnectionResult_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WorkshopWlanConnectionResult_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WorkshopWlanConnectionResult_Print(Icb_WorkshopWlanConnectionResult value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpWorkshopWlanDetected_Notification of type PASN_Sequence
 */

struct Icb_OpWorkshopWlanDetected_Notification_t {
    U32 mode;
    BOOL nomadicDevicePresent;
};

U32 Icb_OpWorkshopWlanDetected_Notification_EncodedSize(Icb_OpWorkshopWlanDetected_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWorkshopWlanDetected_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWorkshopWlanDetected_Notification_Decode(Icb_OpWorkshopWlanDetected_Notification ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpWorkshopWlanDetected_Notification_Encode(Icb_OpWorkshopWlanDetected_Notification ThisPtr,
                                                          ASN_Stream stream);
Icb_OpWorkshopWlanDetected_Notification Icb_OpWorkshopWlanDetected_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWorkshopWlanDetected_Notification_Print(Icb_OpWorkshopWlanDetected_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_InternetSource_t {
    e_Icb_InternetSource_none = 1,
    e_Icb_InternetSource_psim,
    e_Icb_InternetSource_bluetooth,
    e_Icb_InternetSource_usb
};

#define Icb_InternetSource_Create(session) 0
ASN_Result Icb_InternetSource_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_InternetSource_Encode(U32 val, ASN_Stream stream);
#define Icb_InternetSource_EncodedSize(val) ENUM_EncodedSize(val, 0, 255, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_InternetSource_SessionSize() ENUM_SessionSize(0, 255, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_InternetSource_Print(Icb_InternetSource value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpInternetSourceCtrlBT_SetRequest of type PASN_Sequence
 */

struct Icb_OpInternetSourceCtrlBT_SetRequest_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpInternetSourceCtrlBT_SetRequest_EncodedSize(Icb_OpInternetSourceCtrlBT_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetSourceCtrlBT_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetSourceCtrlBT_SetRequest_Decode(Icb_OpInternetSourceCtrlBT_SetRequest ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpInternetSourceCtrlBT_SetRequest_Encode(Icb_OpInternetSourceCtrlBT_SetRequest ThisPtr,
                                                        ASN_Stream stream);
Icb_OpInternetSourceCtrlBT_SetRequest Icb_OpInternetSourceCtrlBT_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetSourceCtrlBT_SetRequest_Print(Icb_OpInternetSourceCtrlBT_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetSourceCtrlBT_Response of type PASN_Sequence
 */

struct Icb_OpInternetSourceCtrlBT_Response_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpInternetSourceCtrlBT_Response_EncodedSize(Icb_OpInternetSourceCtrlBT_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetSourceCtrlBT_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetSourceCtrlBT_Response_Decode(Icb_OpInternetSourceCtrlBT_Response ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpInternetSourceCtrlBT_Response_Encode(Icb_OpInternetSourceCtrlBT_Response ThisPtr, ASN_Stream stream);
Icb_OpInternetSourceCtrlBT_Response Icb_OpInternetSourceCtrlBT_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetSourceCtrlBT_Response_Print(Icb_OpInternetSourceCtrlBT_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetSourceCtrlBT_Notification of type PASN_Sequence
 */

struct Icb_OpInternetSourceCtrlBT_Notification_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpInternetSourceCtrlBT_Notification_EncodedSize(Icb_OpInternetSourceCtrlBT_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetSourceCtrlBT_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetSourceCtrlBT_Notification_Decode(Icb_OpInternetSourceCtrlBT_Notification ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpInternetSourceCtrlBT_Notification_Encode(Icb_OpInternetSourceCtrlBT_Notification ThisPtr,
                                                          ASN_Stream stream);
Icb_OpInternetSourceCtrlBT_Notification Icb_OpInternetSourceCtrlBT_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetSourceCtrlBT_Notification_Print(Icb_OpInternetSourceCtrlBT_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetSourceCtrlUSB_SetRequest of type PASN_Sequence
 */

struct Icb_OpInternetSourceCtrlUSB_SetRequest_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpInternetSourceCtrlUSB_SetRequest_EncodedSize(Icb_OpInternetSourceCtrlUSB_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetSourceCtrlUSB_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetSourceCtrlUSB_SetRequest_Decode(Icb_OpInternetSourceCtrlUSB_SetRequest ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpInternetSourceCtrlUSB_SetRequest_Encode(Icb_OpInternetSourceCtrlUSB_SetRequest ThisPtr,
                                                         ASN_Stream stream);
Icb_OpInternetSourceCtrlUSB_SetRequest Icb_OpInternetSourceCtrlUSB_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetSourceCtrlUSB_SetRequest_Print(Icb_OpInternetSourceCtrlUSB_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetSourceCtrlUSB_Response of type PASN_Sequence
 */

struct Icb_OpInternetSourceCtrlUSB_Response_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpInternetSourceCtrlUSB_Response_EncodedSize(Icb_OpInternetSourceCtrlUSB_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetSourceCtrlUSB_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetSourceCtrlUSB_Response_Decode(Icb_OpInternetSourceCtrlUSB_Response ThisPtr,
                                                       ASN_Session session,
                                                       ASN_Stream stream);
ASN_Result Icb_OpInternetSourceCtrlUSB_Response_Encode(Icb_OpInternetSourceCtrlUSB_Response ThisPtr, ASN_Stream stream);
Icb_OpInternetSourceCtrlUSB_Response Icb_OpInternetSourceCtrlUSB_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetSourceCtrlUSB_Response_Print(Icb_OpInternetSourceCtrlUSB_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetSourceCtrlUSB_Notification of type PASN_Sequence
 */

struct Icb_OpInternetSourceCtrlUSB_Notification_t {
    Icb_OnOffSetting onOff;
};

U32 Icb_OpInternetSourceCtrlUSB_Notification_EncodedSize(Icb_OpInternetSourceCtrlUSB_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetSourceCtrlUSB_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetSourceCtrlUSB_Notification_Decode(Icb_OpInternetSourceCtrlUSB_Notification ThisPtr,
                                                           ASN_Session session,
                                                           ASN_Stream stream);
ASN_Result Icb_OpInternetSourceCtrlUSB_Notification_Encode(Icb_OpInternetSourceCtrlUSB_Notification ThisPtr,
                                                           ASN_Stream stream);
Icb_OpInternetSourceCtrlUSB_Notification Icb_OpInternetSourceCtrlUSB_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetSourceCtrlUSB_Notification_Print(Icb_OpInternetSourceCtrlUSB_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMMessage_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMMessage_SetRequest_t {
    BOOL exists__optional__sender;
    ASN_UTF8String sender;
    ASN_UTF8String number;
    ASN_UTF8String body;
    ASN_UTF8String date;
    ASN_UTF8String time;
};

U32 Icb_OpPSIMMessage_SetRequest_EncodedSize(Icb_OpPSIMMessage_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMMessage_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMMessage_SetRequest_Decode(Icb_OpPSIMMessage_SetRequest ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpPSIMMessage_SetRequest_Encode(Icb_OpPSIMMessage_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpPSIMMessage_SetRequest Icb_OpPSIMMessage_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMMessage_SetRequest_Print(Icb_OpPSIMMessage_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_WLANMode_t { e_Icb_WLANMode_off, e_Icb_WLANMode_sta, e_Icb_WLANMode_ap, e_Icb_WLANMode_staWS };

#define Icb_WLANMode_Create(session) 0
ASN_Result Icb_WLANMode_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANMode_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANMode_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANMode_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANMode_Print(Icb_WLANMode value);
#endif /* #ifdef ASN_PRINT */
enum Icb_WLANFrequencyBand_t { e_Icb_WLANFrequencyBand_lowFrequencyBand, e_Icb_WLANFrequencyBand_highFrequencyBand };

#define Icb_WLANFrequencyBand_Create(session) 0
ASN_Result Icb_WLANFrequencyBand_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANFrequencyBand_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANFrequencyBand_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANFrequencyBand_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANFrequencyBand_Print(Icb_WLANFrequencyBand value);
#endif /* #ifdef ASN_PRINT */
enum Icb_WLANChannelWidthData_t {
    e_Icb_WLANChannelWidthData_width_5MHz,
    e_Icb_WLANChannelWidthData_width_10MHz,
    e_Icb_WLANChannelWidthData_width_20MHz
};

#define Icb_WLANChannelWidthData_Create(session) 0
ASN_Result Icb_WLANChannelWidthData_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANChannelWidthData_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANChannelWidthData_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANChannelWidthData_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANChannelWidthData_Print(Icb_WLANChannelWidthData value);
#endif /* #ifdef ASN_PRINT */
/*
* Icb_SSID of type PASN_OctetString
*/
#define Icb_SSID_Create(session) ASN_OctetString_Create(session)
#define Icb_SSID_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 0, 32)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SSID_SessionSize() ASN_OctetString_SessionSize(0, 32)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_SSID_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_SSID_Decode(ThisPtr, session, stream) ASN_OctetString_Decode(ThisPtr, session, stream, 0, 32)
#define Icb_SSID_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 0, 32)

/*
* Icb_WLAN_Password of type PASN_OctetString
*/
#define Icb_WLAN_Password_Create(session) ASN_OctetString_Create(session)
#define Icb_WLAN_Password_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 10, 64)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLAN_Password_SessionSize() ASN_OctetString_SessionSize(10, 64)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_WLAN_Password_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_WLAN_Password_Decode(ThisPtr, session, stream) ASN_OctetString_Decode(ThisPtr, session, stream, 10, 64)
#define Icb_WLAN_Password_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 10, 64)

/*
 * Icb_WLANConnDevice of type PASN_Sequence
 */

struct Icb_WLANConnDevice_t {
    ASN_OctetString deviceName;
};

U32 Icb_WLANConnDevice_EncodedSize(Icb_WLANConnDevice ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_WLANConnDevice_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_WLANConnDevice_Decode(Icb_WLANConnDevice ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANConnDevice_Encode(Icb_WLANConnDevice ThisPtr, ASN_Stream stream);
Icb_WLANConnDevice Icb_WLANConnDevice_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_WLANConnDevice_Print(Icb_WLANConnDevice ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_WLANConnectStatus_t {
    e_Icb_WLANConnectStatus_disconnected,
    e_Icb_WLANConnectStatus_connected,
    e_Icb_WLANConnectStatus_wrongPassword
};

#define Icb_WLANConnectStatus_Create(session) 0
ASN_Result Icb_WLANConnectStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANConnectStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANConnectStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANConnectStatus_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANConnectStatus_Print(Icb_WLANConnectStatus value);
#endif /* #ifdef ASN_PRINT */
/*
* Icb_WLANExternalPassword of type PASN_OctetString
*/
#define Icb_WLANExternalPassword_Create(session) ASN_OctetString_Create(session)
#define Icb_WLANExternalPassword_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 0, 64)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANExternalPassword_SessionSize() ASN_OctetString_SessionSize(0, 64)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_WLANExternalPassword_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_WLANExternalPassword_Decode(ThisPtr, session, stream) \
    ASN_OctetString_Decode(ThisPtr, session, stream, 0, 64)
#define Icb_WLANExternalPassword_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 0, 64)

/*
 * Icb_OpWLANSTADisconnect_Response of type PASN_Sequence
 */

struct Icb_OpWLANSTADisconnect_Response_t {
    Icb_WLANConnectStatus wLANConnectStatus;
};

U32 Icb_OpWLANSTADisconnect_Response_EncodedSize(Icb_OpWLANSTADisconnect_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTADisconnect_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTADisconnect_Response_Decode(Icb_OpWLANSTADisconnect_Response ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpWLANSTADisconnect_Response_Encode(Icb_OpWLANSTADisconnect_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANSTADisconnect_Response Icb_OpWLANSTADisconnect_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTADisconnect_Response_Print(Icb_OpWLANSTADisconnect_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_WLANAPCurrentStatus_t { e_Icb_WLANAPCurrentStatus_disabled, e_Icb_WLANAPCurrentStatus_enabled };

#define Icb_WLANAPCurrentStatus_Create(session) 0
ASN_Result Icb_WLANAPCurrentStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANAPCurrentStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANAPCurrentStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANAPCurrentStatus_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANAPCurrentStatus_Print(Icb_WLANAPCurrentStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_WLANConnectionStatus_t { e_Icb_WLANConnectionStatus_disconnected, e_Icb_WLANConnectionStatus_connected };

#define Icb_WLANConnectionStatus_Create(session) 0
ASN_Result Icb_WLANConnectionStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANConnectionStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANConnectionStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANConnectionStatus_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANConnectionStatus_Print(Icb_WLANConnectionStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_WLANSecurityType_t {
    e_Icb_WLANSecurityType_open,
    e_Icb_WLANSecurityType_wEP_open,
    e_Icb_WLANSecurityType_wEP_SharedKey,
    e_Icb_WLANSecurityType_wPA_EAP_TLS,
    e_Icb_WLANSecurityType_wPA_PSK,
    e_Icb_WLANSecurityType_wPA2_PSK,
    e_Icb_WLANSecurityType_wPA2_EAP_TLS
};

#define Icb_WLANSecurityType_Create(session) 0
ASN_Result Icb_WLANSecurityType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANSecurityType_Encode(U32 val, ASN_Stream stream);
#define Icb_WLANSecurityType_EncodedSize(val) ENUM_EncodedSize(val, 0, 6, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_WLANSecurityType_SessionSize() ENUM_SessionSize(0, 6, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_WLANSecurityType_Print(Icb_WLANSecurityType value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpWLANSTAForgetRememberedNetwk_SetRequest of type PASN_Sequence
 */

struct Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_t {
    Icb_SSID wLANSSIDToForget;
};

U32 Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_EncodedSize(Icb_OpWLANSTAForgetRememberedNetwk_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_Decode(Icb_OpWLANSTAForgetRememberedNetwk_SetRequest ThisPtr,
                                                                ASN_Session session,
                                                                ASN_Stream stream);
ASN_Result Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_Encode(Icb_OpWLANSTAForgetRememberedNetwk_SetRequest ThisPtr,
                                                                ASN_Stream stream);
Icb_OpWLANSTAForgetRememberedNetwk_SetRequest Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTAForgetRememberedNetwk_SetRequest_Print(Icb_OpWLANSTAForgetRememberedNetwk_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANSTAForgetRememberedNetwk_Response of type PASN_Sequence
 */

struct Icb_OpWLANSTAForgetRememberedNetwk_Response_t {
    Icb_SSID wLANSSIDToForgetStatus;
};

U32 Icb_OpWLANSTAForgetRememberedNetwk_Response_EncodedSize(Icb_OpWLANSTAForgetRememberedNetwk_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTAForgetRememberedNetwk_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTAForgetRememberedNetwk_Response_Decode(Icb_OpWLANSTAForgetRememberedNetwk_Response ThisPtr,
                                                              ASN_Session session,
                                                              ASN_Stream stream);
ASN_Result Icb_OpWLANSTAForgetRememberedNetwk_Response_Encode(Icb_OpWLANSTAForgetRememberedNetwk_Response ThisPtr,
                                                              ASN_Stream stream);
Icb_OpWLANSTAForgetRememberedNetwk_Response Icb_OpWLANSTAForgetRememberedNetwk_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTAForgetRememberedNetwk_Response_Print(Icb_OpWLANSTAForgetRememberedNetwk_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
* Icb_PinCode of type PASN_OctetString
*/
#define Icb_PinCode_Create(session) ASN_OctetString_Create(session)
#define Icb_PinCode_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 4, 8)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PinCode_SessionSize() ASN_OctetString_SessionSize(4, 8)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_PinCode_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_PinCode_Decode(ThisPtr, session, stream) ASN_OctetString_Decode(ThisPtr, session, stream, 4, 8)
#define Icb_PinCode_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 4, 8)

enum Icb_SimSecuritySetting_t {
    e_Icb_SimSecuritySetting_on,
    e_Icb_SimSecuritySetting_off,
    e_Icb_SimSecuritySetting_auto
};

#define Icb_SimSecuritySetting_Create(session) 0
ASN_Result Icb_SimSecuritySetting_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SimSecuritySetting_Encode(U32 val, ASN_Stream stream);
#define Icb_SimSecuritySetting_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SimSecuritySetting_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SimSecuritySetting_Print(Icb_SimSecuritySetting value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpPSIMSecurity_Response of type PASN_Sequence
 */

struct Icb_OpPSIMSecurity_Response_t {
    Icb_SimSecuritySetting setting;
};

U32 Icb_OpPSIMSecurity_Response_EncodedSize(Icb_OpPSIMSecurity_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMSecurity_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMSecurity_Response_Decode(Icb_OpPSIMSecurity_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpPSIMSecurity_Response_Encode(Icb_OpPSIMSecurity_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMSecurity_Response Icb_OpPSIMSecurity_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMSecurity_Response_Print(Icb_OpPSIMSecurity_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_PinPukCommand of type PASN_Choice
 */

struct Icb_PinPukCommand_t {
    U32 choice;
    Icb_PinCode enterPin;
    Icb_PinPukCodes enterPuk;
    Icb_PinPinCodes changePin;
};

enum Icb_PinPukCommand_Choices {
    e_Icb_PinPukCommand_enterPin,
    e_Icb_PinPukCommand_enterPuk,
    e_Icb_PinPukCommand_changePin
};

U32 Icb_PinPukCommand_EncodedSize(Icb_PinPukCommand ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_PinPukCommand_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_PinPukCommand_Decode(Icb_PinPukCommand ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PinPukCommand_Encode(Icb_PinPukCommand ThisPtr, ASN_Stream stream);
Icb_PinPukCommand Icb_PinPukCommand_Create(ASN_Session session);
ASN_Result Icb_PinPukCommand_SetType(Icb_PinPukCommand ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_PinPukCommand_Print(Icb_PinPukCommand ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_PinPukCodes of type PASN_Sequence
 */

struct Icb_PinPukCodes_t {
    ASN_OctetString puk;
    Icb_PinCode newpin;
};

U32 Icb_PinPukCodes_EncodedSize(Icb_PinPukCodes ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_PinPukCodes_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_PinPukCodes_Decode(Icb_PinPukCodes ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PinPukCodes_Encode(Icb_PinPukCodes ThisPtr, ASN_Stream stream);
Icb_PinPukCodes Icb_PinPukCodes_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_PinPukCodes_Print(Icb_PinPukCodes ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_PinPinCodes of type PASN_Sequence
 */

struct Icb_PinPinCodes_t {
    Icb_PinCode oldpin;
    Icb_PinCode newpin;
};

U32 Icb_PinPinCodes_EncodedSize(Icb_PinPinCodes ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_PinPinCodes_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_PinPinCodes_Decode(Icb_PinPinCodes ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PinPinCodes_Encode(Icb_PinPinCodes ThisPtr, ASN_Stream stream);
Icb_PinPinCodes Icb_PinPinCodes_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_PinPinCodes_Print(Icb_PinPinCodes ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_RegisterState of type PASN_Choice
 */

struct Icb_RegisterState_t {
    U32 choice;
    Icb_NetworkOperator registered;
    Icb_NetworkOperator regRoaming;
    ASN_Null notRegSearching;
    ASN_Null notRegNotSearching;
    ASN_Null regDenied;
};

enum Icb_RegisterState_Choices {
    e_Icb_RegisterState_registered,
    e_Icb_RegisterState_regRoaming,
    e_Icb_RegisterState_notRegSearching,
    e_Icb_RegisterState_notRegNotSearching,
    e_Icb_RegisterState_regDenied
};

U32 Icb_RegisterState_EncodedSize(Icb_RegisterState ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_RegisterState_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_RegisterState_Decode(Icb_RegisterState ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_RegisterState_Encode(Icb_RegisterState ThisPtr, ASN_Stream stream);
Icb_RegisterState Icb_RegisterState_Create(ASN_Session session);
ASN_Result Icb_RegisterState_SetType(Icb_RegisterState ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_RegisterState_Print(Icb_RegisterState ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_NwOperatorId of type PASN_Sequence
 */

struct Icb_NwOperatorId_t {
    U32 mcc;
    U32 mnc;
};

U32 Icb_NwOperatorId_EncodedSize(Icb_NwOperatorId ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_NwOperatorId_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_NwOperatorId_Decode(Icb_NwOperatorId ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_NwOperatorId_Encode(Icb_NwOperatorId ThisPtr, ASN_Stream stream);
Icb_NwOperatorId Icb_NwOperatorId_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_NwOperatorId_Print(Icb_NwOperatorId ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_NetworkType_t { e_Icb_NetworkType_gsm, e_Icb_NetworkType_umts, e_Icb_NetworkType_lte };

#define Icb_NetworkType_Create(session) 0
ASN_Result Icb_NetworkType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_NetworkType_Encode(U32 val, ASN_Stream stream);
#define Icb_NetworkType_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_NetworkType_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_NetworkType_Print(Icb_NetworkType value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OperatorSelection of type PASN_Choice
 */

struct Icb_OperatorSelection_t {
    U32 choice;
    ASN_Null automatic;
    Icb_NwOperatorId setOperator;
};

enum Icb_OperatorSelection_Choices { e_Icb_OperatorSelection_automatic, e_Icb_OperatorSelection_setOperator };

U32 Icb_OperatorSelection_EncodedSize(Icb_OperatorSelection ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OperatorSelection_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OperatorSelection_Decode(Icb_OperatorSelection ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OperatorSelection_Encode(Icb_OperatorSelection ThisPtr, ASN_Stream stream);
Icb_OperatorSelection Icb_OperatorSelection_Create(ASN_Session session);
ASN_Result Icb_OperatorSelection_SetType(Icb_OperatorSelection ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_OperatorSelection_Print(Icb_OperatorSelection ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_SimStatus of type PASN_Choice
 */

struct Icb_SimStatus_t {
    U32 choice;
    ASN_Null notInUse;
    ASN_Null notAvailable;
    ASN_Null pukBlocked;
    Icb_PukTrials pinBlocked;
    Icb_PinTrials pinRequired;
    ASN_Null initializing;
    ASN_Null readyForSettings;
};

enum Icb_SimStatus_Choices {
    e_Icb_SimStatus_notInUse,
    e_Icb_SimStatus_notAvailable,
    e_Icb_SimStatus_pukBlocked,
    e_Icb_SimStatus_pinBlocked,
    e_Icb_SimStatus_pinRequired,
    e_Icb_SimStatus_initializing,
    e_Icb_SimStatus_readyForSettings
};

U32 Icb_SimStatus_EncodedSize(Icb_SimStatus ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_SimStatus_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_SimStatus_Decode(Icb_SimStatus ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SimStatus_Encode(Icb_SimStatus ThisPtr, ASN_Stream stream);
Icb_SimStatus Icb_SimStatus_Create(ASN_Session session);
ASN_Result Icb_SimStatus_SetType(Icb_SimStatus ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_SimStatus_Print(Icb_SimStatus ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
* Icb_IMSINumber of type PASN_OctetString
*/
#define Icb_IMSINumber_Create(session) ASN_OctetString_Create(session)
#define Icb_IMSINumber_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 10, 20)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_IMSINumber_SessionSize() ASN_OctetString_SessionSize(10, 20)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_IMSINumber_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_IMSINumber_Decode(ThisPtr, session, stream) ASN_OctetString_Decode(ThisPtr, session, stream, 10, 20)
#define Icb_IMSINumber_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 10, 20)

enum Icb_PinTrials_t {
    e_Icb_PinTrials_unknown,
    e_Icb_PinTrials_oneRemaining,
    e_Icb_PinTrials_twoRemaining,
    e_Icb_PinTrials_threeRemaining
};

#define Icb_PinTrials_Create(session) 0
ASN_Result Icb_PinTrials_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PinTrials_Encode(U32 val, ASN_Stream stream);
#define Icb_PinTrials_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PinTrials_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_PinTrials_Print(Icb_PinTrials value);
#endif /* #ifdef ASN_PRINT */
enum Icb_PukTrials_t {
    e_Icb_PukTrials_unknown,
    e_Icb_PukTrials_oneRemaining,
    e_Icb_PukTrials_twoRemaining,
    e_Icb_PukTrials_threeRemaining,
    e_Icb_PukTrials_fourRemaining,
    e_Icb_PukTrials_fiveRemaining,
    e_Icb_PukTrials_sixRemaining,
    e_Icb_PukTrials_sevenRemaining,
    e_Icb_PukTrials_eightRemaining,
    e_Icb_PukTrials_nineRemaining,
    e_Icb_PukTrials_tenRemaining
};

#define Icb_PukTrials_Create(session) 0
ASN_Result Icb_PukTrials_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PukTrials_Encode(U32 val, ASN_Stream stream);
#define Icb_PukTrials_EncodedSize(val) ENUM_EncodedSize(val, 0, 10, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PukTrials_SessionSize() ENUM_SessionSize(0, 10, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_PukTrials_Print(Icb_PukTrials value);
#endif /* #ifdef ASN_PRINT */
enum Icb_PhoneOperationMode_t {
    e_Icb_PhoneOperationMode_phoneOff,
    e_Icb_PhoneOperationMode_phoneStartup,
    e_Icb_PhoneOperationMode_phoneEnabled,
    e_Icb_PhoneOperationMode_temStandby,
    e_Icb_PhoneOperationMode_temClosed,
    e_Icb_PhoneOperationMode_temOpen,
    e_Icb_PhoneOperationMode_probation,
    e_Icb_PhoneOperationMode_probationRestricted
};

#define Icb_PhoneOperationMode_Create(session) 0
ASN_Result Icb_PhoneOperationMode_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_PhoneOperationMode_Encode(U32 val, ASN_Stream stream);
#define Icb_PhoneOperationMode_EncodedSize(val) ENUM_EncodedSize(val, 0, 7, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_PhoneOperationMode_SessionSize() ENUM_SessionSize(0, 7, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_PhoneOperationMode_Print(Icb_PhoneOperationMode value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpPSIMSignalStrength_Notification of type PASN_Sequence
 */

struct Icb_OpPSIMSignalStrength_Notification_t {
    U32 rssi;
};

U32 Icb_OpPSIMSignalStrength_Notification_EncodedSize(Icb_OpPSIMSignalStrength_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMSignalStrength_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMSignalStrength_Notification_Decode(Icb_OpPSIMSignalStrength_Notification ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpPSIMSignalStrength_Notification_Encode(Icb_OpPSIMSignalStrength_Notification ThisPtr,
                                                        ASN_Stream stream);
Icb_OpPSIMSignalStrength_Notification Icb_OpPSIMSignalStrength_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMSignalStrength_Notification_Print(Icb_OpPSIMSignalStrength_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
* Icb_UssdCode of type PASN_OctetString
*/
#define Icb_UssdCode_Create(session) ASN_OctetString_Create(session)
#define Icb_UssdCode_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 1, 160)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_UssdCode_SessionSize() ASN_OctetString_SessionSize(1, 160)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_UssdCode_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_UssdCode_Decode(ThisPtr, session, stream) ASN_OctetString_Decode(ThisPtr, session, stream, 1, 160)
#define Icb_UssdCode_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 1, 160)

/*
 * Icb_UssdReturnCode of type PASN_Sequence
 */

struct Icb_UssdReturnCode_t {
    ASN_UTF8String ussdReturnCode;
};

U32 Icb_UssdReturnCode_EncodedSize(Icb_UssdReturnCode ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_UssdReturnCode_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_UssdReturnCode_Decode(Icb_UssdReturnCode ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_UssdReturnCode_Encode(Icb_UssdReturnCode ThisPtr, ASN_Stream stream);
Icb_UssdReturnCode Icb_UssdReturnCode_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_UssdReturnCode_Print(Icb_UssdReturnCode ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_UssdStatus_t {
    e_Icb_UssdStatus_successful,
    e_Icb_UssdStatus_rejected,
    e_Icb_UssdStatus_timeout,
    e_Icb_UssdStatus_netInit
};

#define Icb_UssdStatus_Create(session) 0
ASN_Result Icb_UssdStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_UssdStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_UssdStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_UssdStatus_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_UssdStatus_Print(Icb_UssdStatus value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpPremiumAudio_SetRequest of type PASN_Sequence
 */

struct Icb_OpPremiumAudio_SetRequest_t {
    BOOL isRequested;
};

U32 Icb_OpPremiumAudio_SetRequest_EncodedSize(Icb_OpPremiumAudio_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPremiumAudio_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPremiumAudio_SetRequest_Decode(Icb_OpPremiumAudio_SetRequest ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpPremiumAudio_SetRequest_Encode(Icb_OpPremiumAudio_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpPremiumAudio_SetRequest Icb_OpPremiumAudio_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPremiumAudio_SetRequest_Print(Icb_OpPremiumAudio_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPremiumAudio_Response of type PASN_Sequence
 */

struct Icb_OpPremiumAudio_Response_t {
    Icb_AudioStatus premiumAudioStatus;
};

U32 Icb_OpPremiumAudio_Response_EncodedSize(Icb_OpPremiumAudio_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPremiumAudio_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPremiumAudio_Response_Decode(Icb_OpPremiumAudio_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpPremiumAudio_Response_Encode(Icb_OpPremiumAudio_Response ThisPtr, ASN_Stream stream);
Icb_OpPremiumAudio_Response Icb_OpPremiumAudio_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPremiumAudio_Response_Print(Icb_OpPremiumAudio_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_AssistCallAction_t { e_Icb_AssistCallAction_acceptCall, e_Icb_AssistCallAction_hangupCall };

#define Icb_AssistCallAction_Create(session) 0
ASN_Result Icb_AssistCallAction_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_AssistCallAction_Encode(U32 val, ASN_Stream stream);
#define Icb_AssistCallAction_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_AssistCallAction_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_AssistCallAction_Print(Icb_AssistCallAction value);
#endif /* #ifdef ASN_PRINT */
/*
* Icb_MacAddress of type PASN_OctetString
*/
#define Icb_MacAddress_Create(session) ASN_OctetString_Create(session)
#define Icb_MacAddress_EncodedSize(ThisPtr) ASN_OctetString_EncodedSize(ThisPtr, 11, 23)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_MacAddress_SessionSize() ASN_OctetString_SessionSize(11, 23)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
#define Icb_MacAddress_Print(ThisPtr) ASN_OctetString_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */
#define Icb_MacAddress_Decode(ThisPtr, session, stream) ASN_OctetString_Decode(ThisPtr, session, stream, 11, 23)
#define Icb_MacAddress_Encode(ThisPtr, stream) ASN_OctetString_Encode(ThisPtr, stream, 11, 23)

enum Icb_RadioMode_t { e_Icb_RadioMode_telematic, e_Icb_RadioMode_personal, e_Icb_RadioMode_silentTSIM };

#define Icb_RadioMode_Create(session) 0
ASN_Result Icb_RadioMode_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_RadioMode_Encode(U32 val, ASN_Stream stream);
#define Icb_RadioMode_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_RadioMode_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_RadioMode_Print(Icb_RadioMode value);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_RadioFrequencyHz of PASN_Integer
 */

#define Icb_RadioFrequencyHz_EncodedSize(ThisPtr) U32_EncodedSize(ThisPtr, 0, 4294967295U)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_RadioFrequencyHz_SessionSize() U32_SessionSize(0, 4294967295U)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#define Icb_RadioFrequencyHz_Decode(ThisPtr, session, stream) U32_Decode(ThisPtr, session, stream, 0, 4294967295U)
#define Icb_RadioFrequencyHz_Encode(ThisPtr, stream) U32_Encode(ThisPtr, stream, 0, 4294967295U)
#define Icb_RadioFrequencyHz_Create(session) U32_Create(session)
#ifdef ASN_PRINT
#define Icb_RadioFrequencyHz_Print(ThisPtr) U32_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDLCConnectedSignal_Response of type PASN_Sequence
 */

struct Icb_OpDLCConnectedSignal_Response_t {
    BOOL dlcConnected;
};

U32 Icb_OpDLCConnectedSignal_Response_EncodedSize(Icb_OpDLCConnectedSignal_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDLCConnectedSignal_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDLCConnectedSignal_Response_Decode(Icb_OpDLCConnectedSignal_Response ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpDLCConnectedSignal_Response_Encode(Icb_OpDLCConnectedSignal_Response ThisPtr, ASN_Stream stream);
Icb_OpDLCConnectedSignal_Response Icb_OpDLCConnectedSignal_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDLCConnectedSignal_Response_Print(Icb_OpDLCConnectedSignal_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_DRVehiclePosition of type PASN_Choice
 */

struct Icb_DRVehiclePosition_t {
    U32 choice;
    ASN_Null noValidData;
    Icb_DRPositionData drPosition;
};

enum Icb_DRVehiclePosition_Choices { e_Icb_DRVehiclePosition_noValidData, e_Icb_DRVehiclePosition_drPosition };

U32 Icb_DRVehiclePosition_EncodedSize(Icb_DRVehiclePosition ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_DRVehiclePosition_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_DRVehiclePosition_Decode(Icb_DRVehiclePosition ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DRVehiclePosition_Encode(Icb_DRVehiclePosition ThisPtr, ASN_Stream stream);
Icb_DRVehiclePosition Icb_DRVehiclePosition_Create(ASN_Session session);
ASN_Result Icb_DRVehiclePosition_SetType(Icb_DRVehiclePosition ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_DRVehiclePosition_Print(Icb_DRVehiclePosition ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_GnssFixType_t {
    e_Icb_GnssFixType_notAvailable,
    e_Icb_GnssFixType_noFix,
    e_Icb_GnssFixType_fix2D,
    e_Icb_GnssFixType_fix3D,
    e_Icb_GnssFixType_startupMode
};

#define Icb_GnssFixType_Create(session) 0
ASN_Result Icb_GnssFixType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GnssFixType_Encode(U32 val, ASN_Stream stream);
#define Icb_GnssFixType_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_GnssFixType_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_GnssFixType_Print(Icb_GnssFixType value);
#endif /* #ifdef ASN_PRINT */
enum Icb_DeadReckoningType_t {
    e_Icb_DeadReckoningType_noDr,
    e_Icb_DeadReckoningType_drNoMapMatch,
    e_Icb_DeadReckoningType_drMapMatched
};

#define Icb_DeadReckoningType_Create(session) 0
ASN_Result Icb_DeadReckoningType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DeadReckoningType_Encode(U32 val, ASN_Stream stream);
#define Icb_DeadReckoningType_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DeadReckoningType_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_DeadReckoningType_Print(Icb_DeadReckoningType value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_GPSSystemTime of type PASN_Sequence
 */

struct Icb_GPSSystemTime_t {
    U32 weekNumber;
    U32 timeOfWeek;
};

U32 Icb_GPSSystemTime_EncodedSize(Icb_GPSSystemTime ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_GPSSystemTime_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_GPSSystemTime_Decode(Icb_GPSSystemTime ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GPSSystemTime_Encode(Icb_GPSSystemTime ThisPtr, ASN_Stream stream);
Icb_GPSSystemTime Icb_GPSSystemTime_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_GPSSystemTime_Print(Icb_GPSSystemTime ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_CoordinatesLongLat of type PASN_Sequence
 */

struct Icb_CoordinatesLongLat_t {
    S32 longitude;
    S32 latitude;
};

U32 Icb_CoordinatesLongLat_EncodedSize(Icb_CoordinatesLongLat ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_CoordinatesLongLat_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_CoordinatesLongLat_Decode(Icb_CoordinatesLongLat ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_CoordinatesLongLat_Encode(Icb_CoordinatesLongLat ThisPtr, ASN_Stream stream);
Icb_CoordinatesLongLat Icb_CoordinatesLongLat_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_CoordinatesLongLat_Print(Icb_CoordinatesLongLat ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_Velocity of type PASN_Sequence
 */

struct Icb_Velocity_t {
    U32 speed;
    U32 horizontalVelocity;
    S32 verticalVelocity;
};

U32 Icb_Velocity_EncodedSize(Icb_Velocity ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_Velocity_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_Velocity_Decode(Icb_Velocity ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_Velocity_Encode(Icb_Velocity ThisPtr, ASN_Stream stream);
Icb_Velocity Icb_Velocity_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_Velocity_Print(Icb_Velocity ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_GNSSUsage of type PASN_Sequence
 */

struct Icb_GNSSUsage_t {
    BOOL gpsIsUsed;
    BOOL glonassIsUsed;
    BOOL galileoIsUsed;
    BOOL sbasIsUsed;
    BOOL qzssL1IsUsed;
    BOOL qzssL1SAIFIsUsed;
};

U32 Icb_GNSSUsage_EncodedSize(Icb_GNSSUsage ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_GNSSUsage_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_GNSSUsage_Decode(Icb_GNSSUsage ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GNSSUsage_Encode(Icb_GNSSUsage ThisPtr, ASN_Stream stream);
Icb_GNSSUsage Icb_GNSSUsage_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_GNSSUsage_Print(Icb_GNSSUsage ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_GNSSStatus of type PASN_Sequence
 */

struct Icb_GNSSStatus_t {
    Icb_GnssFixType fixType;
    BOOL dgpsIsUsed;
    BOOL selfEphemerisDataUsage;
};

U32 Icb_GNSSStatus_EncodedSize(Icb_GNSSStatus ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_GNSSStatus_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_GNSSStatus_Decode(Icb_GNSSStatus ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GNSSStatus_Encode(Icb_GNSSStatus ThisPtr, ASN_Stream stream);
Icb_GNSSStatus Icb_GNSSStatus_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_GNSSStatus_Print(Icb_GNSSStatus ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_NrOfSatellitesPerSystem of type PASN_Sequence
 */

struct Icb_NrOfSatellitesPerSystem_t {
    U32 gps;
    U32 glonass;
    U32 galileo;
    U32 sbas;
    U32 qzssL1;
    U32 qzssL1SAIF;
};

U32 Icb_NrOfSatellitesPerSystem_EncodedSize(Icb_NrOfSatellitesPerSystem ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_NrOfSatellitesPerSystem_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_NrOfSatellitesPerSystem_Decode(Icb_NrOfSatellitesPerSystem ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_NrOfSatellitesPerSystem_Encode(Icb_NrOfSatellitesPerSystem ThisPtr, ASN_Stream stream);
Icb_NrOfSatellitesPerSystem Icb_NrOfSatellitesPerSystem_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_NrOfSatellitesPerSystem_Print(Icb_NrOfSatellitesPerSystem ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_DOPValues of type PASN_Sequence
 */

struct Icb_DOPValues_t {
    U32 hdop;
    U32 vdop;
    U32 pdop;
    U32 tdop;
};

U32 Icb_DOPValues_EncodedSize(Icb_DOPValues ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_DOPValues_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_DOPValues_Decode(Icb_DOPValues ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DOPValues_Encode(Icb_DOPValues ThisPtr, ASN_Stream stream);
Icb_DOPValues Icb_DOPValues_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_DOPValues_Print(Icb_DOPValues ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_ReceiverChannelData of type PASN_Array
 */

struct Icb_ReceiverChannelData_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_ChannelData* data_array;
};

U32 Icb_ReceiverChannelData_EncodedSize(Icb_ReceiverChannelData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ReceiverChannelData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ReceiverChannelData_Decode(Icb_ReceiverChannelData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ReceiverChannelData_Encode(Icb_ReceiverChannelData ThisPtr, ASN_Stream stream);
Icb_ReceiverChannelData Icb_ReceiverChannelData_Create(ASN_Session session);
ASN_Result Icb_ReceiverChannelData_SetSize(Icb_ReceiverChannelData ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ReceiverChannelData_Print(Icb_ReceiverChannelData ThisPtr);
#endif /* #ifdef ASN_PRINT */
enum Icb_SatelliteTrackingStatusType_t {
    e_Icb_SatelliteTrackingStatusType_searching,
    e_Icb_SatelliteTrackingStatusType_tracking,
    e_Icb_SatelliteTrackingStatusType_collectedAndNotUsed,
    e_Icb_SatelliteTrackingStatusType_collectedAndUsed
};

#define Icb_SatelliteTrackingStatusType_Create(session) 0
ASN_Result Icb_SatelliteTrackingStatusType_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SatelliteTrackingStatusType_Encode(U32 val, ASN_Stream stream);
#define Icb_SatelliteTrackingStatusType_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_SatelliteTrackingStatusType_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_SatelliteTrackingStatusType_Print(Icb_SatelliteTrackingStatusType value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ExtendedChannelData of type PASN_Choice
 */

struct Icb_ExtendedChannelData_t {
    U32 choice;
    ASN_Null notSupported;
    Icb_ChannelCorrectionData data;
};

enum Icb_ExtendedChannelData_Choices { e_Icb_ExtendedChannelData_notSupported, e_Icb_ExtendedChannelData_data };

U32 Icb_ExtendedChannelData_EncodedSize(Icb_ExtendedChannelData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ExtendedChannelData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ExtendedChannelData_Decode(Icb_ExtendedChannelData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ExtendedChannelData_Encode(Icb_ExtendedChannelData ThisPtr, ASN_Stream stream);
Icb_ExtendedChannelData Icb_ExtendedChannelData_Create(ASN_Session session);
ASN_Result Icb_ExtendedChannelData_SetType(Icb_ExtendedChannelData ThisPtr, ASN_Session session, U32 type);
#ifdef ASN_PRINT
void Icb_ExtendedChannelData_Print(Icb_ExtendedChannelData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_ChannelCorrectionData of type PASN_Sequence
 */

struct Icb_ChannelCorrectionData_t {
    S32 pseudoRangeMetres;
    U32 pseudoRangeMillimetres;
    S32 rangeRate;
    S32 pseudoRangeCorrectionData;
    U32 selfEphemerisPredictionTime;
};

U32 Icb_ChannelCorrectionData_EncodedSize(Icb_ChannelCorrectionData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ChannelCorrectionData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ChannelCorrectionData_Decode(Icb_ChannelCorrectionData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ChannelCorrectionData_Encode(Icb_ChannelCorrectionData ThisPtr, ASN_Stream stream);
Icb_ChannelCorrectionData Icb_ChannelCorrectionData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_ChannelCorrectionData_Print(Icb_ChannelCorrectionData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_AccuracyValues of type PASN_Sequence
 */

struct Icb_AccuracyValues_t {
    U32 rmsAccuracy;
    U32 sdLatitude;
    U32 sdLongitud;
    U32 sdAltitude;
};

U32 Icb_AccuracyValues_EncodedSize(Icb_AccuracyValues ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_AccuracyValues_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_AccuracyValues_Decode(Icb_AccuracyValues ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_AccuracyValues_Encode(Icb_AccuracyValues ThisPtr, ASN_Stream stream);
Icb_AccuracyValues Icb_AccuracyValues_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_AccuracyValues_Print(Icb_AccuracyValues ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpRemoteDiagnosticLink_Notification of type PASN_Sequence
 */

struct Icb_OpRemoteDiagnosticLink_Notification_t {
    BOOL remoteDiagLink;
};

U32 Icb_OpRemoteDiagnosticLink_Notification_EncodedSize(Icb_OpRemoteDiagnosticLink_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRemoteDiagnosticLink_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRemoteDiagnosticLink_Notification_Decode(Icb_OpRemoteDiagnosticLink_Notification ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpRemoteDiagnosticLink_Notification_Encode(Icb_OpRemoteDiagnosticLink_Notification ThisPtr,
                                                          ASN_Stream stream);
Icb_OpRemoteDiagnosticLink_Notification Icb_OpRemoteDiagnosticLink_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRemoteDiagnosticLink_Notification_Print(Icb_OpRemoteDiagnosticLink_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_RemoteDiagInfo_t { e_Icb_RemoteDiagInfo_closed, e_Icb_RemoteDiagInfo_started, e_Icb_RemoteDiagInfo_failed };

#define Icb_RemoteDiagInfo_Create(session) 0
ASN_Result Icb_RemoteDiagInfo_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_RemoteDiagInfo_Encode(U32 val, ASN_Stream stream);
#define Icb_RemoteDiagInfo_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_RemoteDiagInfo_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_RemoteDiagInfo_Print(Icb_RemoteDiagInfo value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpTextFromOperatorToUser_Notification of type PASN_Sequence
 */

struct Icb_OpTextFromOperatorToUser_Notification_t {
    ASN_UTF8String textChatMessage;
};

U32 Icb_OpTextFromOperatorToUser_Notification_EncodedSize(Icb_OpTextFromOperatorToUser_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTextFromOperatorToUser_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTextFromOperatorToUser_Notification_Decode(Icb_OpTextFromOperatorToUser_Notification ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpTextFromOperatorToUser_Notification_Encode(Icb_OpTextFromOperatorToUser_Notification ThisPtr,
                                                            ASN_Stream stream);
Icb_OpTextFromOperatorToUser_Notification Icb_OpTextFromOperatorToUser_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTextFromOperatorToUser_Notification_Print(Icb_OpTextFromOperatorToUser_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCurrentJ2534Session_Notification of type PASN_Sequence
 */

struct Icb_OpCurrentJ2534Session_Notification_t {
    BOOL sessionStatus;
};

U32 Icb_OpCurrentJ2534Session_Notification_EncodedSize(Icb_OpCurrentJ2534Session_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCurrentJ2534Session_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCurrentJ2534Session_Notification_Decode(Icb_OpCurrentJ2534Session_Notification ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpCurrentJ2534Session_Notification_Encode(Icb_OpCurrentJ2534Session_Notification ThisPtr,
                                                         ASN_Stream stream);
Icb_OpCurrentJ2534Session_Notification Icb_OpCurrentJ2534Session_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCurrentJ2534Session_Notification_Print(Icb_OpCurrentJ2534Session_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_DoIPPhase_t {
    e_Icb_DoIPPhase_none,
    e_Icb_DoIPPhase_announcement,
    e_Icb_DoIPPhase_activation,
    e_Icb_DoIPPhase_session
};

#define Icb_DoIPPhase_Create(session) 0
ASN_Result Icb_DoIPPhase_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DoIPPhase_Encode(U32 val, ASN_Stream stream);
#define Icb_DoIPPhase_EncodedSize(val) ENUM_EncodedSize(val, 0, 3, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DoIPPhase_SessionSize() ENUM_SessionSize(0, 3, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_DoIPPhase_Print(Icb_DoIPPhase value);
#endif /* #ifdef ASN_PRINT */
enum Icb_DoIPMode_t { e_Icb_DoIPMode_none, e_Icb_DoIPMode_local, e_Icb_DoIPMode_remote };

#define Icb_DoIPMode_Create(session) 0
ASN_Result Icb_DoIPMode_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DoIPMode_Encode(U32 val, ASN_Stream stream);
#define Icb_DoIPMode_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DoIPMode_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_DoIPMode_Print(Icb_DoIPMode value);
#endif /* #ifdef ASN_PRINT */
enum Icb_CurrentDoIPConn_t {
    e_Icb_CurrentDoIPConn_none,
    e_Icb_CurrentDoIPConn_ethernetp2p,
    e_Icb_CurrentDoIPConn_ethernetlan,
    e_Icb_CurrentDoIPConn_wlan,
    e_Icb_CurrentDoIPConn_phone
};

#define Icb_CurrentDoIPConn_Create(session) 0
ASN_Result Icb_CurrentDoIPConn_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_CurrentDoIPConn_Encode(U32 val, ASN_Stream stream);
#define Icb_CurrentDoIPConn_EncodedSize(val) ENUM_EncodedSize(val, 0, 4, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_CurrentDoIPConn_SessionSize() ENUM_SessionSize(0, 4, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_CurrentDoIPConn_Print(Icb_CurrentDoIPConn value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpRequestUserAuthentication_Request of type PASN_Sequence
 */

struct Icb_OpRequestUserAuthentication_Request_t {
    ASN_UTF8String operatorName;
    ASN_UTF8String serviceOrg;
    U32 sessionSafetyCode;
};

U32 Icb_OpRequestUserAuthentication_Request_EncodedSize(Icb_OpRequestUserAuthentication_Request ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRequestUserAuthentication_Request_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRequestUserAuthentication_Request_Decode(Icb_OpRequestUserAuthentication_Request ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpRequestUserAuthentication_Request_Encode(Icb_OpRequestUserAuthentication_Request ThisPtr,
                                                          ASN_Stream stream);
Icb_OpRequestUserAuthentication_Request Icb_OpRequestUserAuthentication_Request_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRequestUserAuthentication_Request_Print(Icb_OpRequestUserAuthentication_Request ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_UserAuthCredentials_t { e_Icb_UserAuthCredentials_reject, e_Icb_UserAuthCredentials_accept };

#define Icb_UserAuthCredentials_Create(session) 0
ASN_Result Icb_UserAuthCredentials_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_UserAuthCredentials_Encode(U32 val, ASN_Stream stream);
#define Icb_UserAuthCredentials_EncodedSize(val) ENUM_EncodedSize(val, 0, 1, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_UserAuthCredentials_SessionSize() ENUM_SessionSize(0, 1, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_UserAuthCredentials_Print(Icb_UserAuthCredentials value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpTextFromUserToOperator_Notification of type PASN_Sequence
 */

struct Icb_OpTextFromUserToOperator_Notification_t {
    ASN_UTF8String textChatMessage;
};

U32 Icb_OpTextFromUserToOperator_Notification_EncodedSize(Icb_OpTextFromUserToOperator_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTextFromUserToOperator_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTextFromUserToOperator_Notification_Decode(Icb_OpTextFromUserToOperator_Notification ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpTextFromUserToOperator_Notification_Encode(Icb_OpTextFromUserToOperator_Notification ThisPtr,
                                                            ASN_Stream stream);
Icb_OpTextFromUserToOperator_Notification Icb_OpTextFromUserToOperator_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTextFromUserToOperator_Notification_Print(Icb_OpTextFromUserToOperator_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpRequestRemoteDiagnostics_Notification of type PASN_Sequence
 */

struct Icb_OpRequestRemoteDiagnostics_Notification_t {
    BOOL request;
};

U32 Icb_OpRequestRemoteDiagnostics_Notification_EncodedSize(Icb_OpRequestRemoteDiagnostics_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRequestRemoteDiagnostics_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRequestRemoteDiagnostics_Notification_Decode(Icb_OpRequestRemoteDiagnostics_Notification ThisPtr,
                                                              ASN_Session session,
                                                              ASN_Stream stream);
ASN_Result Icb_OpRequestRemoteDiagnostics_Notification_Encode(Icb_OpRequestRemoteDiagnostics_Notification ThisPtr,
                                                              ASN_Stream stream);
Icb_OpRequestRemoteDiagnostics_Notification Icb_OpRequestRemoteDiagnostics_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRequestRemoteDiagnostics_Notification_Print(Icb_OpRequestRemoteDiagnostics_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpAbortRemoteDiagnostics_Notification of type PASN_Sequence
 */

struct Icb_OpAbortRemoteDiagnostics_Notification_t {
    BOOL abort;
};

U32 Icb_OpAbortRemoteDiagnostics_Notification_EncodedSize(Icb_OpAbortRemoteDiagnostics_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpAbortRemoteDiagnostics_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpAbortRemoteDiagnostics_Notification_Decode(Icb_OpAbortRemoteDiagnostics_Notification ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpAbortRemoteDiagnostics_Notification_Encode(Icb_OpAbortRemoteDiagnostics_Notification ThisPtr,
                                                            ASN_Stream stream);
Icb_OpAbortRemoteDiagnostics_Notification Icb_OpAbortRemoteDiagnostics_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpAbortRemoteDiagnostics_Notification_Print(Icb_OpAbortRemoteDiagnostics_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_UpdateDacMode_t {
    e_Icb_UpdateDacMode_automatic,
    e_Icb_UpdateDacMode_semiautomatic,
    e_Icb_UpdateDacMode_manual
};

#define Icb_UpdateDacMode_Create(session) 0
ASN_Result Icb_UpdateDacMode_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_UpdateDacMode_Encode(U32 val, ASN_Stream stream);
#define Icb_UpdateDacMode_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_UpdateDacMode_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_UpdateDacMode_Print(Icb_UpdateDacMode value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ApprovalStatusType of type PASN_Sequence
 */

struct Icb_ApprovalStatusType_t {
    ASN_UTF8String typeName;
    BOOL status;
    U32 tcVersion;
};

U32 Icb_ApprovalStatusType_EncodedSize(Icb_ApprovalStatusType ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ApprovalStatusType_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ApprovalStatusType_Decode(Icb_ApprovalStatusType ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ApprovalStatusType_Encode(Icb_ApprovalStatusType ThisPtr, ASN_Stream stream);
Icb_ApprovalStatusType Icb_ApprovalStatusType_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_ApprovalStatusType_Print(Icb_ApprovalStatusType ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_DownloadStatus_t { e_Icb_DownloadStatus_idle, e_Icb_DownloadStatus_active, e_Icb_DownloadStatus_noService };

#define Icb_DownloadStatus_Create(session) 0
ASN_Result Icb_DownloadStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DownloadStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_DownloadStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 2, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DownloadStatus_SessionSize() ENUM_SessionSize(0, 2, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_DownloadStatus_Print(Icb_DownloadStatus value);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_DownloadProgress of PASN_Integer
 */

#define Icb_DownloadProgress_EncodedSize(ThisPtr) U32_EncodedSize(ThisPtr, 0, 100)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DownloadProgress_SessionSize() U32_SessionSize(0, 100)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#define Icb_DownloadProgress_Decode(ThisPtr, session, stream) U32_Decode(ThisPtr, session, stream, 0, 100)
#define Icb_DownloadProgress_Encode(ThisPtr, stream) U32_Encode(ThisPtr, stream, 0, 100)
#define Icb_DownloadProgress_Create(session) U32_Create(session)
#ifdef ASN_PRINT
#define Icb_DownloadProgress_Print(ThisPtr) U32_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */

enum Icb_DownloadState_t {
    e_Icb_DownloadState_queued,
    e_Icb_DownloadState_requestDownloadInfo,
    e_Icb_DownloadState_requestDownloadInfo_Halted,
    e_Icb_DownloadState_validatingConfig,
    e_Icb_DownloadState_configValidated,
    e_Icb_DownloadState_downloading,
    e_Icb_DownloadState_downloading_Halted,
    e_Icb_DownloadState_downloaded,
    e_Icb_DownloadState_installing,
    e_Icb_DownloadState_installed_Waitreset,
    e_Icb_DownloadState_installed,
    e_Icb_DownloadState_errorNoStorage,
    e_Icb_DownloadState_errorSoftwareNotOk,
    e_Icb_DownloadState_errorDownloadFileFailed,
    e_Icb_DownloadState_errorTimeToLiveExceeded,
    e_Icb_DownloadState_errorValidationFailed,
    e_Icb_DownloadState_errorInstallationFailed,
    e_Icb_DownloadState_errorInstallationFailedMemoryFull,
    e_Icb_DownloadState_errorNoDiagResponse,
    e_Icb_DownloadState_errorDownloadInfoRequestFailed,
    e_Icb_DownloadState_cancelling,
    e_Icb_DownloadState_cancelled
};

#define Icb_DownloadState_Create(session) 0
ASN_Result Icb_DownloadState_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DownloadState_Encode(U32 val, ASN_Stream stream);
#define Icb_DownloadState_EncodedSize(val) ENUM_EncodedSize(val, 0, 21, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_DownloadState_SessionSize() ENUM_SessionSize(0, 21, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_DownloadState_Print(Icb_DownloadState value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpCancelDownload_SetRequest of type PASN_Sequence
 */

struct Icb_OpCancelDownload_SetRequest_t {
    Icb_UUID software;
};

U32 Icb_OpCancelDownload_SetRequest_EncodedSize(Icb_OpCancelDownload_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCancelDownload_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCancelDownload_SetRequest_Decode(Icb_OpCancelDownload_SetRequest ThisPtr,
                                                  ASN_Session session,
                                                  ASN_Stream stream);
ASN_Result Icb_OpCancelDownload_SetRequest_Encode(Icb_OpCancelDownload_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpCancelDownload_SetRequest Icb_OpCancelDownload_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCancelDownload_SetRequest_Print(Icb_OpCancelDownload_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCancelDownload_Response of type PASN_Sequence
 */

struct Icb_OpCancelDownload_Response_t {
    Icb_GenericOkStatus status;
};

U32 Icb_OpCancelDownload_Response_EncodedSize(Icb_OpCancelDownload_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCancelDownload_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCancelDownload_Response_Decode(Icb_OpCancelDownload_Response ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpCancelDownload_Response_Encode(Icb_OpCancelDownload_Response ThisPtr, ASN_Stream stream);
Icb_OpCancelDownload_Response Icb_OpCancelDownload_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCancelDownload_Response_Print(Icb_OpCancelDownload_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_InstallCommand_t {
    e_Icb_InstallCommand_install,
    e_Icb_InstallCommand_useSoftware,
    e_Icb_InstallCommand_cancelInstall
};

#define Icb_InstallCommand_Create(session) 0
ASN_Result Icb_InstallCommand_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_InstallCommand_Encode(U32 val, ASN_Stream stream);
#define Icb_InstallCommand_EncodedSize(val) ENUM_EncodedSize(val, 0, 255, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_InstallCommand_SessionSize() ENUM_SessionSize(0, 255, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_InstallCommand_Print(Icb_InstallCommand value);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_InstallProgress of PASN_Integer
 */

#define Icb_InstallProgress_EncodedSize(ThisPtr) U32_EncodedSize(ThisPtr, 0, 100)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_InstallProgress_SessionSize() U32_SessionSize(0, 100)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#define Icb_InstallProgress_Decode(ThisPtr, session, stream) U32_Decode(ThisPtr, session, stream, 0, 100)
#define Icb_InstallProgress_Encode(ThisPtr, stream) U32_Encode(ThisPtr, stream, 0, 100)
#define Icb_InstallProgress_Create(session) U32_Create(session)
#ifdef ASN_PRINT
#define Icb_InstallProgress_Print(ThisPtr) U32_Print(ThisPtr)
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_Uri of type PASN_Sequence
 */

struct Icb_Uri_t {
    ASN_UTF8String uri;
};

U32 Icb_Uri_EncodedSize(Icb_Uri ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_Uri_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_Uri_Decode(Icb_Uri ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_Uri_Encode(Icb_Uri ThisPtr, ASN_Stream stream);
Icb_Uri Icb_Uri_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_Uri_Print(Icb_Uri ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_InstallationData of type PASN_Sequence
 */

struct Icb_InstallationData_t {
    Icb_PartIdentifier identifier;
    Icb_Uri name;
    BOOL rebootNeeded;
};

U32 Icb_InstallationData_EncodedSize(Icb_InstallationData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_InstallationData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_InstallationData_Decode(Icb_InstallationData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_InstallationData_Encode(Icb_InstallationData ThisPtr, ASN_Stream stream);
Icb_InstallationData Icb_InstallationData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_InstallationData_Print(Icb_InstallationData ThisPtr);
#endif /* #ifdef ASN_PRINT */

enum Icb_InstallStatus_t {
    e_Icb_InstallStatus_idle,
    e_Icb_InstallStatus_installing,
    e_Icb_InstallStatus_installationComplete,
    e_Icb_InstallStatus_installationPendingCmd,
    e_Icb_InstallStatus_cancelled,
    e_Icb_InstallStatus_failed,
    e_Icb_InstallStatus_failedMemoryFull,
    e_Icb_InstallStatus_installationWaitReboot,
    e_Icb_InstallStatus_failedValidation
};

#define Icb_InstallStatus_Create(session) 0
ASN_Result Icb_InstallStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_InstallStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_InstallStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 255, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_InstallStatus_SessionSize() ENUM_SessionSize(0, 255, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_InstallStatus_Print(Icb_InstallStatus value);
#endif /* #ifdef ASN_PRINT */
enum Icb_FileInstallationStatus_t {
    e_Icb_FileInstallationStatus_pending,
    e_Icb_FileInstallationStatus_installing,
    e_Icb_FileInstallationStatus_installed,
    e_Icb_FileInstallationStatus_failed
};

#define Icb_FileInstallationStatus_Create(session) 0
ASN_Result Icb_FileInstallationStatus_Decode(U32* val, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_FileInstallationStatus_Encode(U32 val, ASN_Stream stream);
#define Icb_FileInstallationStatus_EncodedSize(val) ENUM_EncodedSize(val, 0, 255, FALSE)
#ifdef ENABLE_ASN_SESSION_SIZE
#define Icb_FileInstallationStatus_SessionSize() ENUM_SessionSize(0, 255, FALSE)
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
#ifdef ASN_PRINT
void Icb_FileInstallationStatus_Print(Icb_FileInstallationStatus value);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpLocalStorage_Response of type PASN_Sequence
 */

struct Icb_OpLocalStorage_Response_t {
    BOOL available;
};

U32 Icb_OpLocalStorage_Response_EncodedSize(Icb_OpLocalStorage_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpLocalStorage_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpLocalStorage_Response_Decode(Icb_OpLocalStorage_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpLocalStorage_Response_Encode(Icb_OpLocalStorage_Response ThisPtr, ASN_Stream stream);
Icb_OpLocalStorage_Response Icb_OpLocalStorage_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpLocalStorage_Response_Print(Icb_OpLocalStorage_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTvmVehicleInfo_Response of type PASN_Sequence
 */

struct Icb_OpTvmVehicleInfo_Response_t {
    Icb_DateTime utcTime;
};

U32 Icb_OpTvmVehicleInfo_Response_EncodedSize(Icb_OpTvmVehicleInfo_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTvmVehicleInfo_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTvmVehicleInfo_Response_Decode(Icb_OpTvmVehicleInfo_Response ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpTvmVehicleInfo_Response_Encode(Icb_OpTvmVehicleInfo_Response ThisPtr, ASN_Stream stream);
Icb_OpTvmVehicleInfo_Response Icb_OpTvmVehicleInfo_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTvmVehicleInfo_Response_Print(Icb_OpTvmVehicleInfo_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTvmVehicleInfo_Notification of type PASN_Sequence
 */

struct Icb_OpTvmVehicleInfo_Notification_t {
    Icb_DateTime utcTime;
};

U32 Icb_OpTvmVehicleInfo_Notification_EncodedSize(Icb_OpTvmVehicleInfo_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTvmVehicleInfo_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTvmVehicleInfo_Notification_Decode(Icb_OpTvmVehicleInfo_Notification ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpTvmVehicleInfo_Notification_Encode(Icb_OpTvmVehicleInfo_Notification ThisPtr, ASN_Stream stream);
Icb_OpTvmVehicleInfo_Notification Icb_OpTvmVehicleInfo_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTvmVehicleInfo_Notification_Print(Icb_OpTvmVehicleInfo_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_ArrayOf_ClimateTimer of type PASN_Array
 */

struct Icb_ArrayOf_ClimateTimer_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_ClimateTimer* data_array;
};

U32 Icb_ArrayOf_ClimateTimer_EncodedSize(Icb_ArrayOf_ClimateTimer ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_ClimateTimer_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_ClimateTimer_Decode(Icb_ArrayOf_ClimateTimer ThisPtr,
                                           ASN_Session session,
                                           ASN_Stream stream,
                                           S32 max,
                                           S32 min);
ASN_Result Icb_ArrayOf_ClimateTimer_Encode(Icb_ArrayOf_ClimateTimer ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_ClimateTimer Icb_ArrayOf_ClimateTimer_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_ClimateTimer_SetSize(Icb_ArrayOf_ClimateTimer ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_ClimateTimer_Print(Icb_ArrayOf_ClimateTimer ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_OnOff of type PASN_Array
 */

struct Icb_ArrayOf_OnOff_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_OnOff* data_array;
};

U32 Icb_ArrayOf_OnOff_EncodedSize(Icb_ArrayOf_OnOff ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_OnOff_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_OnOff_Decode(Icb_ArrayOf_OnOff ThisPtr,
                                    ASN_Session session,
                                    ASN_Stream stream,
                                    S32 max,
                                    S32 min);
ASN_Result Icb_ArrayOf_OnOff_Encode(Icb_ArrayOf_OnOff ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_OnOff Icb_ArrayOf_OnOff_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_OnOff_SetSize(Icb_ArrayOf_OnOff ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_OnOff_Print(Icb_ArrayOf_OnOff ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpGenericSettingSynch_Request_settingIDs of type PASN_Array
 */

struct Icb_OpGenericSettingSynch_Request_settingIDs_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    U32* data_array;
};

U32 Icb_OpGenericSettingSynch_Request_settingIDs_EncodedSize(Icb_OpGenericSettingSynch_Request_settingIDs ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGenericSettingSynch_Request_settingIDs_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGenericSettingSynch_Request_settingIDs_Decode(Icb_OpGenericSettingSynch_Request_settingIDs ThisPtr,
                                                               ASN_Session session,
                                                               ASN_Stream stream);
ASN_Result Icb_OpGenericSettingSynch_Request_settingIDs_Encode(Icb_OpGenericSettingSynch_Request_settingIDs ThisPtr,
                                                               ASN_Stream stream);
Icb_OpGenericSettingSynch_Request_settingIDs Icb_OpGenericSettingSynch_Request_settingIDs_Create(ASN_Session session);
ASN_Result Icb_OpGenericSettingSynch_Request_settingIDs_SetSize(Icb_OpGenericSettingSynch_Request_settingIDs ThisPtr,
                                                                ASN_Session session,
                                                                U32 size);
#ifdef ASN_PRINT
void Icb_OpGenericSettingSynch_Request_settingIDs_Print(Icb_OpGenericSettingSynch_Request_settingIDs ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_Setting of type PASN_Array
 */

struct Icb_ArrayOf_Setting_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_Setting* data_array;
};

U32 Icb_ArrayOf_Setting_EncodedSize(Icb_ArrayOf_Setting ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_Setting_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_Setting_Decode(Icb_ArrayOf_Setting ThisPtr,
                                      ASN_Session session,
                                      ASN_Stream stream,
                                      S32 max,
                                      S32 min);
ASN_Result Icb_ArrayOf_Setting_Encode(Icb_ArrayOf_Setting ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_Setting Icb_ArrayOf_Setting_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_Setting_SetSize(Icb_ArrayOf_Setting ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_Setting_Print(Icb_ArrayOf_Setting ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_SBWarning of type PASN_Array
 */

struct Icb_ArrayOf_SBWarning_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_SBWarning* data_array;
};

U32 Icb_ArrayOf_SBWarning_EncodedSize(Icb_ArrayOf_SBWarning ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_SBWarning_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_SBWarning_Decode(Icb_ArrayOf_SBWarning ThisPtr,
                                        ASN_Session session,
                                        ASN_Stream stream,
                                        S32 max,
                                        S32 min);
ASN_Result Icb_ArrayOf_SBWarning_Encode(Icb_ArrayOf_SBWarning ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_SBWarning Icb_ArrayOf_SBWarning_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_SBWarning_SetSize(Icb_ArrayOf_SBWarning ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_SBWarning_Print(Icb_ArrayOf_SBWarning ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_WLANFrequencyBand of type PASN_Array
 */

struct Icb_ArrayOf_WLANFrequencyBand_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_WLANFrequencyBand* data_array;
};

U32 Icb_ArrayOf_WLANFrequencyBand_EncodedSize(Icb_ArrayOf_WLANFrequencyBand ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_WLANFrequencyBand_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_WLANFrequencyBand_Decode(Icb_ArrayOf_WLANFrequencyBand ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream,
                                                S32 max,
                                                S32 min);
ASN_Result Icb_ArrayOf_WLANFrequencyBand_Encode(Icb_ArrayOf_WLANFrequencyBand ThisPtr,
                                                ASN_Stream stream,
                                                S32 max,
                                                S32 min);
Icb_ArrayOf_WLANFrequencyBand Icb_ArrayOf_WLANFrequencyBand_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_WLANFrequencyBand_SetSize(Icb_ArrayOf_WLANFrequencyBand ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_WLANFrequencyBand_Print(Icb_ArrayOf_WLANFrequencyBand ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_WLANConnDevice of type PASN_Array
 */

struct Icb_ArrayOf_WLANConnDevice_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_WLANConnDevice* data_array;
};

U32 Icb_ArrayOf_WLANConnDevice_EncodedSize(Icb_ArrayOf_WLANConnDevice ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_WLANConnDevice_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_WLANConnDevice_Decode(Icb_ArrayOf_WLANConnDevice ThisPtr,
                                             ASN_Session session,
                                             ASN_Stream stream,
                                             S32 max,
                                             S32 min);
ASN_Result Icb_ArrayOf_WLANConnDevice_Encode(Icb_ArrayOf_WLANConnDevice ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_WLANConnDevice Icb_ArrayOf_WLANConnDevice_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_WLANConnDevice_SetSize(Icb_ArrayOf_WLANConnDevice ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_WLANConnDevice_Print(Icb_ArrayOf_WLANConnDevice ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_AvailableNetworkInformation of type PASN_Array
 */

struct Icb_ArrayOf_AvailableNetworkInformation_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_AvailableNetworkInformation* data_array;
};

U32 Icb_ArrayOf_AvailableNetworkInformation_EncodedSize(Icb_ArrayOf_AvailableNetworkInformation ThisPtr,
                                                        S32 min,
                                                        S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_AvailableNetworkInformation_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_AvailableNetworkInformation_Decode(Icb_ArrayOf_AvailableNetworkInformation ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream,
                                                          S32 max,
                                                          S32 min);
ASN_Result Icb_ArrayOf_AvailableNetworkInformation_Encode(Icb_ArrayOf_AvailableNetworkInformation ThisPtr,
                                                          ASN_Stream stream,
                                                          S32 max,
                                                          S32 min);
Icb_ArrayOf_AvailableNetworkInformation Icb_ArrayOf_AvailableNetworkInformation_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_AvailableNetworkInformation_SetSize(Icb_ArrayOf_AvailableNetworkInformation ThisPtr,
                                                           ASN_Session session,
                                                           U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_AvailableNetworkInformation_Print(Icb_ArrayOf_AvailableNetworkInformation ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_SSID of type PASN_Array
 */

struct Icb_ArrayOf_SSID_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_SSID* data_array;
};

U32 Icb_ArrayOf_SSID_EncodedSize(Icb_ArrayOf_SSID ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_SSID_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_SSID_Decode(Icb_ArrayOf_SSID ThisPtr, ASN_Session session, ASN_Stream stream, S32 max, S32 min);
ASN_Result Icb_ArrayOf_SSID_Encode(Icb_ArrayOf_SSID ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_SSID Icb_ArrayOf_SSID_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_SSID_SetSize(Icb_ArrayOf_SSID ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_SSID_Print(Icb_ArrayOf_SSID ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_NetworkOperator of type PASN_Array
 */

struct Icb_ArrayOf_NetworkOperator_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_NetworkOperator* data_array;
};

U32 Icb_ArrayOf_NetworkOperator_EncodedSize(Icb_ArrayOf_NetworkOperator ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_NetworkOperator_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_NetworkOperator_Decode(Icb_ArrayOf_NetworkOperator ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream,
                                              S32 max,
                                              S32 min);
ASN_Result Icb_ArrayOf_NetworkOperator_Encode(Icb_ArrayOf_NetworkOperator ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_NetworkOperator Icb_ArrayOf_NetworkOperator_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_NetworkOperator_SetSize(Icb_ArrayOf_NetworkOperator ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_NetworkOperator_Print(Icb_ArrayOf_NetworkOperator ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_RadioFrequencyHz of type PASN_Array
 */

struct Icb_ArrayOf_RadioFrequencyHz_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_RadioFrequencyHz* data_array;
};

U32 Icb_ArrayOf_RadioFrequencyHz_EncodedSize(Icb_ArrayOf_RadioFrequencyHz ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_RadioFrequencyHz_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_RadioFrequencyHz_Decode(Icb_ArrayOf_RadioFrequencyHz ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream,
                                               S32 max,
                                               S32 min);
ASN_Result Icb_ArrayOf_RadioFrequencyHz_Encode(Icb_ArrayOf_RadioFrequencyHz ThisPtr,
                                               ASN_Stream stream,
                                               S32 max,
                                               S32 min);
Icb_ArrayOf_RadioFrequencyHz Icb_ArrayOf_RadioFrequencyHz_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_RadioFrequencyHz_SetSize(Icb_ArrayOf_RadioFrequencyHz ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_RadioFrequencyHz_Print(Icb_ArrayOf_RadioFrequencyHz ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_ApprovalStatusType of type PASN_Array
 */

struct Icb_ArrayOf_ApprovalStatusType_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_ApprovalStatusType* data_array;
};

U32 Icb_ArrayOf_ApprovalStatusType_EncodedSize(Icb_ArrayOf_ApprovalStatusType ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_ApprovalStatusType_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_ApprovalStatusType_Decode(Icb_ArrayOf_ApprovalStatusType ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream,
                                                 S32 max,
                                                 S32 min);
ASN_Result Icb_ArrayOf_ApprovalStatusType_Encode(Icb_ArrayOf_ApprovalStatusType ThisPtr,
                                                 ASN_Stream stream,
                                                 S32 max,
                                                 S32 min);
Icb_ArrayOf_ApprovalStatusType Icb_ArrayOf_ApprovalStatusType_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_ApprovalStatusType_SetSize(Icb_ArrayOf_ApprovalStatusType ThisPtr,
                                                  ASN_Session session,
                                                  U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_ApprovalStatusType_Print(Icb_ArrayOf_ApprovalStatusType ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_SoftwareProduct of type PASN_Array
 */

struct Icb_ArrayOf_SoftwareProduct_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_SoftwareProduct* data_array;
};

U32 Icb_ArrayOf_SoftwareProduct_EncodedSize(Icb_ArrayOf_SoftwareProduct ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_SoftwareProduct_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_SoftwareProduct_Decode(Icb_ArrayOf_SoftwareProduct ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream,
                                              S32 max,
                                              S32 min);
ASN_Result Icb_ArrayOf_SoftwareProduct_Encode(Icb_ArrayOf_SoftwareProduct ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_SoftwareProduct Icb_ArrayOf_SoftwareProduct_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_SoftwareProduct_SetSize(Icb_ArrayOf_SoftwareProduct ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_SoftwareProduct_Print(Icb_ArrayOf_SoftwareProduct ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_UUID of type PASN_Array
 */

struct Icb_ArrayOf_UUID_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_UUID* data_array;
};

U32 Icb_ArrayOf_UUID_EncodedSize(Icb_ArrayOf_UUID ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_UUID_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_UUID_Decode(Icb_ArrayOf_UUID ThisPtr, ASN_Session session, ASN_Stream stream, S32 max, S32 min);
ASN_Result Icb_ArrayOf_UUID_Encode(Icb_ArrayOf_UUID ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_UUID Icb_ArrayOf_UUID_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_UUID_SetSize(Icb_ArrayOf_UUID ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_UUID_Print(Icb_ArrayOf_UUID ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_PartIdentifier of type PASN_Array
 */

struct Icb_ArrayOf_PartIdentifier_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_PartIdentifier* data_array;
};

U32 Icb_ArrayOf_PartIdentifier_EncodedSize(Icb_ArrayOf_PartIdentifier ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_PartIdentifier_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_PartIdentifier_Decode(Icb_ArrayOf_PartIdentifier ThisPtr,
                                             ASN_Session session,
                                             ASN_Stream stream,
                                             S32 max,
                                             S32 min);
ASN_Result Icb_ArrayOf_PartIdentifier_Encode(Icb_ArrayOf_PartIdentifier ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_PartIdentifier Icb_ArrayOf_PartIdentifier_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_PartIdentifier_SetSize(Icb_ArrayOf_PartIdentifier ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_PartIdentifier_Print(Icb_ArrayOf_PartIdentifier ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_InstallationData of type PASN_Array
 */

struct Icb_ArrayOf_InstallationData_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_InstallationData* data_array;
};

U32 Icb_ArrayOf_InstallationData_EncodedSize(Icb_ArrayOf_InstallationData ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_InstallationData_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_InstallationData_Decode(Icb_ArrayOf_InstallationData ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream,
                                               S32 max,
                                               S32 min);
ASN_Result Icb_ArrayOf_InstallationData_Encode(Icb_ArrayOf_InstallationData ThisPtr,
                                               ASN_Stream stream,
                                               S32 max,
                                               S32 min);
Icb_ArrayOf_InstallationData Icb_ArrayOf_InstallationData_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_InstallationData_SetSize(Icb_ArrayOf_InstallationData ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_InstallationData_Print(Icb_ArrayOf_InstallationData ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_ArrayOf_InstalledData of type PASN_Array
 */

struct Icb_ArrayOf_InstalledData_t {
    U32 min_size;
    U32 max_size;
    U32 actual_size;
    Icb_InstalledData* data_array;
};

U32 Icb_ArrayOf_InstalledData_EncodedSize(Icb_ArrayOf_InstalledData ThisPtr, S32 min, S32 max);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ArrayOf_InstalledData_SessionSize(S32 min, S32 max);
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ArrayOf_InstalledData_Decode(Icb_ArrayOf_InstalledData ThisPtr,
                                            ASN_Session session,
                                            ASN_Stream stream,
                                            S32 max,
                                            S32 min);
ASN_Result Icb_ArrayOf_InstalledData_Encode(Icb_ArrayOf_InstalledData ThisPtr, ASN_Stream stream, S32 max, S32 min);
Icb_ArrayOf_InstalledData Icb_ArrayOf_InstalledData_Create(ASN_Session session);
ASN_Result Icb_ArrayOf_InstalledData_SetSize(Icb_ArrayOf_InstalledData ThisPtr, ASN_Session session, U32 size);
#ifdef ASN_PRINT
void Icb_ArrayOf_InstalledData_Print(Icb_ArrayOf_InstalledData ThisPtr);
#endif /* #ifdef ASN_PRINT */
/*
 * Icb_OpGeneric_Error of type PASN_Sequence
 */

struct Icb_OpGeneric_Error_t {
    BOOL exists__optional__errorInfo;
    Icb_ErrorCode errorCode;
    U32 errorInfo;
};

U32 Icb_OpGeneric_Error_EncodedSize(Icb_OpGeneric_Error ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGeneric_Error_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGeneric_Error_Decode(Icb_OpGeneric_Error ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpGeneric_Error_Encode(Icb_OpGeneric_Error ThisPtr, ASN_Stream stream);
Icb_OpGeneric_Error Icb_OpGeneric_Error_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGeneric_Error_Print(Icb_OpGeneric_Error ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTelematicSettings_SetRequest of type PASN_Sequence
 */

struct Icb_OpTelematicSettings_SetRequest_t {
    BOOL exists__optional__telemSetting;
    Icb_TelemSettings telemSetting;
};

U32 Icb_OpTelematicSettings_SetRequest_EncodedSize(Icb_OpTelematicSettings_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTelematicSettings_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTelematicSettings_SetRequest_Decode(Icb_OpTelematicSettings_SetRequest ThisPtr,
                                                     ASN_Session session,
                                                     ASN_Stream stream);
ASN_Result Icb_OpTelematicSettings_SetRequest_Encode(Icb_OpTelematicSettings_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpTelematicSettings_SetRequest Icb_OpTelematicSettings_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTelematicSettings_SetRequest_Print(Icb_OpTelematicSettings_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTelematicSettings_Response of type PASN_Sequence
 */

struct Icb_OpTelematicSettings_Response_t {
    Icb_TelemSettings telemSetting;
};

U32 Icb_OpTelematicSettings_Response_EncodedSize(Icb_OpTelematicSettings_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTelematicSettings_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTelematicSettings_Response_Decode(Icb_OpTelematicSettings_Response ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpTelematicSettings_Response_Encode(Icb_OpTelematicSettings_Response ThisPtr, ASN_Stream stream);
Icb_OpTelematicSettings_Response Icb_OpTelematicSettings_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTelematicSettings_Response_Print(Icb_OpTelematicSettings_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPositionData_Response of type PASN_Sequence
 */

struct Icb_OpPositionData_Response_t {
    Icb_SimpleVehiclePosition position;
};

U32 Icb_OpPositionData_Response_EncodedSize(Icb_OpPositionData_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPositionData_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPositionData_Response_Decode(Icb_OpPositionData_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpPositionData_Response_Encode(Icb_OpPositionData_Response ThisPtr, ASN_Stream stream);
Icb_OpPositionData_Response Icb_OpPositionData_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPositionData_Response_Print(Icb_OpPositionData_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_WGS84SimplePositionData of type PASN_Sequence
 */

struct Icb_WGS84SimplePositionData_t {
    Icb_CoordinatesLongLat longLat;
    Icb_DateTime fixTime;
    Icb_GnssFixType fixType;
    Icb_DeadReckoningType drType;
};

U32 Icb_WGS84SimplePositionData_EncodedSize(Icb_WGS84SimplePositionData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_WGS84SimplePositionData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_WGS84SimplePositionData_Decode(Icb_WGS84SimplePositionData ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_WGS84SimplePositionData_Encode(Icb_WGS84SimplePositionData ThisPtr, ASN_Stream stream);
Icb_WGS84SimplePositionData Icb_WGS84SimplePositionData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_WGS84SimplePositionData_Print(Icb_WGS84SimplePositionData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSubscriptionActivation_SetRequest of type PASN_Sequence
 */

struct Icb_OpSubscriptionActivation_SetRequest_t {
    BOOL exists__optional__activationCode;
    Icb_ActivationStatusChange newStatus;
    U32 activationCode;
};

U32 Icb_OpSubscriptionActivation_SetRequest_EncodedSize(Icb_OpSubscriptionActivation_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSubscriptionActivation_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSubscriptionActivation_SetRequest_Decode(Icb_OpSubscriptionActivation_SetRequest ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpSubscriptionActivation_SetRequest_Encode(Icb_OpSubscriptionActivation_SetRequest ThisPtr,
                                                          ASN_Stream stream);
Icb_OpSubscriptionActivation_SetRequest Icb_OpSubscriptionActivation_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSubscriptionActivation_SetRequest_Print(Icb_OpSubscriptionActivation_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSubscriptionActivation_Response of type PASN_Sequence
 */

struct Icb_OpSubscriptionActivation_Response_t {
    Icb_ActivationStatus status;
};

U32 Icb_OpSubscriptionActivation_Response_EncodedSize(Icb_OpSubscriptionActivation_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSubscriptionActivation_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSubscriptionActivation_Response_Decode(Icb_OpSubscriptionActivation_Response ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpSubscriptionActivation_Response_Encode(Icb_OpSubscriptionActivation_Response ThisPtr,
                                                        ASN_Stream stream);
Icb_OpSubscriptionActivation_Response Icb_OpSubscriptionActivation_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSubscriptionActivation_Response_Print(Icb_OpSubscriptionActivation_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSubscriptionActivation_Notification of type PASN_Sequence
 */

struct Icb_OpSubscriptionActivation_Notification_t {
    Icb_ActivationStatus status;
};

U32 Icb_OpSubscriptionActivation_Notification_EncodedSize(Icb_OpSubscriptionActivation_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSubscriptionActivation_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSubscriptionActivation_Notification_Decode(Icb_OpSubscriptionActivation_Notification ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpSubscriptionActivation_Notification_Encode(Icb_OpSubscriptionActivation_Notification ThisPtr,
                                                            ASN_Stream stream);
Icb_OpSubscriptionActivation_Notification Icb_OpSubscriptionActivation_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSubscriptionActivation_Notification_Print(Icb_OpSubscriptionActivation_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpServiceActivation_SetRequest of type PASN_Sequence
 */

struct Icb_OpServiceActivation_SetRequest_t {
    Icb_OnCallService service;
    Icb_OnOffSetting action;
};

U32 Icb_OpServiceActivation_SetRequest_EncodedSize(Icb_OpServiceActivation_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpServiceActivation_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpServiceActivation_SetRequest_Decode(Icb_OpServiceActivation_SetRequest ThisPtr,
                                                     ASN_Session session,
                                                     ASN_Stream stream);
ASN_Result Icb_OpServiceActivation_SetRequest_Encode(Icb_OpServiceActivation_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpServiceActivation_SetRequest Icb_OpServiceActivation_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpServiceActivation_SetRequest_Print(Icb_OpServiceActivation_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpRescueStatus_Response of type PASN_Sequence
 */

struct Icb_OpRescueStatus_Response_t {
    Icb_RescueStatus raStatus;
    Icb_RescueStatus eaStatus;
    Icb_RescueStatus sdnStatus;
    Icb_VoiceStatus voiceStatus;
    Icb_SourceStatus voiceSource;
    Icb_MessageStatus messageStatus;
    Icb_ButtonStatus buttonStatus;
    Icb_PSAPStatus psapConfirmStatus;
    Icb_GenericOkStatus backupAudioStatus;
};

U32 Icb_OpRescueStatus_Response_EncodedSize(Icb_OpRescueStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRescueStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRescueStatus_Response_Decode(Icb_OpRescueStatus_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpRescueStatus_Response_Encode(Icb_OpRescueStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpRescueStatus_Response Icb_OpRescueStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRescueStatus_Response_Print(Icb_OpRescueStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpRescueStatus_Notification of type PASN_Sequence
 */

struct Icb_OpRescueStatus_Notification_t {
    Icb_RescueStatus raStatus;
    Icb_RescueStatus eaStatus;
    Icb_RescueStatus sdnStatus;
    Icb_VoiceStatus voiceStatus;
    Icb_SourceStatus voiceSource;
    Icb_MessageStatus messageStatus;
    Icb_ButtonStatus buttonStatus;
    Icb_PSAPStatus psapConfirmStatus;
    Icb_GenericOkStatus backupAudioStatus;
};

U32 Icb_OpRescueStatus_Notification_EncodedSize(Icb_OpRescueStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRescueStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRescueStatus_Notification_Decode(Icb_OpRescueStatus_Notification ThisPtr,
                                                  ASN_Session session,
                                                  ASN_Stream stream);
ASN_Result Icb_OpRescueStatus_Notification_Encode(Icb_OpRescueStatus_Notification ThisPtr, ASN_Stream stream);
Icb_OpRescueStatus_Notification Icb_OpRescueStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRescueStatus_Notification_Print(Icb_OpRescueStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSendToCarConfirmation_SetRequest of type PASN_Sequence
 */

struct Icb_OpSendToCarConfirmation_SetRequest_t {
    Icb_SendToCarConfirmation confirmation;
    Icb_SendToCarId confirmedId;
};

U32 Icb_OpSendToCarConfirmation_SetRequest_EncodedSize(Icb_OpSendToCarConfirmation_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSendToCarConfirmation_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSendToCarConfirmation_SetRequest_Decode(Icb_OpSendToCarConfirmation_SetRequest ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpSendToCarConfirmation_SetRequest_Encode(Icb_OpSendToCarConfirmation_SetRequest ThisPtr,
                                                         ASN_Stream stream);
Icb_OpSendToCarConfirmation_SetRequest Icb_OpSendToCarConfirmation_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSendToCarConfirmation_SetRequest_Print(Icb_OpSendToCarConfirmation_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSendToCarConfirmation_Response of type PASN_Sequence
 */

struct Icb_OpSendToCarConfirmation_Response_t {
    Icb_SendToCarConfirmation confirmation;
    Icb_SendToCarId confirmedId;
};

U32 Icb_OpSendToCarConfirmation_Response_EncodedSize(Icb_OpSendToCarConfirmation_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSendToCarConfirmation_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSendToCarConfirmation_Response_Decode(Icb_OpSendToCarConfirmation_Response ThisPtr,
                                                       ASN_Session session,
                                                       ASN_Stream stream);
ASN_Result Icb_OpSendToCarConfirmation_Response_Encode(Icb_OpSendToCarConfirmation_Response ThisPtr, ASN_Stream stream);
Icb_OpSendToCarConfirmation_Response Icb_OpSendToCarConfirmation_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSendToCarConfirmation_Response_Print(Icb_OpSendToCarConfirmation_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_EcalSettings of type PASN_Sequence
 */

struct Icb_EcalSettings_t {
    Icb_PreferredEcalls preferredEcall;
};

U32 Icb_EcalSettings_EncodedSize(Icb_EcalSettings ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_EcalSettings_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_EcalSettings_Decode(Icb_EcalSettings ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_EcalSettings_Encode(Icb_EcalSettings ThisPtr, ASN_Stream stream);
Icb_EcalSettings Icb_EcalSettings_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_EcalSettings_Print(Icb_EcalSettings ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSendToCar_SetRequest of type PASN_Sequence
 */

struct Icb_OpSendToCar_SetRequest_t {
    Icb_SendToCarId requestId;
    Icb_CoordinatesLongLat longLat;
    ASN_UTF8String name;
    ASN_UTF8String description;
    ASN_OctetString gpxFile;
};

U32 Icb_OpSendToCar_SetRequest_EncodedSize(Icb_OpSendToCar_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSendToCar_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSendToCar_SetRequest_Decode(Icb_OpSendToCar_SetRequest ThisPtr,
                                             ASN_Session session,
                                             ASN_Stream stream);
ASN_Result Icb_OpSendToCar_SetRequest_Encode(Icb_OpSendToCar_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpSendToCar_SetRequest Icb_OpSendToCar_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSendToCar_SetRequest_Print(Icb_OpSendToCar_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpUserPrivacySettings_Notification of type PASN_Sequence
 */

struct Icb_OpUserPrivacySettings_Notification_t {
    Icb_UserPrivacySettings userPrivacySetting;
};

U32 Icb_OpUserPrivacySettings_Notification_EncodedSize(Icb_OpUserPrivacySettings_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpUserPrivacySettings_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpUserPrivacySettings_Notification_Decode(Icb_OpUserPrivacySettings_Notification ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpUserPrivacySettings_Notification_Encode(Icb_OpUserPrivacySettings_Notification ThisPtr,
                                                         ASN_Stream stream);
Icb_OpUserPrivacySettings_Notification Icb_OpUserPrivacySettings_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpUserPrivacySettings_Notification_Print(Icb_OpUserPrivacySettings_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpClimateTimers_SetRequest of type PASN_Sequence
 */

struct Icb_OpClimateTimers_SetRequest_t {
    Icb_DateTime timestamp;
    Icb_ArrayOf_ClimateTimer timers;
};

U32 Icb_OpClimateTimers_SetRequest_EncodedSize(Icb_OpClimateTimers_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpClimateTimers_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpClimateTimers_SetRequest_Decode(Icb_OpClimateTimers_SetRequest ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream);
ASN_Result Icb_OpClimateTimers_SetRequest_Encode(Icb_OpClimateTimers_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpClimateTimers_SetRequest Icb_OpClimateTimers_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpClimateTimers_SetRequest_Print(Icb_OpClimateTimers_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpClimateTimers_Response of type PASN_Sequence
 */

struct Icb_OpClimateTimers_Response_t {
    Icb_DateTime timestamp;
    Icb_ArrayOf_ClimateTimer timers;
    Icb_ClimateTimerError errorMessage;
};

U32 Icb_OpClimateTimers_Response_EncodedSize(Icb_OpClimateTimers_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpClimateTimers_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpClimateTimers_Response_Decode(Icb_OpClimateTimers_Response ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpClimateTimers_Response_Encode(Icb_OpClimateTimers_Response ThisPtr, ASN_Stream stream);
Icb_OpClimateTimers_Response Icb_OpClimateTimers_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpClimateTimers_Response_Print(Icb_OpClimateTimers_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_TimerDays of type PASN_Sequence
 */

struct Icb_TimerDays_t {
    Icb_ArrayOf_OnOff days;
};

U32 Icb_TimerDays_EncodedSize(Icb_TimerDays ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_TimerDays_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_TimerDays_Decode(Icb_TimerDays ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_TimerDays_Encode(Icb_TimerDays ThisPtr, ASN_Stream stream);
Icb_TimerDays Icb_TimerDays_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_TimerDays_Print(Icb_TimerDays ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpGenericSettingSynch_Request of type PASN_Sequence
 */

struct Icb_OpGenericSettingSynch_Request_t {
    Icb_DateTime time;
    Icb_OpGenericSettingSynch_Request_settingIDs settingIDs;
};

U32 Icb_OpGenericSettingSynch_Request_EncodedSize(Icb_OpGenericSettingSynch_Request ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGenericSettingSynch_Request_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGenericSettingSynch_Request_Decode(Icb_OpGenericSettingSynch_Request ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpGenericSettingSynch_Request_Encode(Icb_OpGenericSettingSynch_Request ThisPtr, ASN_Stream stream);
Icb_OpGenericSettingSynch_Request Icb_OpGenericSettingSynch_Request_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGenericSettingSynch_Request_Print(Icb_OpGenericSettingSynch_Request ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpGenericSettingSynch_SetRequest of type PASN_Sequence
 */

struct Icb_OpGenericSettingSynch_SetRequest_t {
    Icb_DateTime time;
    Icb_ArrayOf_Setting settings;
};

U32 Icb_OpGenericSettingSynch_SetRequest_EncodedSize(Icb_OpGenericSettingSynch_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGenericSettingSynch_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGenericSettingSynch_SetRequest_Decode(Icb_OpGenericSettingSynch_SetRequest ThisPtr,
                                                       ASN_Session session,
                                                       ASN_Stream stream);
ASN_Result Icb_OpGenericSettingSynch_SetRequest_Encode(Icb_OpGenericSettingSynch_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpGenericSettingSynch_SetRequest Icb_OpGenericSettingSynch_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGenericSettingSynch_SetRequest_Print(Icb_OpGenericSettingSynch_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpGenericSettingSynch_Response of type PASN_Sequence
 */

struct Icb_OpGenericSettingSynch_Response_t {
    Icb_DateTime time;
    Icb_ArrayOf_Setting settings;
};

U32 Icb_OpGenericSettingSynch_Response_EncodedSize(Icb_OpGenericSettingSynch_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGenericSettingSynch_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGenericSettingSynch_Response_Decode(Icb_OpGenericSettingSynch_Response ThisPtr,
                                                     ASN_Session session,
                                                     ASN_Stream stream);
ASN_Result Icb_OpGenericSettingSynch_Response_Encode(Icb_OpGenericSettingSynch_Response ThisPtr, ASN_Stream stream);
Icb_OpGenericSettingSynch_Response Icb_OpGenericSettingSynch_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGenericSettingSynch_Response_Print(Icb_OpGenericSettingSynch_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpGenericSettingSynch_Notification of type PASN_Sequence
 */

struct Icb_OpGenericSettingSynch_Notification_t {
    Icb_DateTime time;
    Icb_ArrayOf_Setting settings;
};

U32 Icb_OpGenericSettingSynch_Notification_EncodedSize(Icb_OpGenericSettingSynch_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGenericSettingSynch_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGenericSettingSynch_Notification_Decode(Icb_OpGenericSettingSynch_Notification ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpGenericSettingSynch_Notification_Encode(Icb_OpGenericSettingSynch_Notification ThisPtr,
                                                         ASN_Stream stream);
Icb_OpGenericSettingSynch_Notification Icb_OpGenericSettingSynch_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGenericSettingSynch_Notification_Print(Icb_OpGenericSettingSynch_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_Setting of type PASN_Sequence
 */

struct Icb_Setting_t {
    U32 id;
    Icb_SettingType sType;
    U32 length;
    ASN_OctetString value;
};

U32 Icb_Setting_EncodedSize(Icb_Setting ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_Setting_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_Setting_Decode(Icb_Setting ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_Setting_Encode(Icb_Setting ThisPtr, ASN_Stream stream);
Icb_Setting Icb_Setting_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_Setting_Print(Icb_Setting ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpSoHPacketSend_SetRequestNoReturn of type PASN_Sequence
 */

struct Icb_OpSoHPacketSend_SetRequestNoReturn_t {
    BOOL exists__optional__sbText;
    BOOL exists__optional__sbMainCause;
    Icb_SBTrigger sbTrigger;
    ASN_UTF8String sbText;
    Icb_SBWarning sbMainCause;
    Icb_ArrayOf_SBWarning sbWarnings;
};

U32 Icb_OpSoHPacketSend_SetRequestNoReturn_EncodedSize(Icb_OpSoHPacketSend_SetRequestNoReturn ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpSoHPacketSend_SetRequestNoReturn_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpSoHPacketSend_SetRequestNoReturn_Decode(Icb_OpSoHPacketSend_SetRequestNoReturn ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpSoHPacketSend_SetRequestNoReturn_Encode(Icb_OpSoHPacketSend_SetRequestNoReturn ThisPtr,
                                                         ASN_Stream stream);
Icb_OpSoHPacketSend_SetRequestNoReturn Icb_OpSoHPacketSend_SetRequestNoReturn_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpSoHPacketSend_SetRequestNoReturn_Print(Icb_OpSoHPacketSend_SetRequestNoReturn ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMDataCounter_Response of type PASN_Sequence
 */

struct Icb_OpPSIMDataCounter_Response_t {
    Icb_DataCounterValue byteCount;
    Icb_DataCounter counter;
    Icb_DateTime dateTime;
};

U32 Icb_OpPSIMDataCounter_Response_EncodedSize(Icb_OpPSIMDataCounter_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMDataCounter_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMDataCounter_Response_Decode(Icb_OpPSIMDataCounter_Response ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream);
ASN_Result Icb_OpPSIMDataCounter_Response_Encode(Icb_OpPSIMDataCounter_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMDataCounter_Response Icb_OpPSIMDataCounter_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMDataCounter_Response_Print(Icb_OpPSIMDataCounter_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMNetworkConfiguration_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMNetworkConfiguration_SetRequest_t {
    Icb_APNSelection selection;
};

U32 Icb_OpPSIMNetworkConfiguration_SetRequest_EncodedSize(Icb_OpPSIMNetworkConfiguration_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMNetworkConfiguration_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMNetworkConfiguration_SetRequest_Decode(Icb_OpPSIMNetworkConfiguration_SetRequest ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpPSIMNetworkConfiguration_SetRequest_Encode(Icb_OpPSIMNetworkConfiguration_SetRequest ThisPtr,
                                                            ASN_Stream stream);
Icb_OpPSIMNetworkConfiguration_SetRequest Icb_OpPSIMNetworkConfiguration_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMNetworkConfiguration_SetRequest_Print(Icb_OpPSIMNetworkConfiguration_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMNetworkConfiguration_Response of type PASN_Sequence
 */

struct Icb_OpPSIMNetworkConfiguration_Response_t {
    Icb_APNSelection selection;
};

U32 Icb_OpPSIMNetworkConfiguration_Response_EncodedSize(Icb_OpPSIMNetworkConfiguration_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMNetworkConfiguration_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMNetworkConfiguration_Response_Decode(Icb_OpPSIMNetworkConfiguration_Response ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpPSIMNetworkConfiguration_Response_Encode(Icb_OpPSIMNetworkConfiguration_Response ThisPtr,
                                                          ASN_Stream stream);
Icb_OpPSIMNetworkConfiguration_Response Icb_OpPSIMNetworkConfiguration_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMNetworkConfiguration_Response_Print(Icb_OpPSIMNetworkConfiguration_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMConnectionStatus_Response of type PASN_Sequence
 */

struct Icb_OpPSIMConnectionStatus_Response_t {
    Icb_PSIMConnectionStatus status;
    Icb_WirelessTechnology technology;
};

U32 Icb_OpPSIMConnectionStatus_Response_EncodedSize(Icb_OpPSIMConnectionStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMConnectionStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMConnectionStatus_Response_Decode(Icb_OpPSIMConnectionStatus_Response ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpPSIMConnectionStatus_Response_Encode(Icb_OpPSIMConnectionStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMConnectionStatus_Response Icb_OpPSIMConnectionStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMConnectionStatus_Response_Print(Icb_OpPSIMConnectionStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMConnectionStatus_Notification of type PASN_Sequence
 */

struct Icb_OpPSIMConnectionStatus_Notification_t {
    Icb_PSIMConnectionStatus status;
    Icb_WirelessTechnology technology;
};

U32 Icb_OpPSIMConnectionStatus_Notification_EncodedSize(Icb_OpPSIMConnectionStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMConnectionStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMConnectionStatus_Notification_Decode(Icb_OpPSIMConnectionStatus_Notification ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpPSIMConnectionStatus_Notification_Encode(Icb_OpPSIMConnectionStatus_Notification ThisPtr,
                                                          ASN_Stream stream);
Icb_OpPSIMConnectionStatus_Notification Icb_OpPSIMConnectionStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMConnectionStatus_Notification_Print(Icb_OpPSIMConnectionStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetGateway_SetRequest of type PASN_Sequence
 */

struct Icb_OpInternetGateway_SetRequest_t {
    Icb_Ecu internetGateway;
};

U32 Icb_OpInternetGateway_SetRequest_EncodedSize(Icb_OpInternetGateway_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetGateway_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetGateway_SetRequest_Decode(Icb_OpInternetGateway_SetRequest ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpInternetGateway_SetRequest_Encode(Icb_OpInternetGateway_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpInternetGateway_SetRequest Icb_OpInternetGateway_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetGateway_SetRequest_Print(Icb_OpInternetGateway_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpInternetGateway_Response of type PASN_Sequence
 */

struct Icb_OpInternetGateway_Response_t {
    Icb_Ecu internetGateway;
};

U32 Icb_OpInternetGateway_Response_EncodedSize(Icb_OpInternetGateway_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpInternetGateway_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpInternetGateway_Response_Decode(Icb_OpInternetGateway_Response ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream);
ASN_Result Icb_OpInternetGateway_Response_Encode(Icb_OpInternetGateway_Response ThisPtr, ASN_Stream stream);
Icb_OpInternetGateway_Response Icb_OpInternetGateway_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpInternetGateway_Response_Print(Icb_OpInternetGateway_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpConnectWorkshopWlan_Notification of type PASN_Sequence
 */

struct Icb_OpConnectWorkshopWlan_Notification_t {
    Icb_WorkshopWlanConnectionResult connectionResult;
};

U32 Icb_OpConnectWorkshopWlan_Notification_EncodedSize(Icb_OpConnectWorkshopWlan_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpConnectWorkshopWlan_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpConnectWorkshopWlan_Notification_Decode(Icb_OpConnectWorkshopWlan_Notification ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpConnectWorkshopWlan_Notification_Encode(Icb_OpConnectWorkshopWlan_Notification ThisPtr,
                                                         ASN_Stream stream);
Icb_OpConnectWorkshopWlan_Notification Icb_OpConnectWorkshopWlan_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpConnectWorkshopWlan_Notification_Print(Icb_OpConnectWorkshopWlan_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCurrentInternetSource_SetRequest of type PASN_Sequence
 */

struct Icb_OpCurrentInternetSource_SetRequest_t {
    Icb_InternetSource currentinternetsource;
};

U32 Icb_OpCurrentInternetSource_SetRequest_EncodedSize(Icb_OpCurrentInternetSource_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCurrentInternetSource_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCurrentInternetSource_SetRequest_Decode(Icb_OpCurrentInternetSource_SetRequest ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpCurrentInternetSource_SetRequest_Encode(Icb_OpCurrentInternetSource_SetRequest ThisPtr,
                                                         ASN_Stream stream);
Icb_OpCurrentInternetSource_SetRequest Icb_OpCurrentInternetSource_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCurrentInternetSource_SetRequest_Print(Icb_OpCurrentInternetSource_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCurrentInternetSource_Response of type PASN_Sequence
 */

struct Icb_OpCurrentInternetSource_Response_t {
    Icb_InternetSource currentinternetsource;
};

U32 Icb_OpCurrentInternetSource_Response_EncodedSize(Icb_OpCurrentInternetSource_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCurrentInternetSource_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCurrentInternetSource_Response_Decode(Icb_OpCurrentInternetSource_Response ThisPtr,
                                                       ASN_Session session,
                                                       ASN_Stream stream);
ASN_Result Icb_OpCurrentInternetSource_Response_Encode(Icb_OpCurrentInternetSource_Response ThisPtr, ASN_Stream stream);
Icb_OpCurrentInternetSource_Response Icb_OpCurrentInternetSource_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCurrentInternetSource_Response_Print(Icb_OpCurrentInternetSource_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCurrentInternetSource_Notification of type PASN_Sequence
 */

struct Icb_OpCurrentInternetSource_Notification_t {
    Icb_InternetSource currentinternetsource;
};

U32 Icb_OpCurrentInternetSource_Notification_EncodedSize(Icb_OpCurrentInternetSource_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCurrentInternetSource_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCurrentInternetSource_Notification_Decode(Icb_OpCurrentInternetSource_Notification ThisPtr,
                                                           ASN_Session session,
                                                           ASN_Stream stream);
ASN_Result Icb_OpCurrentInternetSource_Notification_Encode(Icb_OpCurrentInternetSource_Notification ThisPtr,
                                                           ASN_Stream stream);
Icb_OpCurrentInternetSource_Notification Icb_OpCurrentInternetSource_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCurrentInternetSource_Notification_Print(Icb_OpCurrentInternetSource_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANMode_SetRequest of type PASN_Sequence
 */

struct Icb_OpWLANMode_SetRequest_t {
    Icb_WLANMode wLANMode;
};

U32 Icb_OpWLANMode_SetRequest_EncodedSize(Icb_OpWLANMode_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANMode_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANMode_SetRequest_Decode(Icb_OpWLANMode_SetRequest ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpWLANMode_SetRequest_Encode(Icb_OpWLANMode_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpWLANMode_SetRequest Icb_OpWLANMode_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANMode_SetRequest_Print(Icb_OpWLANMode_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANMode_Response of type PASN_Sequence
 */

struct Icb_OpWLANMode_Response_t {
    Icb_WLANMode wLANMode;
};

U32 Icb_OpWLANMode_Response_EncodedSize(Icb_OpWLANMode_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANMode_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANMode_Response_Decode(Icb_OpWLANMode_Response ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpWLANMode_Response_Encode(Icb_OpWLANMode_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANMode_Response Icb_OpWLANMode_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANMode_Response_Print(Icb_OpWLANMode_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANMode_Notification of type PASN_Sequence
 */

struct Icb_OpWLANMode_Notification_t {
    Icb_WLANMode wLANMode;
};

U32 Icb_OpWLANMode_Notification_EncodedSize(Icb_OpWLANMode_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANMode_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANMode_Notification_Decode(Icb_OpWLANMode_Notification ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpWLANMode_Notification_Encode(Icb_OpWLANMode_Notification ThisPtr, ASN_Stream stream);
Icb_OpWLANMode_Notification Icb_OpWLANMode_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANMode_Notification_Print(Icb_OpWLANMode_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANFreqBandSelect_SetRequest of type PASN_Sequence
 */

struct Icb_OpWLANFreqBandSelect_SetRequest_t {
    Icb_WLANFrequencyBand wLANNewFrequencyBand;
};

U32 Icb_OpWLANFreqBandSelect_SetRequest_EncodedSize(Icb_OpWLANFreqBandSelect_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANFreqBandSelect_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANFreqBandSelect_SetRequest_Decode(Icb_OpWLANFreqBandSelect_SetRequest ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpWLANFreqBandSelect_SetRequest_Encode(Icb_OpWLANFreqBandSelect_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpWLANFreqBandSelect_SetRequest Icb_OpWLANFreqBandSelect_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANFreqBandSelect_SetRequest_Print(Icb_OpWLANFreqBandSelect_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANFreqBandSelect_Response of type PASN_Sequence
 */

struct Icb_OpWLANFreqBandSelect_Response_t {
    Icb_WLANFrequencyBand wLANCurrentFrequencyBand;
    Icb_ArrayOf_WLANFrequencyBand availableFrequencyList;
};

U32 Icb_OpWLANFreqBandSelect_Response_EncodedSize(Icb_OpWLANFreqBandSelect_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANFreqBandSelect_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANFreqBandSelect_Response_Decode(Icb_OpWLANFreqBandSelect_Response ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpWLANFreqBandSelect_Response_Encode(Icb_OpWLANFreqBandSelect_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANFreqBandSelect_Response Icb_OpWLANFreqBandSelect_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANFreqBandSelect_Response_Print(Icb_OpWLANFreqBandSelect_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_WLANChannelInfo of type PASN_Sequence
 */

struct Icb_WLANChannelInfo_t {
    U32 wlan24GhzChannelNumber;
    Icb_WLANChannelWidthData wLANChWidth;
};

U32 Icb_WLANChannelInfo_EncodedSize(Icb_WLANChannelInfo ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_WLANChannelInfo_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_WLANChannelInfo_Decode(Icb_WLANChannelInfo ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_WLANChannelInfo_Encode(Icb_WLANChannelInfo ThisPtr, ASN_Stream stream);
Icb_WLANChannelInfo Icb_WLANChannelInfo_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_WLANChannelInfo_Print(Icb_WLANChannelInfo ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPSSID_SetRequest of type PASN_Sequence
 */

struct Icb_OpWLANAPSSID_SetRequest_t {
    Icb_SSID wLANnewSSID;
};

U32 Icb_OpWLANAPSSID_SetRequest_EncodedSize(Icb_OpWLANAPSSID_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPSSID_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPSSID_SetRequest_Decode(Icb_OpWLANAPSSID_SetRequest ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpWLANAPSSID_SetRequest_Encode(Icb_OpWLANAPSSID_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpWLANAPSSID_SetRequest Icb_OpWLANAPSSID_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPSSID_SetRequest_Print(Icb_OpWLANAPSSID_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPSSID_Response of type PASN_Sequence
 */

struct Icb_OpWLANAPSSID_Response_t {
    Icb_SSID wLANcurrentSSID;
};

U32 Icb_OpWLANAPSSID_Response_EncodedSize(Icb_OpWLANAPSSID_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPSSID_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPSSID_Response_Decode(Icb_OpWLANAPSSID_Response ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpWLANAPSSID_Response_Encode(Icb_OpWLANAPSSID_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANAPSSID_Response Icb_OpWLANAPSSID_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPSSID_Response_Print(Icb_OpWLANAPSSID_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPPasswd_SetRequest of type PASN_Sequence
 */

struct Icb_OpWLANAPPasswd_SetRequest_t {
    Icb_WLAN_Password wLANNewPassword;
};

U32 Icb_OpWLANAPPasswd_SetRequest_EncodedSize(Icb_OpWLANAPPasswd_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPPasswd_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPPasswd_SetRequest_Decode(Icb_OpWLANAPPasswd_SetRequest ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpWLANAPPasswd_SetRequest_Encode(Icb_OpWLANAPPasswd_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpWLANAPPasswd_SetRequest Icb_OpWLANAPPasswd_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPPasswd_SetRequest_Print(Icb_OpWLANAPPasswd_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPPasswd_Response of type PASN_Sequence
 */

struct Icb_OpWLANAPPasswd_Response_t {
    Icb_WLAN_Password wLANCurrentPassword;
};

U32 Icb_OpWLANAPPasswd_Response_EncodedSize(Icb_OpWLANAPPasswd_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPPasswd_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPPasswd_Response_Decode(Icb_OpWLANAPPasswd_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpWLANAPPasswd_Response_Encode(Icb_OpWLANAPPasswd_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANAPPasswd_Response Icb_OpWLANAPPasswd_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPPasswd_Response_Print(Icb_OpWLANAPPasswd_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPConnDev_Response of type PASN_Sequence
 */

struct Icb_OpWLANAPConnDev_Response_t {
    Icb_ArrayOf_WLANConnDevice wLANCurrentConnDevices;
};

U32 Icb_OpWLANAPConnDev_Response_EncodedSize(Icb_OpWLANAPConnDev_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPConnDev_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPConnDev_Response_Decode(Icb_OpWLANAPConnDev_Response ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpWLANAPConnDev_Response_Encode(Icb_OpWLANAPConnDev_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANAPConnDev_Response Icb_OpWLANAPConnDev_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPConnDev_Response_Print(Icb_OpWLANAPConnDev_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPConnDev_Notification of type PASN_Sequence
 */

struct Icb_OpWLANAPConnDev_Notification_t {
    Icb_ArrayOf_WLANConnDevice wLANCurrentConnDevices;
};

U32 Icb_OpWLANAPConnDev_Notification_EncodedSize(Icb_OpWLANAPConnDev_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPConnDev_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPConnDev_Notification_Decode(Icb_OpWLANAPConnDev_Notification ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpWLANAPConnDev_Notification_Encode(Icb_OpWLANAPConnDev_Notification ThisPtr, ASN_Stream stream);
Icb_OpWLANAPConnDev_Notification Icb_OpWLANAPConnDev_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPConnDev_Notification_Print(Icb_OpWLANAPConnDev_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANSTAConnect_SetRequest of type PASN_Sequence
 */

struct Icb_OpWLANSTAConnect_SetRequest_t {
    Icb_WLANExternalPassword wLANPassword;
    Icb_SSID newSSID;
};

U32 Icb_OpWLANSTAConnect_SetRequest_EncodedSize(Icb_OpWLANSTAConnect_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTAConnect_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTAConnect_SetRequest_Decode(Icb_OpWLANSTAConnect_SetRequest ThisPtr,
                                                  ASN_Session session,
                                                  ASN_Stream stream);
ASN_Result Icb_OpWLANSTAConnect_SetRequest_Encode(Icb_OpWLANSTAConnect_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpWLANSTAConnect_SetRequest Icb_OpWLANSTAConnect_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTAConnect_SetRequest_Print(Icb_OpWLANSTAConnect_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANSTAConnect_Response of type PASN_Sequence
 */

struct Icb_OpWLANSTAConnect_Response_t {
    Icb_SSID currentSSID;
    Icb_WLANConnectStatus wLANConnectStatus;
};

U32 Icb_OpWLANSTAConnect_Response_EncodedSize(Icb_OpWLANSTAConnect_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTAConnect_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTAConnect_Response_Decode(Icb_OpWLANSTAConnect_Response ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpWLANSTAConnect_Response_Encode(Icb_OpWLANSTAConnect_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANSTAConnect_Response Icb_OpWLANSTAConnect_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTAConnect_Response_Print(Icb_OpWLANSTAConnect_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANAPStatusSettings_Response of type PASN_Sequence
 */

struct Icb_OpWLANAPStatusSettings_Response_t {
    Icb_WLANAPCurrentStatus wLANAPCurrentStatus;
    Icb_SSID currentSSID;
    Icb_WLAN_Password currentPassword;
    U32 numberOfConnectedDevices;
    Icb_WLANFrequencyBand currentUsedFrequencyBand;
};

U32 Icb_OpWLANAPStatusSettings_Response_EncodedSize(Icb_OpWLANAPStatusSettings_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANAPStatusSettings_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANAPStatusSettings_Response_Decode(Icb_OpWLANAPStatusSettings_Response ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpWLANAPStatusSettings_Response_Encode(Icb_OpWLANAPStatusSettings_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANAPStatusSettings_Response Icb_OpWLANAPStatusSettings_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANAPStatusSettings_Response_Print(Icb_OpWLANAPStatusSettings_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANSTAStatus_Response of type PASN_Sequence
 */

struct Icb_OpWLANSTAStatus_Response_t {
    BOOL exists__optional__currentUsedSSID;
    Icb_WLANMode currentWLANSTAMode;
    Icb_WLANConnectionStatus currentConnectionStatus;
    ASN_OctetString currentUsedSSID;
    Icb_ArrayOf_AvailableNetworkInformation availableNetworkInfoList;
};

U32 Icb_OpWLANSTAStatus_Response_EncodedSize(Icb_OpWLANSTAStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTAStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTAStatus_Response_Decode(Icb_OpWLANSTAStatus_Response ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpWLANSTAStatus_Response_Encode(Icb_OpWLANSTAStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpWLANSTAStatus_Response Icb_OpWLANSTAStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTAStatus_Response_Print(Icb_OpWLANSTAStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANSTAStatus_Notification of type PASN_Sequence
 */

struct Icb_OpWLANSTAStatus_Notification_t {
    Icb_WLANConnectionStatus notifyConnectionStatus;
    Icb_ArrayOf_AvailableNetworkInformation availableNetworkInfoList;
};

U32 Icb_OpWLANSTAStatus_Notification_EncodedSize(Icb_OpWLANSTAStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTAStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTAStatus_Notification_Decode(Icb_OpWLANSTAStatus_Notification ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpWLANSTAStatus_Notification_Encode(Icb_OpWLANSTAStatus_Notification ThisPtr, ASN_Stream stream);
Icb_OpWLANSTAStatus_Notification Icb_OpWLANSTAStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTAStatus_Notification_Print(Icb_OpWLANSTAStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_AvailableNetworkInformation of type PASN_Sequence
 */

struct Icb_AvailableNetworkInformation_t {
    BOOL exists__default__rememberedSSID;
    Icb_SSID sSID;
    S32 signalStrength;
    Icb_WLANSecurityType securityType;
    BOOL rememberedSSID;
};

U32 Icb_AvailableNetworkInformation_EncodedSize(Icb_AvailableNetworkInformation ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_AvailableNetworkInformation_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_AvailableNetworkInformation_Decode(Icb_AvailableNetworkInformation ThisPtr,
                                                  ASN_Session session,
                                                  ASN_Stream stream);
ASN_Result Icb_AvailableNetworkInformation_Encode(Icb_AvailableNetworkInformation ThisPtr, ASN_Stream stream);
Icb_AvailableNetworkInformation Icb_AvailableNetworkInformation_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_AvailableNetworkInformation_Print(Icb_AvailableNetworkInformation ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANSTARememberedNetwks_Response of type PASN_Sequence
 */

struct Icb_OpWLANSTARememberedNetwks_Response_t {
    Icb_ArrayOf_SSID wLANRememberedNetworksSSIDList;
};

U32 Icb_OpWLANSTARememberedNetwks_Response_EncodedSize(Icb_OpWLANSTARememberedNetwks_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANSTARememberedNetwks_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANSTARememberedNetwks_Response_Decode(Icb_OpWLANSTARememberedNetwks_Response ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpWLANSTARememberedNetwks_Response_Encode(Icb_OpWLANSTARememberedNetwks_Response ThisPtr,
                                                         ASN_Stream stream);
Icb_OpWLANSTARememberedNetwks_Response Icb_OpWLANSTARememberedNetwks_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANSTARememberedNetwks_Response_Print(Icb_OpWLANSTARememberedNetwks_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMSecurity_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMSecurity_SetRequest_t {
    Icb_SimSecuritySetting setting;
    Icb_PinCode pin;
};

U32 Icb_OpPSIMSecurity_SetRequest_EncodedSize(Icb_OpPSIMSecurity_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMSecurity_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMSecurity_SetRequest_Decode(Icb_OpPSIMSecurity_SetRequest ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpPSIMSecurity_SetRequest_Encode(Icb_OpPSIMSecurity_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpPSIMSecurity_SetRequest Icb_OpPSIMSecurity_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMSecurity_SetRequest_Print(Icb_OpPSIMSecurity_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMEnterCode_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMEnterCode_SetRequest_t {
    Icb_PinPukCommand command;
};

U32 Icb_OpPSIMEnterCode_SetRequest_EncodedSize(Icb_OpPSIMEnterCode_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMEnterCode_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMEnterCode_SetRequest_Decode(Icb_OpPSIMEnterCode_SetRequest ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream);
ASN_Result Icb_OpPSIMEnterCode_SetRequest_Encode(Icb_OpPSIMEnterCode_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpPSIMEnterCode_SetRequest Icb_OpPSIMEnterCode_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMEnterCode_SetRequest_Print(Icb_OpPSIMEnterCode_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMRegisterState_Response of type PASN_Sequence
 */

struct Icb_OpPSIMRegisterState_Response_t {
    Icb_RegisterState registerState;
};

U32 Icb_OpPSIMRegisterState_Response_EncodedSize(Icb_OpPSIMRegisterState_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMRegisterState_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMRegisterState_Response_Decode(Icb_OpPSIMRegisterState_Response ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpPSIMRegisterState_Response_Encode(Icb_OpPSIMRegisterState_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMRegisterState_Response Icb_OpPSIMRegisterState_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMRegisterState_Response_Print(Icb_OpPSIMRegisterState_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_NetworkOperator of type PASN_Sequence
 */

struct Icb_NetworkOperator_t {
    Icb_NwOperatorId id;
    ASN_OctetString name;
    Icb_NetworkType type;
    Icb_OnOffStatus ciphering;
};

U32 Icb_NetworkOperator_EncodedSize(Icb_NetworkOperator ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_NetworkOperator_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_NetworkOperator_Decode(Icb_NetworkOperator ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_NetworkOperator_Encode(Icb_NetworkOperator ThisPtr, ASN_Stream stream);
Icb_NetworkOperator Icb_NetworkOperator_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_NetworkOperator_Print(Icb_NetworkOperator ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMNetworkOperators_Response of type PASN_Sequence
 */

struct Icb_OpPSIMNetworkOperators_Response_t {
    Icb_ArrayOf_NetworkOperator operators;
};

U32 Icb_OpPSIMNetworkOperators_Response_EncodedSize(Icb_OpPSIMNetworkOperators_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMNetworkOperators_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMNetworkOperators_Response_Decode(Icb_OpPSIMNetworkOperators_Response ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpPSIMNetworkOperators_Response_Encode(Icb_OpPSIMNetworkOperators_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMNetworkOperators_Response Icb_OpPSIMNetworkOperators_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMNetworkOperators_Response_Print(Icb_OpPSIMNetworkOperators_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMNetworkOperatorCommand_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMNetworkOperatorCommand_SetRequest_t {
    Icb_OperatorSelection cmd;
};

U32 Icb_OpPSIMNetworkOperatorCommand_SetRequest_EncodedSize(Icb_OpPSIMNetworkOperatorCommand_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMNetworkOperatorCommand_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMNetworkOperatorCommand_SetRequest_Decode(Icb_OpPSIMNetworkOperatorCommand_SetRequest ThisPtr,
                                                              ASN_Session session,
                                                              ASN_Stream stream);
ASN_Result Icb_OpPSIMNetworkOperatorCommand_SetRequest_Encode(Icb_OpPSIMNetworkOperatorCommand_SetRequest ThisPtr,
                                                              ASN_Stream stream);
Icb_OpPSIMNetworkOperatorCommand_SetRequest Icb_OpPSIMNetworkOperatorCommand_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMNetworkOperatorCommand_SetRequest_Print(Icb_OpPSIMNetworkOperatorCommand_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMNetworkOperatorCommand_Response of type PASN_Sequence
 */

struct Icb_OpPSIMNetworkOperatorCommand_Response_t {
    Icb_OperatorSelection status;
    Icb_GenericOkStatus operatorSelectionResult;
};

U32 Icb_OpPSIMNetworkOperatorCommand_Response_EncodedSize(Icb_OpPSIMNetworkOperatorCommand_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMNetworkOperatorCommand_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMNetworkOperatorCommand_Response_Decode(Icb_OpPSIMNetworkOperatorCommand_Response ThisPtr,
                                                            ASN_Session session,
                                                            ASN_Stream stream);
ASN_Result Icb_OpPSIMNetworkOperatorCommand_Response_Encode(Icb_OpPSIMNetworkOperatorCommand_Response ThisPtr,
                                                            ASN_Stream stream);
Icb_OpPSIMNetworkOperatorCommand_Response Icb_OpPSIMNetworkOperatorCommand_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMNetworkOperatorCommand_Response_Print(Icb_OpPSIMNetworkOperatorCommand_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMNetworkOperatorCommand_Notification of type PASN_Sequence
 */

struct Icb_OpPSIMNetworkOperatorCommand_Notification_t {
    Icb_OperatorSelection status;
    Icb_GenericOkStatus operatorSelectionResult;
};

U32 Icb_OpPSIMNetworkOperatorCommand_Notification_EncodedSize(Icb_OpPSIMNetworkOperatorCommand_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMNetworkOperatorCommand_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMNetworkOperatorCommand_Notification_Decode(Icb_OpPSIMNetworkOperatorCommand_Notification ThisPtr,
                                                                ASN_Session session,
                                                                ASN_Stream stream);
ASN_Result Icb_OpPSIMNetworkOperatorCommand_Notification_Encode(Icb_OpPSIMNetworkOperatorCommand_Notification ThisPtr,
                                                                ASN_Stream stream);
Icb_OpPSIMNetworkOperatorCommand_Notification Icb_OpPSIMNetworkOperatorCommand_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMNetworkOperatorCommand_Notification_Print(Icb_OpPSIMNetworkOperatorCommand_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMState_Response of type PASN_Sequence
 */

struct Icb_OpPSIMState_Response_t {
    BOOL exists__optional__simID;
    Icb_SimStatus status;
    Icb_IMSINumber simID;
};

U32 Icb_OpPSIMState_Response_EncodedSize(Icb_OpPSIMState_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMState_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMState_Response_Decode(Icb_OpPSIMState_Response ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpPSIMState_Response_Encode(Icb_OpPSIMState_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMState_Response Icb_OpPSIMState_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMState_Response_Print(Icb_OpPSIMState_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMPhoneOperationMode_Response of type PASN_Sequence
 */

struct Icb_OpPSIMPhoneOperationMode_Response_t {
    Icb_PhoneOperationMode mode;
};

U32 Icb_OpPSIMPhoneOperationMode_Response_EncodedSize(Icb_OpPSIMPhoneOperationMode_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMPhoneOperationMode_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMPhoneOperationMode_Response_Decode(Icb_OpPSIMPhoneOperationMode_Response ThisPtr,
                                                        ASN_Session session,
                                                        ASN_Stream stream);
ASN_Result Icb_OpPSIMPhoneOperationMode_Response_Encode(Icb_OpPSIMPhoneOperationMode_Response ThisPtr,
                                                        ASN_Stream stream);
Icb_OpPSIMPhoneOperationMode_Response Icb_OpPSIMPhoneOperationMode_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMPhoneOperationMode_Response_Print(Icb_OpPSIMPhoneOperationMode_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMUssd_SetRequest of type PASN_Sequence
 */

struct Icb_OpPSIMUssd_SetRequest_t {
    Icb_UssdCode ussd;
    ASN_OctetString language;
};

U32 Icb_OpPSIMUssd_SetRequest_EncodedSize(Icb_OpPSIMUssd_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMUssd_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMUssd_SetRequest_Decode(Icb_OpPSIMUssd_SetRequest ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpPSIMUssd_SetRequest_Encode(Icb_OpPSIMUssd_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpPSIMUssd_SetRequest Icb_OpPSIMUssd_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMUssd_SetRequest_Print(Icb_OpPSIMUssd_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpPSIMUssd_Response of type PASN_Sequence
 */

struct Icb_OpPSIMUssd_Response_t {
    Icb_UssdStatus ussdStatus;
    Icb_UssdReturnCode ussd;
};

U32 Icb_OpPSIMUssd_Response_EncodedSize(Icb_OpPSIMUssd_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpPSIMUssd_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpPSIMUssd_Response_Decode(Icb_OpPSIMUssd_Response ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_OpPSIMUssd_Response_Encode(Icb_OpPSIMUssd_Response ThisPtr, ASN_Stream stream);
Icb_OpPSIMUssd_Response Icb_OpPSIMUssd_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpPSIMUssd_Response_Print(Icb_OpPSIMUssd_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCallHandling_SetRequest of type PASN_Sequence
 */

struct Icb_OpCallHandling_SetRequest_t {
    BOOL exists__optional__callId;
    Icb_AssistCallAction action;
    U32 callId;
};

U32 Icb_OpCallHandling_SetRequest_EncodedSize(Icb_OpCallHandling_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCallHandling_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCallHandling_SetRequest_Decode(Icb_OpCallHandling_SetRequest ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpCallHandling_SetRequest_Encode(Icb_OpCallHandling_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpCallHandling_SetRequest Icb_OpCallHandling_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCallHandling_SetRequest_Print(Icb_OpCallHandling_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTEMIdentification_Response of type PASN_Sequence
 */

struct Icb_OpTEMIdentification_Response_t {
    BOOL exists__optional__wifiMac;
    ASN_OctetString imei;
    Icb_MacAddress wifiMac;
    ASN_OctetString serialNr;
};

U32 Icb_OpTEMIdentification_Response_EncodedSize(Icb_OpTEMIdentification_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTEMIdentification_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTEMIdentification_Response_Decode(Icb_OpTEMIdentification_Response ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpTEMIdentification_Response_Encode(Icb_OpTEMIdentification_Response ThisPtr, ASN_Stream stream);
Icb_OpTEMIdentification_Response Icb_OpTEMIdentification_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTEMIdentification_Response_Print(Icb_OpTEMIdentification_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTEMRadioMode_SetRequest of type PASN_Sequence
 */

struct Icb_OpTEMRadioMode_SetRequest_t {
    Icb_RadioMode requestedMode;
};

U32 Icb_OpTEMRadioMode_SetRequest_EncodedSize(Icb_OpTEMRadioMode_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTEMRadioMode_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTEMRadioMode_SetRequest_Decode(Icb_OpTEMRadioMode_SetRequest ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpTEMRadioMode_SetRequest_Encode(Icb_OpTEMRadioMode_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpTEMRadioMode_SetRequest Icb_OpTEMRadioMode_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTEMRadioMode_SetRequest_Print(Icb_OpTEMRadioMode_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTEMRadioMode_Response of type PASN_Sequence
 */

struct Icb_OpTEMRadioMode_Response_t {
    Icb_RadioMode currentMode;
};

U32 Icb_OpTEMRadioMode_Response_EncodedSize(Icb_OpTEMRadioMode_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTEMRadioMode_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTEMRadioMode_Response_Decode(Icb_OpTEMRadioMode_Response ThisPtr,
                                              ASN_Session session,
                                              ASN_Stream stream);
ASN_Result Icb_OpTEMRadioMode_Response_Encode(Icb_OpTEMRadioMode_Response ThisPtr, ASN_Stream stream);
Icb_OpTEMRadioMode_Response Icb_OpTEMRadioMode_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTEMRadioMode_Response_Print(Icb_OpTEMRadioMode_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpTunerFrequencies_Response of type PASN_Sequence
 */

struct Icb_OpTunerFrequencies_Response_t {
    Icb_ArrayOf_RadioFrequencyHz frequencies;
};

U32 Icb_OpTunerFrequencies_Response_EncodedSize(Icb_OpTunerFrequencies_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpTunerFrequencies_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpTunerFrequencies_Response_Decode(Icb_OpTunerFrequencies_Response ThisPtr,
                                                  ASN_Session session,
                                                  ASN_Stream stream);
ASN_Result Icb_OpTunerFrequencies_Response_Encode(Icb_OpTunerFrequencies_Response ThisPtr, ASN_Stream stream);
Icb_OpTunerFrequencies_Response Icb_OpTunerFrequencies_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpTunerFrequencies_Response_Print(Icb_OpTunerFrequencies_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDeadReckonedPosition_Response of type PASN_Sequence
 */

struct Icb_OpDeadReckonedPosition_Response_t {
    Icb_DRVehiclePosition position;
};

U32 Icb_OpDeadReckonedPosition_Response_EncodedSize(Icb_OpDeadReckonedPosition_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDeadReckonedPosition_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDeadReckonedPosition_Response_Decode(Icb_OpDeadReckonedPosition_Response ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpDeadReckonedPosition_Response_Encode(Icb_OpDeadReckonedPosition_Response ThisPtr, ASN_Stream stream);
Icb_OpDeadReckonedPosition_Response Icb_OpDeadReckonedPosition_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDeadReckonedPosition_Response_Print(Icb_OpDeadReckonedPosition_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_DRPositionData of type PASN_Sequence
 */

struct Icb_DRPositionData_t {
    Icb_CoordinatesLongLat longLat;
    U32 heading;
    U32 speedKmph;
    U32 hdopX10;
    U32 numSat;
    Icb_DateTime fixTime;
    Icb_GnssFixType fixType;
    Icb_DeadReckoningType drType;
    U32 drDistance;
};

U32 Icb_DRPositionData_EncodedSize(Icb_DRPositionData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_DRPositionData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_DRPositionData_Decode(Icb_DRPositionData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_DRPositionData_Encode(Icb_DRPositionData ThisPtr, ASN_Stream stream);
Icb_DRPositionData Icb_DRPositionData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_DRPositionData_Print(Icb_DRPositionData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_GeographicalPosition of type PASN_Sequence
 */

struct Icb_GeographicalPosition_t {
    Icb_CoordinatesLongLat longLat;
    S32 altitude;
};

U32 Icb_GeographicalPosition_EncodedSize(Icb_GeographicalPosition ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_GeographicalPosition_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_GeographicalPosition_Decode(Icb_GeographicalPosition ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GeographicalPosition_Encode(Icb_GeographicalPosition ThisPtr, ASN_Stream stream);
Icb_GeographicalPosition Icb_GeographicalPosition_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_GeographicalPosition_Print(Icb_GeographicalPosition ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_SatelliteUsage of type PASN_Sequence
 */

struct Icb_SatelliteUsage_t {
    Icb_NrOfSatellitesPerSystem nrOfSatellitesVisible;
    Icb_NrOfSatellitesPerSystem nrOfSatellitesUsed;
};

U32 Icb_SatelliteUsage_EncodedSize(Icb_SatelliteUsage ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_SatelliteUsage_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_SatelliteUsage_Decode(Icb_SatelliteUsage ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SatelliteUsage_Encode(Icb_SatelliteUsage ThisPtr, ASN_Stream stream);
Icb_SatelliteUsage Icb_SatelliteUsage_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_SatelliteUsage_Print(Icb_SatelliteUsage ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_ChannelData of type PASN_Sequence
 */

struct Icb_ChannelData_t {
    U32 prn;
    Icb_SatelliteTrackingStatusType trackingStatus;
    U32 svacc;
    U32 snr;
    U32 azimuthAngle;
    U32 elevationAngle;
    Icb_ExtendedChannelData extendedData;
};

U32 Icb_ChannelData_EncodedSize(Icb_ChannelData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ChannelData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ChannelData_Decode(Icb_ChannelData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ChannelData_Encode(Icb_ChannelData ThisPtr, ASN_Stream stream);
Icb_ChannelData Icb_ChannelData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_ChannelData_Print(Icb_ChannelData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_GNSSDataAccuracy of type PASN_Sequence
 */

struct Icb_GNSSDataAccuracy_t {
    Icb_DateTime utcTime;
    Icb_AccuracyValues accuracy;
};

U32 Icb_GNSSDataAccuracy_EncodedSize(Icb_GNSSDataAccuracy ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_GNSSDataAccuracy_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_GNSSDataAccuracy_Decode(Icb_GNSSDataAccuracy ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GNSSDataAccuracy_Encode(Icb_GNSSDataAccuracy ThisPtr, ASN_Stream stream);
Icb_GNSSDataAccuracy Icb_GNSSDataAccuracy_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_GNSSDataAccuracy_Print(Icb_GNSSDataAccuracy ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpRemoteDiagnosticInfo_Notification of type PASN_Sequence
 */

struct Icb_OpRemoteDiagnosticInfo_Notification_t {
    Icb_RemoteDiagInfo remoteDiagInfo;
};

U32 Icb_OpRemoteDiagnosticInfo_Notification_EncodedSize(Icb_OpRemoteDiagnosticInfo_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRemoteDiagnosticInfo_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRemoteDiagnosticInfo_Notification_Decode(Icb_OpRemoteDiagnosticInfo_Notification ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpRemoteDiagnosticInfo_Notification_Encode(Icb_OpRemoteDiagnosticInfo_Notification ThisPtr,
                                                          ASN_Stream stream);
Icb_OpRemoteDiagnosticInfo_Notification Icb_OpRemoteDiagnosticInfo_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRemoteDiagnosticInfo_Notification_Print(Icb_OpRemoteDiagnosticInfo_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCurrentDoIPState_Notification of type PASN_Sequence
 */

struct Icb_OpCurrentDoIPState_Notification_t {
    BOOL doIPState;
    Icb_DoIPMode doIPMode;
    Icb_DoIPPhase doIPPhase;
};

U32 Icb_OpCurrentDoIPState_Notification_EncodedSize(Icb_OpCurrentDoIPState_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCurrentDoIPState_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCurrentDoIPState_Notification_Decode(Icb_OpCurrentDoIPState_Notification ThisPtr,
                                                      ASN_Session session,
                                                      ASN_Stream stream);
ASN_Result Icb_OpCurrentDoIPState_Notification_Encode(Icb_OpCurrentDoIPState_Notification ThisPtr, ASN_Stream stream);
Icb_OpCurrentDoIPState_Notification Icb_OpCurrentDoIPState_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCurrentDoIPState_Notification_Print(Icb_OpCurrentDoIPState_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpCurrentDoIPConnection_Notification of type PASN_Sequence
 */

struct Icb_OpCurrentDoIPConnection_Notification_t {
    Icb_CurrentDoIPConn currentDoIPConn;
};

U32 Icb_OpCurrentDoIPConnection_Notification_EncodedSize(Icb_OpCurrentDoIPConnection_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpCurrentDoIPConnection_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpCurrentDoIPConnection_Notification_Decode(Icb_OpCurrentDoIPConnection_Notification ThisPtr,
                                                           ASN_Session session,
                                                           ASN_Stream stream);
ASN_Result Icb_OpCurrentDoIPConnection_Notification_Encode(Icb_OpCurrentDoIPConnection_Notification ThisPtr,
                                                           ASN_Stream stream);
Icb_OpCurrentDoIPConnection_Notification Icb_OpCurrentDoIPConnection_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpCurrentDoIPConnection_Notification_Print(Icb_OpCurrentDoIPConnection_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpRequestUserAuthentication_Response of type PASN_Sequence
 */

struct Icb_OpRequestUserAuthentication_Response_t {
    Icb_UserAuthCredentials userAuthCredentials;
};

U32 Icb_OpRequestUserAuthentication_Response_EncodedSize(Icb_OpRequestUserAuthentication_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpRequestUserAuthentication_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpRequestUserAuthentication_Response_Decode(Icb_OpRequestUserAuthentication_Response ThisPtr,
                                                           ASN_Session session,
                                                           ASN_Stream stream);
ASN_Result Icb_OpRequestUserAuthentication_Response_Encode(Icb_OpRequestUserAuthentication_Response ThisPtr,
                                                           ASN_Stream stream);
Icb_OpRequestUserAuthentication_Response Icb_OpRequestUserAuthentication_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpRequestUserAuthentication_Response_Print(Icb_OpRequestUserAuthentication_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpUpdateDaCMode_Notification of type PASN_Sequence
 */

struct Icb_OpUpdateDaCMode_Notification_t {
    Icb_UpdateDacMode updateDaCMode;
};

U32 Icb_OpUpdateDaCMode_Notification_EncodedSize(Icb_OpUpdateDaCMode_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpUpdateDaCMode_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpUpdateDaCMode_Notification_Decode(Icb_OpUpdateDaCMode_Notification ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpUpdateDaCMode_Notification_Encode(Icb_OpUpdateDaCMode_Notification ThisPtr, ASN_Stream stream);
Icb_OpUpdateDaCMode_Notification Icb_OpUpdateDaCMode_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpUpdateDaCMode_Notification_Print(Icb_OpUpdateDaCMode_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpApprovalStatus_Response of type PASN_Sequence
 */

struct Icb_OpApprovalStatus_Response_t {
    Icb_ArrayOf_ApprovalStatusType status;
};

U32 Icb_OpApprovalStatus_Response_EncodedSize(Icb_OpApprovalStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpApprovalStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpApprovalStatus_Response_Decode(Icb_OpApprovalStatus_Response ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpApprovalStatus_Response_Encode(Icb_OpApprovalStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpApprovalStatus_Response Icb_OpApprovalStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpApprovalStatus_Response_Print(Icb_OpApprovalStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpApprovalStatus_Notification of type PASN_Sequence
 */

struct Icb_OpApprovalStatus_Notification_t {
    Icb_ArrayOf_ApprovalStatusType status;
};

U32 Icb_OpApprovalStatus_Notification_EncodedSize(Icb_OpApprovalStatus_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpApprovalStatus_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpApprovalStatus_Notification_Decode(Icb_OpApprovalStatus_Notification ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpApprovalStatus_Notification_Encode(Icb_OpApprovalStatus_Notification ThisPtr, ASN_Stream stream);
Icb_OpApprovalStatus_Notification Icb_OpApprovalStatus_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpApprovalStatus_Notification_Print(Icb_OpApprovalStatus_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDownloadStatus_Response of type PASN_Sequence
 */

struct Icb_OpDownloadStatus_Response_t {
    BOOL exists__optional__downloadList;
    Icb_DownloadStatus downloadStatus;
    Icb_ArrayOf_SoftwareProduct downloadList;
};

U32 Icb_OpDownloadStatus_Response_EncodedSize(Icb_OpDownloadStatus_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDownloadStatus_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDownloadStatus_Response_Decode(Icb_OpDownloadStatus_Response ThisPtr,
                                                ASN_Session session,
                                                ASN_Stream stream);
ASN_Result Icb_OpDownloadStatus_Response_Encode(Icb_OpDownloadStatus_Response ThisPtr, ASN_Stream stream);
Icb_OpDownloadStatus_Response Icb_OpDownloadStatus_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDownloadStatus_Response_Print(Icb_OpDownloadStatus_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_SoftwareProduct of type PASN_Sequence
 */

struct Icb_SoftwareProduct_t {
    BOOL exists__optional__progress;
    Icb_UUID id;
    Icb_DownloadState downloadState;
    Icb_DownloadProgress progress;
};

U32 Icb_SoftwareProduct_EncodedSize(Icb_SoftwareProduct ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_SoftwareProduct_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_SoftwareProduct_Decode(Icb_SoftwareProduct ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_SoftwareProduct_Encode(Icb_SoftwareProduct ThisPtr, ASN_Stream stream);
Icb_SoftwareProduct Icb_SoftwareProduct_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_SoftwareProduct_Print(Icb_SoftwareProduct ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDownloadSoftware_SetRequest of type PASN_Sequence
 */

struct Icb_OpDownloadSoftware_SetRequest_t {
    Icb_ArrayOf_UUID downloadList;
};

U32 Icb_OpDownloadSoftware_SetRequest_EncodedSize(Icb_OpDownloadSoftware_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDownloadSoftware_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDownloadSoftware_SetRequest_Decode(Icb_OpDownloadSoftware_SetRequest ThisPtr,
                                                    ASN_Session session,
                                                    ASN_Stream stream);
ASN_Result Icb_OpDownloadSoftware_SetRequest_Encode(Icb_OpDownloadSoftware_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpDownloadSoftware_SetRequest Icb_OpDownloadSoftware_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDownloadSoftware_SetRequest_Print(Icb_OpDownloadSoftware_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDeletedSoftware_SetRequest of type PASN_Sequence
 */

struct Icb_OpDeletedSoftware_SetRequest_t {
    Icb_ArrayOf_PartIdentifier deletedSoftware;
};

U32 Icb_OpDeletedSoftware_SetRequest_EncodedSize(Icb_OpDeletedSoftware_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDeletedSoftware_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDeletedSoftware_SetRequest_Decode(Icb_OpDeletedSoftware_SetRequest ThisPtr,
                                                   ASN_Session session,
                                                   ASN_Stream stream);
ASN_Result Icb_OpDeletedSoftware_SetRequest_Encode(Icb_OpDeletedSoftware_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpDeletedSoftware_SetRequest Icb_OpDeletedSoftware_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDeletedSoftware_SetRequest_Print(Icb_OpDeletedSoftware_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDeviceInstall_SetRequest of type PASN_Sequence
 */

struct Icb_OpDeviceInstall_SetRequest_t {
    BOOL exists__optional__installList;
    Icb_InstallCommand installCommand;
    Icb_ArrayOf_InstallationData installList;
};

U32 Icb_OpDeviceInstall_SetRequest_EncodedSize(Icb_OpDeviceInstall_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDeviceInstall_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDeviceInstall_SetRequest_Decode(Icb_OpDeviceInstall_SetRequest ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream);
ASN_Result Icb_OpDeviceInstall_SetRequest_Encode(Icb_OpDeviceInstall_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpDeviceInstall_SetRequest Icb_OpDeviceInstall_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDeviceInstall_SetRequest_Print(Icb_OpDeviceInstall_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpDeviceInstall_Response of type PASN_Sequence
 */

struct Icb_OpDeviceInstall_Response_t {
    BOOL exists__optional__installProgress;
    BOOL exists__optional__installedList;
    Icb_InstallStatus status;
    Icb_InstallProgress installProgress;
    Icb_ArrayOf_InstalledData installedList;
};

U32 Icb_OpDeviceInstall_Response_EncodedSize(Icb_OpDeviceInstall_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpDeviceInstall_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpDeviceInstall_Response_Decode(Icb_OpDeviceInstall_Response ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpDeviceInstall_Response_Encode(Icb_OpDeviceInstall_Response ThisPtr, ASN_Stream stream);
Icb_OpDeviceInstall_Response Icb_OpDeviceInstall_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpDeviceInstall_Response_Print(Icb_OpDeviceInstall_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_InstalledData of type PASN_Sequence
 */

struct Icb_InstalledData_t {
    Icb_PartIdentifier identifier;
    Icb_FileInstallationStatus fileStatus;
};

U32 Icb_InstalledData_EncodedSize(Icb_InstalledData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_InstalledData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_InstalledData_Decode(Icb_InstalledData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_InstalledData_Encode(Icb_InstalledData ThisPtr, ASN_Stream stream);
Icb_InstalledData Icb_InstalledData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_InstalledData_Print(Icb_InstalledData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpEcallSettings_SetRequest of type PASN_Sequence
 */

struct Icb_OpEcallSettings_SetRequest_t {
    BOOL exists__optional__ecallSetting;
    Icb_EcalSettings ecallSetting;
};

U32 Icb_OpEcallSettings_SetRequest_EncodedSize(Icb_OpEcallSettings_SetRequest ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpEcallSettings_SetRequest_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpEcallSettings_SetRequest_Decode(Icb_OpEcallSettings_SetRequest ThisPtr,
                                                 ASN_Session session,
                                                 ASN_Stream stream);
ASN_Result Icb_OpEcallSettings_SetRequest_Encode(Icb_OpEcallSettings_SetRequest ThisPtr, ASN_Stream stream);
Icb_OpEcallSettings_SetRequest Icb_OpEcallSettings_SetRequest_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpEcallSettings_SetRequest_Print(Icb_OpEcallSettings_SetRequest ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpEcallSettings_Response of type PASN_Sequence
 */

struct Icb_OpEcallSettings_Response_t {
    Icb_EcalSettings ecallSetting;
};

U32 Icb_OpEcallSettings_Response_EncodedSize(Icb_OpEcallSettings_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpEcallSettings_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpEcallSettings_Response_Decode(Icb_OpEcallSettings_Response ThisPtr,
                                               ASN_Session session,
                                               ASN_Stream stream);
ASN_Result Icb_OpEcallSettings_Response_Encode(Icb_OpEcallSettings_Response ThisPtr, ASN_Stream stream);
Icb_OpEcallSettings_Response Icb_OpEcallSettings_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpEcallSettings_Response_Print(Icb_OpEcallSettings_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_ClimateTimer of type PASN_Sequence
 */

struct Icb_ClimateTimer_t {
    U32 id;
    Icb_TimerStatus timerStatus;
    Icb_TimerType timerType;
    Icb_TimerDays days;
    Icb_DateTime time;
};

U32 Icb_ClimateTimer_EncodedSize(Icb_ClimateTimer ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_ClimateTimer_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_ClimateTimer_Decode(Icb_ClimateTimer ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_ClimateTimer_Encode(Icb_ClimateTimer ThisPtr, ASN_Stream stream);
Icb_ClimateTimer Icb_ClimateTimer_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_ClimateTimer_Print(Icb_ClimateTimer ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpWLANChannelFreqInfo_Notification of type PASN_Sequence
 */

struct Icb_OpWLANChannelFreqInfo_Notification_t {
    Icb_WLANChannelInfo wLANChannelInfo;
};

U32 Icb_OpWLANChannelFreqInfo_Notification_EncodedSize(Icb_OpWLANChannelFreqInfo_Notification ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpWLANChannelFreqInfo_Notification_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpWLANChannelFreqInfo_Notification_Decode(Icb_OpWLANChannelFreqInfo_Notification ThisPtr,
                                                         ASN_Session session,
                                                         ASN_Stream stream);
ASN_Result Icb_OpWLANChannelFreqInfo_Notification_Encode(Icb_OpWLANChannelFreqInfo_Notification ThisPtr,
                                                         ASN_Stream stream);
Icb_OpWLANChannelFreqInfo_Notification Icb_OpWLANChannelFreqInfo_Notification_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpWLANChannelFreqInfo_Notification_Print(Icb_OpWLANChannelFreqInfo_Notification ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_GNSSData of type PASN_Sequence
 */

struct Icb_GNSSData_t {
    Icb_DateTime utcTime;
    Icb_GPSSystemTime gpsTime;
    Icb_GeographicalPosition position;
    Icb_Velocity movement;
    U32 heading;
    Icb_GNSSUsage gnssStatus;
    Icb_GNSSStatus positioningStatus;
    Icb_SatelliteUsage satelliteInfo;
    Icb_DOPValues precision;
    Icb_ReceiverChannelData receiverChannels;
};

U32 Icb_GNSSData_EncodedSize(Icb_GNSSData ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_GNSSData_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_GNSSData_Decode(Icb_GNSSData ThisPtr, ASN_Session session, ASN_Stream stream);
ASN_Result Icb_GNSSData_Encode(Icb_GNSSData ThisPtr, ASN_Stream stream);
Icb_GNSSData Icb_GNSSData_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_GNSSData_Print(Icb_GNSSData ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpGNSSPositionDataAccuracy_Response of type PASN_Sequence
 */

struct Icb_OpGNSSPositionDataAccuracy_Response_t {
    Icb_GNSSDataAccuracy gnssPositionDataAccuracy;
};

U32 Icb_OpGNSSPositionDataAccuracy_Response_EncodedSize(Icb_OpGNSSPositionDataAccuracy_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGNSSPositionDataAccuracy_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGNSSPositionDataAccuracy_Response_Decode(Icb_OpGNSSPositionDataAccuracy_Response ThisPtr,
                                                          ASN_Session session,
                                                          ASN_Stream stream);
ASN_Result Icb_OpGNSSPositionDataAccuracy_Response_Encode(Icb_OpGNSSPositionDataAccuracy_Response ThisPtr,
                                                          ASN_Stream stream);
Icb_OpGNSSPositionDataAccuracy_Response Icb_OpGNSSPositionDataAccuracy_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGNSSPositionDataAccuracy_Response_Print(Icb_OpGNSSPositionDataAccuracy_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

/*
 * Icb_OpGNSSPositionData_Response of type PASN_Sequence
 */

struct Icb_OpGNSSPositionData_Response_t {
    Icb_GNSSData gnssPositionData;
};

U32 Icb_OpGNSSPositionData_Response_EncodedSize(Icb_OpGNSSPositionData_Response ThisPtr);
#ifdef ENABLE_ASN_SESSION_SIZE
U32 Icb_OpGNSSPositionData_Response_SessionSize();
#endif /* #ifdef ENABLE_ASN_SESSION_SIZE */
ASN_Result Icb_OpGNSSPositionData_Response_Decode(Icb_OpGNSSPositionData_Response ThisPtr,
                                                  ASN_Session session,
                                                  ASN_Stream stream);
ASN_Result Icb_OpGNSSPositionData_Response_Encode(Icb_OpGNSSPositionData_Response ThisPtr, ASN_Stream stream);
Icb_OpGNSSPositionData_Response Icb_OpGNSSPositionData_Response_Create(ASN_Session session);
#ifdef ASN_PRINT
void Icb_OpGNSSPositionData_Response_Print(Icb_OpGNSSPositionData_Response ThisPtr);
#endif /* #ifdef ASN_PRINT */

// End of infotainmentIpBus.h
