/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
/**
 * description: This is the Common Phone/ Telematics backend franca interface
 */
#ifndef V0_ORG_VOLVOCARS_VOLVOONCALL_Common_Phone_Telematics_Backend_PROXY_BASE_HPP_
#define V0_ORG_VOLVOCARS_VOLVOONCALL_Common_Phone_Telematics_Backend_PROXY_BASE_HPP_

#include <v0/org/volvocars/VolvoOnCall/CommonPhoneTelematicsBackend.hpp>


#include <v0/org/volvo/connectivity/IpCommandBusTypes.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <CommonAPI/Deployment.hpp>
#include <CommonAPI/InputStream.hpp>
#include <CommonAPI/OutputStream.hpp>
#include <CommonAPI/Struct.hpp>
#include <cstdint>
#include <vector>

#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v0 {
namespace org {
namespace volvocars {
namespace VolvoOnCall {

class CommonPhoneTelematicsBackendProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::Event<
        ::v0::org::volvo::connectivity::IpCommandBusTypes::AudioStatus
    > PremiumAudioNotificationEvent;

    typedef std::function<void(const CommonAPI::CallStatus&, const ::v0::org::volvo::connectivity::IpCommandBusTypes::AudioStatus&)> PremiumAudioSetRequestAsyncCallback;


    /**
     * description: (0x0702  PremiumAudio 0x05 Notification)
     */
    virtual PremiumAudioNotificationEvent& getPremiumAudioNotificationEvent() = 0;

    /**
     * description: (0x0702  PremiumAudio 0x02 SetRequest)
        Enables TEM to request handsfree
     *   sound through the IHU. 
        The IHU shall give audio and microphone resources
     *   to telematics when
        OpPremiumAudio-SetRequest (UniqueID: 0x0702 OpType:
     *   0x02) with isRequested=true.
     */
    virtual void PremiumAudioSetRequest(const bool &_is_requested, CommonAPI::CallStatus &_internalCallStatus, ::v0::org::volvo::connectivity::IpCommandBusTypes::AudioStatus &_premium_audio_status, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> PremiumAudioSetRequestAsync(const bool &_is_requested, PremiumAudioSetRequestAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace VolvoOnCall
} // namespace volvocars
} // namespace org
} // namespace v0


// Compatibility
namespace v0_1 = v0;

#endif // V0_ORG_VOLVOCARS_VOLVOONCALL_Common_Phone_Telematics_Backend_PROXY_BASE_HPP_
