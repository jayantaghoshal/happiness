/*===========================================================================*\
 * Copyright 2017 Delphi Technologies, Inc., All Rights Reserved.
 * Delphi Confidential
\*===========================================================================*/
/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.3.v201507280808.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include "mock_ota_service_stub.h"
#include <assert.h>

namespace gen_conn = v0::org::volvo::connectivity;

namespace Connectivity
{
OTAStub::OTAStub(IOTAService *service)
    : remoteEventHandler_(this), interfaceVersion_(CommonAPI::Version(0, 1)), service_(service)
{
}

OTAStub::RemoteEventHandler::RemoteEventHandler(OTAStub *_defaultStub) : defaultStub_(_defaultStub)
{
}

const CommonAPI::Version &OTAStub::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client)
{
    (void)_client;
    return interfaceVersion_;
}

gen_conn::OTAStubRemoteEvent *OTAStub::initStubAdapter(const std::shared_ptr<gen_conn::OTAStubAdapter> &_adapter)
{
    CommonAPI::Stub<gen_conn::OTAStubAdapter, gen_conn::OTAStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}

void OTAStub::DownloadStatusRequest(const std::shared_ptr<CommonAPI::ClientId> _client,
                                    v0_conn::OTAStub::DownloadStatusRequestReply_t _reply)
{
    fprintf(stderr, "Not supposed to reach this stage in service layer tests...");
    assert(0);
}

void OTAStub::DownloadSoftwareSetRequest(const std::shared_ptr<CommonAPI::ClientId> _client,
                                         std::vector<v0_conn::OTATypes::UUID> _downloadList,
                                         DownloadSoftwareSetRequestReply_t _reply)
{
    fprintf(stderr, "Not supposed to reach this stage in service layer tests...");
    assert(0);
}

void OTAStub::DeletedSoftwareSetRequest(const std::shared_ptr<CommonAPI::ClientId> _client,
                                        std::vector<v0_conn::OTATypes::PartIdentifier> _deletedSoftware,
                                        DeletedSoftwareSetRequestReply_t _reply)
{
    fprintf(stderr, "Not supposed to reach this stage in service layer tests...");
    assert(0);
}

void OTAStub::CancelDownloadSetRequest(const std::shared_ptr<CommonAPI::ClientId> _client,
                                       v0_conn::OTATypes::UUID _software,
                                       v0_conn::OTAStub::CancelDownloadSetRequestReply_t _reply)
{
    fprintf(stderr, "Not supposed to reach this stage in service layer tests...");
    assert(0);
}

void OTAStub::fireDownloadStatusNotificationEvent(const v0_conn::OTATypes::DownloadStatus &_downloadStatus,
                                                  const std::vector<v0_conn::OTATypes::SoftwareProduct> &_downloadList)
{
    static_cast<MockOtaStub *>(this)->fireDownloadStatusNotificationEvent(_downloadStatus, _downloadList);
}

}  // namespace Connectivity
