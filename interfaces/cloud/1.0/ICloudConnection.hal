package vendor.volvocars.hardware.cloud@1.0;


import ICloudConnectionEventListener;
import ICloudConnectionDownloadResponseCallback;

interface ICloudConnection
{
    /**
     * Register an event listener. The daemon will notify the listener of its state when registered.
     * @param listener Event listener to be registered in the daemon
     */
    oneway registerCloudConnectionEventListener(ICloudConnectionEventListener listener);

    /**
    * Send GET request - blocking call
    * @param uri     Path to the resource
    * @param headers Http headers to be added to the request
    * @param timeout time in millisecond to wait for receiving the response
      //TODO: timeout value can be set to e.g. 0xFFFF which is different from http timeout error code
    * @returns responseData Response on the request
    **/
    doGetRequest(string uri, HttpHeaders headers, uint32_t timeout) generates (Response responseData);

    /**
     * Send a POST request to the cloud - blocking call
     * @param uri     Path to the resource
     * @param headers Http headers to be added to the request
     * @param body    The body of the erequest
     * @param timeout time in millisecond to wait for receiving the response
      //TODO: timeout value can be set to e.g. 0xFFFF which is different from http timeout error code
     * @returns responseData Response on the request
     **/
    doPostRequest(string uri, HttpHeaders headers, string body, uint32_t timeout) generates (Response responseData);


    /**
     * Download a file from to the cloud - Non-blocking call
     * @param uri           Path to the resource
     * @param headers       Http headers to be added to the request
     * @param file_path     Path where resource should be stored
     * @param timeout       Time in millisecond to wait for receiving the responses
     * @param callback      Callback method to call when download is complete
     **/
    downloadRequest(string uri, HttpHeaders headers, string file_path, uint32_t timeout,
                    ICloudConnectionDownloadResponseCallback callback);
};