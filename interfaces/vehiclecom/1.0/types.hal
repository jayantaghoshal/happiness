package vendor.volvocars.hardware.vehiclecom@1.0;

import vendor.volvocars.hardware.common@1.0::types;

enum OperationType : uint8_t
{
    /**
        The values of the OperationType enums below match those used by ip command bus
    */
    REQUEST = 0x00,
    SETREQUEST_NORETURN = 0x01,
    SETREQUEST = 0x02,
    NOTIFICATION_REQUEST = 0x03,
    RESPONSE = 0x04,
    NOTIFICATION = 0x05,
    NOTIFICATION_CYCLIC = 0x06,
    ERROR = 0xE0,
};

struct Header
{
    uint16_t      serviceID;
    uint16_t      operationID;
    OperationType operationType;
    bool          encoded;
    uint8_t       seqNbr;
};

struct Pdu
{
    Header header;
    vec<uint8_t> payload;
};

struct Msg
{
   Ecu ecu;
   Pdu pdu;
};

struct Error
{
    uint32_t errorCode;
    uint32_t errorInfo;
};

struct RetryInfo
{
   bool overrideDefault;
   uint8_t maxRetries;
   uint16_t retryTimeoutMs;
};

/**
 * A command result encapsulating whether the command succeeded and
 * an error string.
 */
struct CommandResult {
    bool success;
    string errMsg;
};

struct SubscribeResult {
    CommandResult commandResult;
    uint64_t subscriberId;
};