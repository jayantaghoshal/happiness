package vendor.volvocars.hardware.ipcb@1.0;

import IMessageCallback;
import IResponseCallback;

interface IIpcb
{
    /**
     * Subscribe to messages received on IPCB
     *
     * Use this to subscribe to receive messages not related to a request (e.g. notifications)
     *
     * @param serviceID ID of the service to subscribe to
     * @param operationID ID of the operation to subscribe to, use 0xFFFF to subscribe to all operation IDs for the service
     * @param operationTypes Vector of Operation Types to subscribe to. NOTE! Response is handled separately and MUST not be used here!
     * @param callbackHandler Instance handling callbacks for subscribed operation IDs
     */
    subscribeMessage(uint16_t serviceID, uint16_t operationID, vec<OperationType> operationTypes, IMessageCallback callbackHandler) generates (Status status);

    /**
     * Subscribe to responses received on IPCB
     *
     * Use this to subscribe to receive all responses related to requests (e.g. SetRequest) where a response is expected.
     *
     * @param serviceID ID of the service to subscribe to
     * @param operationID ID of the operation to subscribe to, use 0xFFFF to subscribe to all operation IDs for the service
     * @param callbackHandler Instance handling callbacks for subscribed operation IDs
     */
    subscribeResponse(uint16_t serviceID, uint16_t operationID, IResponseCallback callbackHandler) generates (Status status);

    /**
     * Unsubscribe to messages received on IPCB
     * @param serviceID ID of the service to unsubscribe to
     * @param operationID ID of the operation to unsubscribe to, use 0xFFFF to unsubscribe to all operation IDs for the service
     * @param callbackHandler Instance handling callbacks for subscribed operation IDs, used to unsubscribe the correct instance if multiple subscribers exist
     */
    unsubscribe(uint16_t serviceID, uint16_t operationID, IMessageCallback callbackHandler) generates (Status status);

    /**
     * Send message over IPCB
     * Never send messages with opType ACK, this will be sent automatically by the IPCB daemon instance
     * @param msg Message to send over IPCB.
     */
    oneway sendMessage(Msg msg);
};
