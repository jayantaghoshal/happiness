package vendor.volvocars.hardware.uds@1.0;

import DiagnosticCheckReport;
import Did;
import DidReadResult;
import DidWriteStatusCode;
import DtcId;
import RoutineId;
import SubscriptionHandle;

import RoutineExecutionStartRequest;
import RoutineExecutionStopRequest;
import RoutineExecutionResultsRequest;
import RoutineExecutionStartResponse;
import RoutineExecutionStopResponse;
import RoutineExecutionResultsResponse;


/**
 * Interface for poking into IDataCollector, needed for testing
 * components interaction with data collector without testing full diagnostic chain
 * It allows validating full scope of what component should implement.
 */
interface IDataCollectorTestPoint
{
    readDidValue(Did did) generates (DidReadResult result);
    writeDidValue(Did did, vec<uint8_t> data) generates (DidWriteStatusCode result);

    startAsynchronousRoutine(RoutineExecutionStartRequest request) generates (RoutineExecutionStartResponse result);
    stopAsynchronousRoutine(RoutineExecutionStopRequest request) generates (RoutineExecutionStopResponse result);
    getAsynchronousRoutineResults(RoutineExecutionResultsRequest request) generates (RoutineExecutionResultsResponse result);

    getLastDiagnosticTestResult(DtcId id) generates (DiagnosticCheckReport report);
};